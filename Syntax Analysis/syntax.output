Terminals unused in grammar

   T_EOF


State 305 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: global_declarations main_function

    2 global_declarations: global_declarations global_declaration
    3                    | %empty

    4 global_declaration: typedef_declaration
    5                   | enum_declaration
    6                   | class_declaration
    7                   | union_declaration
    8                   | global_var_declaration
    9                   | func_declaration

   10 $@1: %empty

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID $@1 dims T_SEMI

   12 typename: standard_type
   13         | T_ID

   14 standard_type: T_CHAR
   15              | T_INT
   16              | T_FLOAT
   17              | T_STRING
   18              | T_VOID

   19 listspec: T_LIST
   20         | %empty

   21 dims: dims dim
   22     | %empty

   23 dim: T_LBRACK T_ICONST T_RBRACK
   24    | T_LBRACK T_RBRACK

   25 enum_declaration: T_ENUM T_ID enum_body T_SEMI

   26 enum_body: T_LBRACE id_list T_RBRACE

   27 id_list: id_list T_COMMA T_ID initializer
   28        | T_ID initializer

   29 initializer: T_ASSIGN init_value
   30            | %empty

   31 init_value: expression
   32           | T_LBRACE init_values T_RBRACE

   33 expression: expression T_OROP expression
   34           | expression T_ANDOP expression
   35           | expression T_EQUOP expression
   36           | expression T_RELOP expression
   37           | expression T_ADDOP expression
   38           | expression T_MULOP expression
   39           | T_NOTOP expression
   40           | T_ADDOP expression
   41           | T_SIZEOP expression
   42           | T_INCDEC variable
   43           | variable T_INCDEC
   44           | variable
   45           | variable T_LPAREN expression_list T_RPAREN
   46           | T_LENGTH T_LPAREN general_expression T_RPAREN
   47           | T_NEW T_LPAREN general_expression T_RPAREN
   48           | constant
   49           | T_LPAREN general_expression T_RPAREN
   50           | T_LPAREN standard_type T_RPAREN
   51           | listexpression

   52 variable: variable T_LBRACK general_expression T_RBRACK
   53         | variable T_DOT T_ID
   54         | T_LISTFUNC T_LPAREN general_expression T_RPAREN
   55         | decltype T_ID
   56         | T_THIS

   57 general_expression: general_expression T_COMMA general_expression
   58                   | assignment

   59 assignment: variable T_ASSIGN assignment
   60           | expression

   61 expression_list: general_expression
   62                | %empty

   63 constant: T_CCONST
   64         | T_ICONST
   65         | T_FCONST
   66         | T_SCONST

   67 listexpression: T_LBRACK expression_list T_RBRACK

   68 init_values: init_values T_COMMA init_value
   69            | init_value

   70 class_declaration: T_CLASS T_ID class_body T_SEMI

   71 class_body: parent T_LBRACE members_methods T_RBRACE

   72 parent: T_COLON T_ID
   73       | %empty

   74 members_methods: members_methods access member_or_method
   75                | access member_or_method

   76 access: T_PRIVATE T_COLON
   77       | T_PROTECTED T_COLON
   78       | T_PUBLIC T_COLON
   79       | %empty

   80 member_or_method: member
   81                 | method

   82 member: var_declaration
   83       | anonymous_union

   84 var_declaration: typename variabledefs T_SEMI

   85 variabledefs: variabledefs T_COMMA variabledef
   86             | variabledef

   87 variabledef: listspec T_ID dims

   88 anonymous_union: T_UNION union_body T_SEMI

   89 union_body: T_LBRACE fields T_RBRACE

   90 fields: fields field
   91       | field

   92 field: var_declaration

   93 method: short_func_declaration

   94 short_func_declaration: short_par_func_header T_SEMI
   95                       | nopar_func_header T_SEMI

   96 short_par_func_header: func_header_start T_LPAREN parameter_types T_RPAREN

   97 func_header_start: typename listspec T_ID

   98 parameter_types: parameter_types T_COMMA typename pass_list_dims
   99                | typename pass_list_dims

  100 pass_list_dims: T_REFER
  101               | listspec dims

  102 nopar_func_header: func_header_start T_LPAREN T_RPAREN

  103 union_declaration: T_UNION T_ID union_body T_SEMI

  104 global_var_declaration: typename init_variabledefs T_SEMI

  105 init_variabledefs: init_variabledefs T_COMMA init_variabledef
  106                  | init_variabledef

  107 init_variabledef: variabledef initializer

  108 func_declaration: short_func_declaration
  109                 | full_func_declaration

  110 full_func_declaration: full_par_func_header T_LBRACE decl_statements T_RBRACE
  111                      | nopar_class_func_header T_LBRACE decl_statements T_RBRACE
  112                      | nopar_func_header T_LBRACE decl_statements T_RBRACE

  113 full_par_func_header: class_func_header_start T_LPAREN parameter_list T_RPAREN
  114                     | func_header_start T_LPAREN parameter_list T_RPAREN

  115 class_func_header_start: typename listspec func_class T_ID

  116 func_class: T_ID T_METH

  117 parameter_list: parameter_list T_COMMA typename pass_variabledef
  118               | typename pass_variabledef

  119 pass_variabledef: variabledef
  120                 | T_REFER T_ID

  121 nopar_class_func_header: class_func_header_start T_LPAREN T_RPAREN

  122 decl_statements: declarations statements
  123                | declarations
  124                | statements
  125                | %empty

  126 declarations: declarations decltype typename variabledefs T_SEMI
  127             | decltype typename variabledefs T_SEMI

  128 decltype: T_STATIC
  129         | %empty

  130 statements: statements statement
  131           | statement

  132 statement: expression_statement
  133          | if_statement
  134          | while_statement
  135          | for_statement
  136          | switch_statement
  137          | return_statement
  138          | io_statement
  139          | comp_statement
  140          | T_CONTINUE T_SEMI
  141          | T_BREAK T_SEMI
  142          | T_SEMI

  143 expression_statement: general_expression T_SEMI

  144 if_statement: T_IF T_LPAREN general_expression T_RPAREN statement if_tail

  145 if_tail: T_ELSE statement
  146        | %empty

  147 while_statement: T_WHILE T_LPAREN general_expression T_RPAREN statement

  148 for_statement: T_FOR T_LPAREN optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

  149 optexpr: general_expression
  150        | %empty

  151 switch_statement: T_SWITCH T_LPAREN general_expression T_RPAREN switch_tail

  152 switch_tail: T_LBRACE decl_cases T_RBRACE
  153            | single_casestatement

  154 decl_cases: declarations casestatements
  155           | declarations
  156           | casestatements
  157           | %empty

  158 casestatements: casestatements casestatement
  159               | casestatement

  160 casestatement: T_CASE constant T_COLON casestatement
  161              | T_CASE constant T_COLON statements
  162              | T_DEFAULT T_COLON statements

  163 single_casestatement: T_CASE constant T_COLON single_casestatement
  164                     | T_CASE constant T_COLON statement

  165 return_statement: T_RETURN optexpr T_SEMI

  166 io_statement: T_CIN T_INP in_list T_SEMI
  167             | T_COUT T_OUT out_list T_SEMI

  168 in_list: in_list T_INP in_item
  169        | in_item

  170 in_item: variable

  171 out_list: out_list T_OUT out_item
  172         | out_item

  173 out_item: general_expression

  174 comp_statement: T_LBRACE decl_statements T_RBRACE

  175 main_function: main_header T_LBRACE decl_statements T_RBRACE

  176 main_header: T_INP T_MAIN T_LPAREN T_RPAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
T_ICONST (258) 23 64
T_FCONST (259) 65
T_CCONST (260) 63
T_SCONST (261) 66
T_EOF (262)
T_TYPEDEF (263) 11
T_CHAR (264) 14
T_INT (265) 15
T_FLOAT (266) 16
T_STRING (267) 17
T_CLASS (268) 70
T_PRIVATE (269) 76
T_PROTECTED (270) 77
T_PUBLIC (271) 78
T_VOID (272) 18
T_STATIC (273) 128
T_UNION (274) 88 103
T_ENUM (275) 25
T_LIST (276) 19
T_CONTINUE (277) 140
T_BREAK (278) 141
T_IF (279) 144
T_ELSE (280) 145
T_WHILE (281) 147
T_FOR (282) 148
T_SWITCH (283) 151
T_CASE (284) 160 161 163 164
T_DEFAULT (285) 162
T_RETURN (286) 165
T_LENGTH (287) 46
T_NEW (288) 47
T_CIN (289) 166
T_COUT (290) 167
T_MAIN (291) 176
T_THIS (292) 56
T_OROP (293) 33
T_ANDOP (294) 34
T_EQUOP (295) 35
T_RELOP (296) 36
T_ADDOP (297) 37 40
T_MULOP (298) 38
T_NOTOP (299) 39
T_INCDEC (300) 42 43
T_SIZEOP (301) 41
T_LPAREN (302) 45 46 47 49 50 54 96 102 113 114 121 144 147 148 151
    176
T_RPAREN (303) 45 46 47 49 50 54 96 102 113 114 121 144 147 148 151
    176
T_SEMI (304) 11 25 70 84 88 94 95 103 104 126 127 140 141 142 143 148
    165 166 167
T_DOT (305) 53
T_COMMA (306) 27 57 68 85 98 105 117
T_ASSIGN (307) 29 59
T_COLON (308) 72 76 77 78 160 161 162 163 164
T_LBRACK (309) 23 24 52 67
T_RBRACK (310) 23 24 52 67
T_REFER (311) 100 120
T_LBRACE (312) 26 32 71 89 110 111 112 152 174 175
T_RBRACE (313) 26 32 71 89 110 111 112 152 174 175
T_METH (314) 116
T_INP (315) 166 168 176
T_OUT (316) 167 171
T_ID (317) 11 13 25 27 28 53 55 70 72 87 97 103 115 116 120
T_LISTFUNC (318) 54


Nonterminals, with rules where they appear

$accept (64)
    on left: 0
program (65)
    on left: 1, on right: 0
global_declarations (66)
    on left: 2 3, on right: 1 2
global_declaration (67)
    on left: 4 5 6 7 8 9, on right: 2
typedef_declaration (68)
    on left: 11, on right: 4
$@1 (69)
    on left: 10, on right: 11
typename (70)
    on left: 12 13, on right: 11 84 97 98 99 104 115 117 118 126 127
standard_type (71)
    on left: 14 15 16 17 18, on right: 12 50
listspec (72)
    on left: 19 20, on right: 11 87 97 101 115
dims (73)
    on left: 21 22, on right: 11 21 87 101
dim (74)
    on left: 23 24, on right: 21
enum_declaration (75)
    on left: 25, on right: 5
enum_body (76)
    on left: 26, on right: 25
id_list (77)
    on left: 27 28, on right: 26 27
initializer (78)
    on left: 29 30, on right: 27 28 107
init_value (79)
    on left: 31 32, on right: 29 68 69
expression (80)
    on left: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
    51, on right: 31 33 34 35 36 37 38 39 40 41 60
variable (81)
    on left: 52 53 54 55 56, on right: 42 43 44 45 52 53 59 170
general_expression (82)
    on left: 57 58, on right: 46 47 49 52 54 57 61 143 144 147 149
    151 173
assignment (83)
    on left: 59 60, on right: 58 59
expression_list (84)
    on left: 61 62, on right: 45 67
constant (85)
    on left: 63 64 65 66, on right: 48 160 161 163 164
listexpression (86)
    on left: 67, on right: 51
init_values (87)
    on left: 68 69, on right: 32 68
class_declaration (88)
    on left: 70, on right: 6
class_body (89)
    on left: 71, on right: 70
parent (90)
    on left: 72 73, on right: 71
members_methods (91)
    on left: 74 75, on right: 71 74
access (92)
    on left: 76 77 78 79, on right: 74 75
member_or_method (93)
    on left: 80 81, on right: 74 75
member (94)
    on left: 82 83, on right: 80
var_declaration (95)
    on left: 84, on right: 82 92
variabledefs (96)
    on left: 85 86, on right: 84 85 126 127
variabledef (97)
    on left: 87, on right: 85 86 107 119
anonymous_union (98)
    on left: 88, on right: 83
union_body (99)
    on left: 89, on right: 88 103
fields (100)
    on left: 90 91, on right: 89 90
field (101)
    on left: 92, on right: 90 91
method (102)
    on left: 93, on right: 81
short_func_declaration (103)
    on left: 94 95, on right: 93 108
short_par_func_header (104)
    on left: 96, on right: 94
func_header_start (105)
    on left: 97, on right: 96 102 114
parameter_types (106)
    on left: 98 99, on right: 96 98
pass_list_dims (107)
    on left: 100 101, on right: 98 99
nopar_func_header (108)
    on left: 102, on right: 95 112
union_declaration (109)
    on left: 103, on right: 7
global_var_declaration (110)
    on left: 104, on right: 8
init_variabledefs (111)
    on left: 105 106, on right: 104 105
init_variabledef (112)
    on left: 107, on right: 105 106
func_declaration (113)
    on left: 108 109, on right: 9
full_func_declaration (114)
    on left: 110 111 112, on right: 109
full_par_func_header (115)
    on left: 113 114, on right: 110
class_func_header_start (116)
    on left: 115, on right: 113 121
func_class (117)
    on left: 116, on right: 115
parameter_list (118)
    on left: 117 118, on right: 113 114 117
pass_variabledef (119)
    on left: 119 120, on right: 117 118
nopar_class_func_header (120)
    on left: 121, on right: 111
decl_statements (121)
    on left: 122 123 124 125, on right: 110 111 112 174 175
declarations (122)
    on left: 126 127, on right: 122 123 126 154 155
decltype (123)
    on left: 128 129, on right: 55 126 127
statements (124)
    on left: 130 131, on right: 122 124 130 161 162
statement (125)
    on left: 132 133 134 135 136 137 138 139 140 141 142, on right:
    130 131 144 145 147 148 164
expression_statement (126)
    on left: 143, on right: 132
if_statement (127)
    on left: 144, on right: 133
if_tail (128)
    on left: 145 146, on right: 144
while_statement (129)
    on left: 147, on right: 134
for_statement (130)
    on left: 148, on right: 135
optexpr (131)
    on left: 149 150, on right: 148 165
switch_statement (132)
    on left: 151, on right: 136
switch_tail (133)
    on left: 152 153, on right: 151
decl_cases (134)
    on left: 154 155 156 157, on right: 152
casestatements (135)
    on left: 158 159, on right: 154 156 158
casestatement (136)
    on left: 160 161 162, on right: 158 159 160
single_casestatement (137)
    on left: 163 164, on right: 153 163
return_statement (138)
    on left: 165, on right: 137
io_statement (139)
    on left: 166 167, on right: 138
in_list (140)
    on left: 168 169, on right: 166 168
in_item (141)
    on left: 170, on right: 168 169
out_list (142)
    on left: 171 172, on right: 167 171
out_item (143)
    on left: 173, on right: 171 172
comp_statement (144)
    on left: 174, on right: 139
main_function (145)
    on left: 175, on right: 1
main_header (146)
    on left: 176, on right: 175


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (global_declarations)

    program              go to state 1
    global_declarations  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_declarations . main_function
    2 global_declarations: global_declarations . global_declaration

    T_TYPEDEF  shift, and go to state 4
    T_CHAR     shift, and go to state 5
    T_INT      shift, and go to state 6
    T_FLOAT    shift, and go to state 7
    T_STRING   shift, and go to state 8
    T_CLASS    shift, and go to state 9
    T_VOID     shift, and go to state 10
    T_UNION    shift, and go to state 11
    T_ENUM     shift, and go to state 12
    T_INP      shift, and go to state 13
    T_ID       shift, and go to state 14

    global_declaration       go to state 15
    typedef_declaration      go to state 16
    typename                 go to state 17
    standard_type            go to state 18
    enum_declaration         go to state 19
    class_declaration        go to state 20
    short_func_declaration   go to state 21
    short_par_func_header    go to state 22
    func_header_start        go to state 23
    nopar_func_header        go to state 24
    union_declaration        go to state 25
    global_var_declaration   go to state 26
    func_declaration         go to state 27
    full_func_declaration    go to state 28
    full_par_func_header     go to state 29
    class_func_header_start  go to state 30
    nopar_class_func_header  go to state 31
    main_function            go to state 32
    main_header              go to state 33


State 3

    0 $accept: program $end .

    $default  accept


State 4

   11 typedef_declaration: T_TYPEDEF . typename listspec T_ID $@1 dims T_SEMI

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 14

    typename       go to state 34
    standard_type  go to state 18


State 5

   14 standard_type: T_CHAR .

    $default  reduce using rule 14 (standard_type)


State 6

   15 standard_type: T_INT .

    $default  reduce using rule 15 (standard_type)


State 7

   16 standard_type: T_FLOAT .

    $default  reduce using rule 16 (standard_type)


State 8

   17 standard_type: T_STRING .

    $default  reduce using rule 17 (standard_type)


State 9

   70 class_declaration: T_CLASS . T_ID class_body T_SEMI

    T_ID  shift, and go to state 35


State 10

   18 standard_type: T_VOID .

    $default  reduce using rule 18 (standard_type)


State 11

  103 union_declaration: T_UNION . T_ID union_body T_SEMI

    T_ID  shift, and go to state 36


State 12

   25 enum_declaration: T_ENUM . T_ID enum_body T_SEMI

    T_ID  shift, and go to state 37


State 13

  176 main_header: T_INP . T_MAIN T_LPAREN T_RPAREN

    T_MAIN  shift, and go to state 38


State 14

   13 typename: T_ID .

    $default  reduce using rule 13 (typename)


State 15

    2 global_declarations: global_declarations global_declaration .

    $default  reduce using rule 2 (global_declarations)


State 16

    4 global_declaration: typedef_declaration .

    $default  reduce using rule 4 (global_declaration)


State 17

   97 func_header_start: typename . listspec T_ID
  104 global_var_declaration: typename . init_variabledefs T_SEMI
  115 class_func_header_start: typename . listspec func_class T_ID

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec           go to state 40
    variabledef        go to state 41
    init_variabledefs  go to state 42
    init_variabledef   go to state 43


State 18

   12 typename: standard_type .

    $default  reduce using rule 12 (typename)


State 19

    5 global_declaration: enum_declaration .

    $default  reduce using rule 5 (global_declaration)


State 20

    6 global_declaration: class_declaration .

    $default  reduce using rule 6 (global_declaration)


State 21

  108 func_declaration: short_func_declaration .

    $default  reduce using rule 108 (func_declaration)


State 22

   94 short_func_declaration: short_par_func_header . T_SEMI

    T_SEMI  shift, and go to state 44


State 23

   96 short_par_func_header: func_header_start . T_LPAREN parameter_types T_RPAREN
  102 nopar_func_header: func_header_start . T_LPAREN T_RPAREN
  114 full_par_func_header: func_header_start . T_LPAREN parameter_list T_RPAREN

    T_LPAREN  shift, and go to state 45


State 24

   95 short_func_declaration: nopar_func_header . T_SEMI
  112 full_func_declaration: nopar_func_header . T_LBRACE decl_statements T_RBRACE

    T_SEMI    shift, and go to state 46
    T_LBRACE  shift, and go to state 47


State 25

    7 global_declaration: union_declaration .

    $default  reduce using rule 7 (global_declaration)


State 26

    8 global_declaration: global_var_declaration .

    $default  reduce using rule 8 (global_declaration)


State 27

    9 global_declaration: func_declaration .

    $default  reduce using rule 9 (global_declaration)


State 28

  109 func_declaration: full_func_declaration .

    $default  reduce using rule 109 (func_declaration)


State 29

  110 full_func_declaration: full_par_func_header . T_LBRACE decl_statements T_RBRACE

    T_LBRACE  shift, and go to state 48


State 30

  113 full_par_func_header: class_func_header_start . T_LPAREN parameter_list T_RPAREN
  121 nopar_class_func_header: class_func_header_start . T_LPAREN T_RPAREN

    T_LPAREN  shift, and go to state 49


State 31

  111 full_func_declaration: nopar_class_func_header . T_LBRACE decl_statements T_RBRACE

    T_LBRACE  shift, and go to state 50


State 32

    1 program: global_declarations main_function .

    $default  reduce using rule 1 (program)


State 33

  175 main_function: main_header . T_LBRACE decl_statements T_RBRACE

    T_LBRACE  shift, and go to state 51


State 34

   11 typedef_declaration: T_TYPEDEF typename . listspec T_ID $@1 dims T_SEMI

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec  go to state 52


State 35

   70 class_declaration: T_CLASS T_ID . class_body T_SEMI

    T_COLON  shift, and go to state 53

    $default  reduce using rule 73 (parent)

    class_body  go to state 54
    parent      go to state 55


State 36

  103 union_declaration: T_UNION T_ID . union_body T_SEMI

    T_LBRACE  shift, and go to state 56

    union_body  go to state 57


State 37

   25 enum_declaration: T_ENUM T_ID . enum_body T_SEMI

    T_LBRACE  shift, and go to state 58

    enum_body  go to state 59


State 38

  176 main_header: T_INP T_MAIN . T_LPAREN T_RPAREN

    T_LPAREN  shift, and go to state 60


State 39

   19 listspec: T_LIST .

    $default  reduce using rule 19 (listspec)


State 40

   87 variabledef: listspec . T_ID dims
   97 func_header_start: typename listspec . T_ID
  115 class_func_header_start: typename listspec . func_class T_ID

    T_ID  shift, and go to state 61

    func_class  go to state 62


State 41

  107 init_variabledef: variabledef . initializer

    T_ASSIGN  shift, and go to state 63

    $default  reduce using rule 30 (initializer)

    initializer  go to state 64


State 42

  104 global_var_declaration: typename init_variabledefs . T_SEMI
  105 init_variabledefs: init_variabledefs . T_COMMA init_variabledef

    T_SEMI   shift, and go to state 65
    T_COMMA  shift, and go to state 66


State 43

  106 init_variabledefs: init_variabledef .

    $default  reduce using rule 106 (init_variabledefs)


State 44

   94 short_func_declaration: short_par_func_header T_SEMI .

    $default  reduce using rule 94 (short_func_declaration)


State 45

   96 short_par_func_header: func_header_start T_LPAREN . parameter_types T_RPAREN
  102 nopar_func_header: func_header_start T_LPAREN . T_RPAREN
  114 full_par_func_header: func_header_start T_LPAREN . parameter_list T_RPAREN

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_RPAREN  shift, and go to state 67
    T_ID      shift, and go to state 14

    typename         go to state 68
    standard_type    go to state 18
    parameter_types  go to state 69
    parameter_list   go to state 70


State 46

   95 short_func_declaration: nopar_func_header T_SEMI .

    $default  reduce using rule 95 (short_func_declaration)


State 47

  112 full_func_declaration: nopar_func_header T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_CONTINUE  shift, and go to state 76
    T_BREAK     shift, and go to state 77
    T_IF        shift, and go to state 78
    T_WHILE     shift, and go to state 79
    T_FOR       shift, and go to state 80
    T_SWITCH    shift, and go to state 81
    T_RETURN    shift, and go to state 82
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_CIN       shift, and go to state 85
    T_COUT      shift, and go to state 86
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_SEMI      shift, and go to state 93
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 95
    T_LISTFUNC  shift, and go to state 96

    T_RBRACE  reduce using rule 125 (decl_statements)
    $default  reduce using rule 129 (decltype)

    expression            go to state 97
    variable              go to state 98
    general_expression    go to state 99
    assignment            go to state 100
    constant              go to state 101
    listexpression        go to state 102
    decl_statements       go to state 103
    declarations          go to state 104
    decltype              go to state 105
    statements            go to state 106
    statement             go to state 107
    expression_statement  go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 48

  110 full_func_declaration: full_par_func_header T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_CONTINUE  shift, and go to state 76
    T_BREAK     shift, and go to state 77
    T_IF        shift, and go to state 78
    T_WHILE     shift, and go to state 79
    T_FOR       shift, and go to state 80
    T_SWITCH    shift, and go to state 81
    T_RETURN    shift, and go to state 82
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_CIN       shift, and go to state 85
    T_COUT      shift, and go to state 86
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_SEMI      shift, and go to state 93
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 95
    T_LISTFUNC  shift, and go to state 96

    T_RBRACE  reduce using rule 125 (decl_statements)
    $default  reduce using rule 129 (decltype)

    expression            go to state 97
    variable              go to state 98
    general_expression    go to state 99
    assignment            go to state 100
    constant              go to state 101
    listexpression        go to state 102
    decl_statements       go to state 116
    declarations          go to state 104
    decltype              go to state 105
    statements            go to state 106
    statement             go to state 107
    expression_statement  go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 49

  113 full_par_func_header: class_func_header_start T_LPAREN . parameter_list T_RPAREN
  121 nopar_class_func_header: class_func_header_start T_LPAREN . T_RPAREN

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_RPAREN  shift, and go to state 117
    T_ID      shift, and go to state 14

    typename        go to state 118
    standard_type   go to state 18
    parameter_list  go to state 119


State 50

  111 full_func_declaration: nopar_class_func_header T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_CONTINUE  shift, and go to state 76
    T_BREAK     shift, and go to state 77
    T_IF        shift, and go to state 78
    T_WHILE     shift, and go to state 79
    T_FOR       shift, and go to state 80
    T_SWITCH    shift, and go to state 81
    T_RETURN    shift, and go to state 82
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_CIN       shift, and go to state 85
    T_COUT      shift, and go to state 86
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_SEMI      shift, and go to state 93
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 95
    T_LISTFUNC  shift, and go to state 96

    T_RBRACE  reduce using rule 125 (decl_statements)
    $default  reduce using rule 129 (decltype)

    expression            go to state 97
    variable              go to state 98
    general_expression    go to state 99
    assignment            go to state 100
    constant              go to state 101
    listexpression        go to state 102
    decl_statements       go to state 120
    declarations          go to state 104
    decltype              go to state 105
    statements            go to state 106
    statement             go to state 107
    expression_statement  go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 51

  175 main_function: main_header T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_CONTINUE  shift, and go to state 76
    T_BREAK     shift, and go to state 77
    T_IF        shift, and go to state 78
    T_WHILE     shift, and go to state 79
    T_FOR       shift, and go to state 80
    T_SWITCH    shift, and go to state 81
    T_RETURN    shift, and go to state 82
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_CIN       shift, and go to state 85
    T_COUT      shift, and go to state 86
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_SEMI      shift, and go to state 93
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 95
    T_LISTFUNC  shift, and go to state 96

    T_RBRACE  reduce using rule 125 (decl_statements)
    $default  reduce using rule 129 (decltype)

    expression            go to state 97
    variable              go to state 98
    general_expression    go to state 99
    assignment            go to state 100
    constant              go to state 101
    listexpression        go to state 102
    decl_statements       go to state 121
    declarations          go to state 104
    decltype              go to state 105
    statements            go to state 106
    statement             go to state 107
    expression_statement  go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 52

   11 typedef_declaration: T_TYPEDEF typename listspec . T_ID $@1 dims T_SEMI

    T_ID  shift, and go to state 122


State 53

   72 parent: T_COLON . T_ID

    T_ID  shift, and go to state 123


State 54

   70 class_declaration: T_CLASS T_ID class_body . T_SEMI

    T_SEMI  shift, and go to state 124


State 55

   71 class_body: parent . T_LBRACE members_methods T_RBRACE

    T_LBRACE  shift, and go to state 125


State 56

   89 union_body: T_LBRACE . fields T_RBRACE

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 14

    typename         go to state 126
    standard_type    go to state 18
    var_declaration  go to state 127
    fields           go to state 128
    field            go to state 129


State 57

  103 union_declaration: T_UNION T_ID union_body . T_SEMI

    T_SEMI  shift, and go to state 130


State 58

   26 enum_body: T_LBRACE . id_list T_RBRACE

    T_ID  shift, and go to state 131

    id_list  go to state 132


State 59

   25 enum_declaration: T_ENUM T_ID enum_body . T_SEMI

    T_SEMI  shift, and go to state 133


State 60

  176 main_header: T_INP T_MAIN T_LPAREN . T_RPAREN

    T_RPAREN  shift, and go to state 134


State 61

   87 variabledef: listspec T_ID . dims
   97 func_header_start: typename listspec T_ID .
  116 func_class: T_ID . T_METH

    T_METH  shift, and go to state 135

    T_LPAREN  reduce using rule 97 (func_header_start)
    $default  reduce using rule 22 (dims)

    dims  go to state 136


State 62

  115 class_func_header_start: typename listspec func_class . T_ID

    T_ID  shift, and go to state 137


State 63

   29 initializer: T_ASSIGN . init_value

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 138
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    init_value      go to state 139
    expression      go to state 140
    variable        go to state 141
    constant        go to state 101
    listexpression  go to state 102
    decltype        go to state 142


State 64

  107 init_variabledef: variabledef initializer .

    $default  reduce using rule 107 (init_variabledef)


State 65

  104 global_var_declaration: typename init_variabledefs T_SEMI .

    $default  reduce using rule 104 (global_var_declaration)


State 66

  105 init_variabledefs: init_variabledefs T_COMMA . init_variabledef

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec          go to state 143
    variabledef       go to state 41
    init_variabledef  go to state 144


State 67

  102 nopar_func_header: func_header_start T_LPAREN T_RPAREN .

    $default  reduce using rule 102 (nopar_func_header)


State 68

   99 parameter_types: typename . pass_list_dims
  118 parameter_list: typename . pass_variabledef

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 145

    $default  reduce using rule 20 (listspec)

    listspec          go to state 146
    variabledef       go to state 147
    pass_list_dims    go to state 148
    pass_variabledef  go to state 149


State 69

   96 short_par_func_header: func_header_start T_LPAREN parameter_types . T_RPAREN
   98 parameter_types: parameter_types . T_COMMA typename pass_list_dims

    T_RPAREN  shift, and go to state 150
    T_COMMA   shift, and go to state 151


State 70

  114 full_par_func_header: func_header_start T_LPAREN parameter_list . T_RPAREN
  117 parameter_list: parameter_list . T_COMMA typename pass_variabledef

    T_RPAREN  shift, and go to state 152
    T_COMMA   shift, and go to state 153


State 71

   64 constant: T_ICONST .

    $default  reduce using rule 64 (constant)


State 72

   65 constant: T_FCONST .

    $default  reduce using rule 65 (constant)


State 73

   63 constant: T_CCONST .

    $default  reduce using rule 63 (constant)


State 74

   66 constant: T_SCONST .

    $default  reduce using rule 66 (constant)


State 75

  128 decltype: T_STATIC .

    $default  reduce using rule 128 (decltype)


State 76

  140 statement: T_CONTINUE . T_SEMI

    T_SEMI  shift, and go to state 154


State 77

  141 statement: T_BREAK . T_SEMI

    T_SEMI  shift, and go to state 155


State 78

  144 if_statement: T_IF . T_LPAREN general_expression T_RPAREN statement if_tail

    T_LPAREN  shift, and go to state 156


State 79

  147 while_statement: T_WHILE . T_LPAREN general_expression T_RPAREN statement

    T_LPAREN  shift, and go to state 157


State 80

  148 for_statement: T_FOR . T_LPAREN optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

    T_LPAREN  shift, and go to state 158


State 81

  151 switch_statement: T_SWITCH . T_LPAREN general_expression T_RPAREN switch_tail

    T_LPAREN  shift, and go to state 159


State 82

  165 return_statement: T_RETURN . optexpr T_SEMI

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    T_SEMI    reduce using rule 150 (optexpr)
    $default  reduce using rule 129 (decltype)

    expression          go to state 97
    variable            go to state 98
    general_expression  go to state 160
    assignment          go to state 100
    constant            go to state 101
    listexpression      go to state 102
    decltype            go to state 142
    optexpr             go to state 161


State 83

   46 expression: T_LENGTH . T_LPAREN general_expression T_RPAREN

    T_LPAREN  shift, and go to state 162


State 84

   47 expression: T_NEW . T_LPAREN general_expression T_RPAREN

    T_LPAREN  shift, and go to state 163


State 85

  166 io_statement: T_CIN . T_INP in_list T_SEMI

    T_INP  shift, and go to state 164


State 86

  167 io_statement: T_COUT . T_OUT out_list T_SEMI

    T_OUT  shift, and go to state 165


State 87

   56 variable: T_THIS .

    $default  reduce using rule 56 (variable)


State 88

   40 expression: T_ADDOP . expression

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression      go to state 166
    variable        go to state 141
    constant        go to state 101
    listexpression  go to state 102
    decltype        go to state 142


State 89

   39 expression: T_NOTOP . expression

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression      go to state 167
    variable        go to state 141
    constant        go to state 101
    listexpression  go to state 102
    decltype        go to state 142


State 90

   42 expression: T_INCDEC . variable

    T_STATIC    shift, and go to state 75
    T_THIS      shift, and go to state 87
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    variable  go to state 168
    decltype  go to state 142


State 91

   41 expression: T_SIZEOP . expression

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression      go to state 169
    variable        go to state 141
    constant        go to state 101
    listexpression  go to state 102
    decltype        go to state 142


State 92

   49 expression: T_LPAREN . general_expression T_RPAREN
   50           | T_LPAREN . standard_type T_RPAREN

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_FLOAT     shift, and go to state 7
    T_STRING    shift, and go to state 8
    T_VOID      shift, and go to state 10
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    standard_type       go to state 170
    expression          go to state 97
    variable            go to state 98
    general_expression  go to state 171
    assignment          go to state 100
    constant            go to state 101
    listexpression      go to state 102
    decltype            go to state 142


State 93

  142 statement: T_SEMI .

    $default  reduce using rule 142 (statement)


State 94

   67 listexpression: T_LBRACK . expression_list T_RBRACK

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    T_ID      reduce using rule 129 (decltype)
    $default  reduce using rule 62 (expression_list)

    expression          go to state 97
    variable            go to state 98
    general_expression  go to state 172
    assignment          go to state 100
    expression_list     go to state 173
    constant            go to state 101
    listexpression      go to state 102
    decltype            go to state 142


State 95

  174 comp_statement: T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_CONTINUE  shift, and go to state 76
    T_BREAK     shift, and go to state 77
    T_IF        shift, and go to state 78
    T_WHILE     shift, and go to state 79
    T_FOR       shift, and go to state 80
    T_SWITCH    shift, and go to state 81
    T_RETURN    shift, and go to state 82
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_CIN       shift, and go to state 85
    T_COUT      shift, and go to state 86
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_SEMI      shift, and go to state 93
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 95
    T_LISTFUNC  shift, and go to state 96

    T_RBRACE  reduce using rule 125 (decl_statements)
    $default  reduce using rule 129 (decltype)

    expression            go to state 97
    variable              go to state 98
    general_expression    go to state 99
    assignment            go to state 100
    constant              go to state 101
    listexpression        go to state 102
    decl_statements       go to state 174
    declarations          go to state 104
    decltype              go to state 105
    statements            go to state 106
    statement             go to state 107
    expression_statement  go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 96

   54 variable: T_LISTFUNC . T_LPAREN general_expression T_RPAREN

    T_LPAREN  shift, and go to state 175


State 97

   33 expression: expression . T_OROP expression
   34           | expression . T_ANDOP expression
   35           | expression . T_EQUOP expression
   36           | expression . T_RELOP expression
   37           | expression . T_ADDOP expression
   38           | expression . T_MULOP expression
   60 assignment: expression .

    T_OROP   shift, and go to state 176
    T_ANDOP  shift, and go to state 177
    T_EQUOP  shift, and go to state 178
    T_RELOP  shift, and go to state 179
    T_ADDOP  shift, and go to state 180
    T_MULOP  shift, and go to state 181

    $default  reduce using rule 60 (assignment)


State 98

   43 expression: variable . T_INCDEC
   44           | variable .
   45           | variable . T_LPAREN expression_list T_RPAREN
   52 variable: variable . T_LBRACK general_expression T_RBRACK
   53         | variable . T_DOT T_ID
   59 assignment: variable . T_ASSIGN assignment

    T_INCDEC  shift, and go to state 182
    T_LPAREN  shift, and go to state 183
    T_DOT     shift, and go to state 184
    T_ASSIGN  shift, and go to state 185
    T_LBRACK  shift, and go to state 186

    $default  reduce using rule 44 (expression)


State 99

   57 general_expression: general_expression . T_COMMA general_expression
  143 expression_statement: general_expression . T_SEMI

    T_SEMI   shift, and go to state 187
    T_COMMA  shift, and go to state 188


State 100

   58 general_expression: assignment .

    $default  reduce using rule 58 (general_expression)


State 101

   48 expression: constant .

    $default  reduce using rule 48 (expression)


State 102

   51 expression: listexpression .

    $default  reduce using rule 51 (expression)


State 103

  112 full_func_declaration: nopar_func_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 189


State 104

  122 decl_statements: declarations . statements
  123                | declarations .
  126 declarations: declarations . decltype typename variabledefs T_SEMI

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_CONTINUE  shift, and go to state 76
    T_BREAK     shift, and go to state 77
    T_IF        shift, and go to state 78
    T_WHILE     shift, and go to state 79
    T_FOR       shift, and go to state 80
    T_SWITCH    shift, and go to state 81
    T_RETURN    shift, and go to state 82
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_CIN       shift, and go to state 85
    T_COUT      shift, and go to state 86
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_SEMI      shift, and go to state 93
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 95
    T_LISTFUNC  shift, and go to state 96

    T_RBRACE  reduce using rule 123 (decl_statements)
    $default  reduce using rule 129 (decltype)

    expression            go to state 97
    variable              go to state 98
    general_expression    go to state 99
    assignment            go to state 100
    constant              go to state 101
    listexpression        go to state 102
    decltype              go to state 190
    statements            go to state 191
    statement             go to state 107
    expression_statement  go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 105

   55 variable: decltype . T_ID
  127 declarations: decltype . typename variabledefs T_SEMI

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 192

    typename       go to state 193
    standard_type  go to state 18


State 106

  124 decl_statements: statements .
  130 statements: statements . statement

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_CONTINUE  shift, and go to state 76
    T_BREAK     shift, and go to state 77
    T_IF        shift, and go to state 78
    T_WHILE     shift, and go to state 79
    T_FOR       shift, and go to state 80
    T_SWITCH    shift, and go to state 81
    T_RETURN    shift, and go to state 82
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_CIN       shift, and go to state 85
    T_COUT      shift, and go to state 86
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_SEMI      shift, and go to state 93
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 95
    T_LISTFUNC  shift, and go to state 96

    T_ID      reduce using rule 129 (decltype)
    $default  reduce using rule 124 (decl_statements)

    expression            go to state 97
    variable              go to state 98
    general_expression    go to state 99
    assignment            go to state 100
    constant              go to state 101
    listexpression        go to state 102
    decltype              go to state 142
    statement             go to state 194
    expression_statement  go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 107

  131 statements: statement .

    $default  reduce using rule 131 (statements)


State 108

  132 statement: expression_statement .

    $default  reduce using rule 132 (statement)


State 109

  133 statement: if_statement .

    $default  reduce using rule 133 (statement)


State 110

  134 statement: while_statement .

    $default  reduce using rule 134 (statement)


State 111

  135 statement: for_statement .

    $default  reduce using rule 135 (statement)


State 112

  136 statement: switch_statement .

    $default  reduce using rule 136 (statement)


State 113

  137 statement: return_statement .

    $default  reduce using rule 137 (statement)


State 114

  138 statement: io_statement .

    $default  reduce using rule 138 (statement)


State 115

  139 statement: comp_statement .

    $default  reduce using rule 139 (statement)


State 116

  110 full_func_declaration: full_par_func_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 195


State 117

  121 nopar_class_func_header: class_func_header_start T_LPAREN T_RPAREN .

    $default  reduce using rule 121 (nopar_class_func_header)


State 118

  118 parameter_list: typename . pass_variabledef

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 196

    $default  reduce using rule 20 (listspec)

    listspec          go to state 143
    variabledef       go to state 147
    pass_variabledef  go to state 149


State 119

  113 full_par_func_header: class_func_header_start T_LPAREN parameter_list . T_RPAREN
  117 parameter_list: parameter_list . T_COMMA typename pass_variabledef

    T_RPAREN  shift, and go to state 197
    T_COMMA   shift, and go to state 153


State 120

  111 full_func_declaration: nopar_class_func_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 198


State 121

  175 main_function: main_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 199


State 122

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID . $@1 dims T_SEMI

    $default  reduce using rule 10 ($@1)

    $@1  go to state 200


State 123

   72 parent: T_COLON T_ID .

    $default  reduce using rule 72 (parent)


State 124

   70 class_declaration: T_CLASS T_ID class_body T_SEMI .

    $default  reduce using rule 70 (class_declaration)


State 125

   71 class_body: parent T_LBRACE . members_methods T_RBRACE

    T_PRIVATE    shift, and go to state 201
    T_PROTECTED  shift, and go to state 202
    T_PUBLIC     shift, and go to state 203

    $default  reduce using rule 79 (access)

    members_methods  go to state 204
    access           go to state 205


State 126

   84 var_declaration: typename . variabledefs T_SEMI

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec      go to state 143
    variabledefs  go to state 206
    variabledef   go to state 207


State 127

   92 field: var_declaration .

    $default  reduce using rule 92 (field)


State 128

   89 union_body: T_LBRACE fields . T_RBRACE
   90 fields: fields . field

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_RBRACE  shift, and go to state 208
    T_ID      shift, and go to state 14

    typename         go to state 126
    standard_type    go to state 18
    var_declaration  go to state 127
    field            go to state 209


State 129

   91 fields: field .

    $default  reduce using rule 91 (fields)


State 130

  103 union_declaration: T_UNION T_ID union_body T_SEMI .

    $default  reduce using rule 103 (union_declaration)


State 131

   28 id_list: T_ID . initializer

    T_ASSIGN  shift, and go to state 63

    $default  reduce using rule 30 (initializer)

    initializer  go to state 210


State 132

   26 enum_body: T_LBRACE id_list . T_RBRACE
   27 id_list: id_list . T_COMMA T_ID initializer

    T_COMMA   shift, and go to state 211
    T_RBRACE  shift, and go to state 212


State 133

   25 enum_declaration: T_ENUM T_ID enum_body T_SEMI .

    $default  reduce using rule 25 (enum_declaration)


State 134

  176 main_header: T_INP T_MAIN T_LPAREN T_RPAREN .

    $default  reduce using rule 176 (main_header)


State 135

  116 func_class: T_ID T_METH .

    $default  reduce using rule 116 (func_class)


State 136

   21 dims: dims . dim
   87 variabledef: listspec T_ID dims .

    T_LBRACK  shift, and go to state 213

    $default  reduce using rule 87 (variabledef)

    dim  go to state 214


State 137

  115 class_func_header_start: typename listspec func_class T_ID .

    $default  reduce using rule 115 (class_func_header_start)


State 138

   32 init_value: T_LBRACE . init_values T_RBRACE

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 138
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    init_value      go to state 215
    expression      go to state 140
    variable        go to state 141
    constant        go to state 101
    listexpression  go to state 102
    init_values     go to state 216
    decltype        go to state 142


State 139

   29 initializer: T_ASSIGN init_value .

    $default  reduce using rule 29 (initializer)


State 140

   31 init_value: expression .
   33 expression: expression . T_OROP expression
   34           | expression . T_ANDOP expression
   35           | expression . T_EQUOP expression
   36           | expression . T_RELOP expression
   37           | expression . T_ADDOP expression
   38           | expression . T_MULOP expression

    T_OROP   shift, and go to state 176
    T_ANDOP  shift, and go to state 177
    T_EQUOP  shift, and go to state 178
    T_RELOP  shift, and go to state 179
    T_ADDOP  shift, and go to state 180
    T_MULOP  shift, and go to state 181

    $default  reduce using rule 31 (init_value)


State 141

   43 expression: variable . T_INCDEC
   44           | variable .
   45           | variable . T_LPAREN expression_list T_RPAREN
   52 variable: variable . T_LBRACK general_expression T_RBRACK
   53         | variable . T_DOT T_ID

    T_INCDEC  shift, and go to state 182
    T_LPAREN  shift, and go to state 183
    T_DOT     shift, and go to state 184
    T_LBRACK  shift, and go to state 186

    $default  reduce using rule 44 (expression)


State 142

   55 variable: decltype . T_ID

    T_ID  shift, and go to state 217


State 143

   87 variabledef: listspec . T_ID dims

    T_ID  shift, and go to state 218


State 144

  105 init_variabledefs: init_variabledefs T_COMMA init_variabledef .

    $default  reduce using rule 105 (init_variabledefs)


State 145

  100 pass_list_dims: T_REFER .
  120 pass_variabledef: T_REFER . T_ID

    T_ID  shift, and go to state 219

    $default  reduce using rule 100 (pass_list_dims)


State 146

   87 variabledef: listspec . T_ID dims
  101 pass_list_dims: listspec . dims

    T_ID  shift, and go to state 218

    $default  reduce using rule 22 (dims)

    dims  go to state 220


State 147

  119 pass_variabledef: variabledef .

    $default  reduce using rule 119 (pass_variabledef)


State 148

   99 parameter_types: typename pass_list_dims .

    $default  reduce using rule 99 (parameter_types)


State 149

  118 parameter_list: typename pass_variabledef .

    $default  reduce using rule 118 (parameter_list)


State 150

   96 short_par_func_header: func_header_start T_LPAREN parameter_types T_RPAREN .

    $default  reduce using rule 96 (short_par_func_header)


State 151

   98 parameter_types: parameter_types T_COMMA . typename pass_list_dims

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 14

    typename       go to state 221
    standard_type  go to state 18


State 152

  114 full_par_func_header: func_header_start T_LPAREN parameter_list T_RPAREN .

    $default  reduce using rule 114 (full_par_func_header)


State 153

  117 parameter_list: parameter_list T_COMMA . typename pass_variabledef

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 14

    typename       go to state 222
    standard_type  go to state 18


State 154

  140 statement: T_CONTINUE T_SEMI .

    $default  reduce using rule 140 (statement)


State 155

  141 statement: T_BREAK T_SEMI .

    $default  reduce using rule 141 (statement)


State 156

  144 if_statement: T_IF T_LPAREN . general_expression T_RPAREN statement if_tail

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression          go to state 97
    variable            go to state 98
    general_expression  go to state 223
    assignment          go to state 100
    constant            go to state 101
    listexpression      go to state 102
    decltype            go to state 142


State 157

  147 while_statement: T_WHILE T_LPAREN . general_expression T_RPAREN statement

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression          go to state 97
    variable            go to state 98
    general_expression  go to state 224
    assignment          go to state 100
    constant            go to state 101
    listexpression      go to state 102
    decltype            go to state 142


State 158

  148 for_statement: T_FOR T_LPAREN . optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    T_SEMI    reduce using rule 150 (optexpr)
    $default  reduce using rule 129 (decltype)

    expression          go to state 97
    variable            go to state 98
    general_expression  go to state 160
    assignment          go to state 100
    constant            go to state 101
    listexpression      go to state 102
    decltype            go to state 142
    optexpr             go to state 225


State 159

  151 switch_statement: T_SWITCH T_LPAREN . general_expression T_RPAREN switch_tail

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression          go to state 97
    variable            go to state 98
    general_expression  go to state 226
    assignment          go to state 100
    constant            go to state 101
    listexpression      go to state 102
    decltype            go to state 142


State 160

   57 general_expression: general_expression . T_COMMA general_expression
  149 optexpr: general_expression .

    T_COMMA  shift, and go to state 188

    $default  reduce using rule 149 (optexpr)


State 161

  165 return_statement: T_RETURN optexpr . T_SEMI

    T_SEMI  shift, and go to state 227


State 162

   46 expression: T_LENGTH T_LPAREN . general_expression T_RPAREN

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression          go to state 97
    variable            go to state 98
    general_expression  go to state 228
    assignment          go to state 100
    constant            go to state 101
    listexpression      go to state 102
    decltype            go to state 142


State 163

   47 expression: T_NEW T_LPAREN . general_expression T_RPAREN

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression          go to state 97
    variable            go to state 98
    general_expression  go to state 229
    assignment          go to state 100
    constant            go to state 101
    listexpression      go to state 102
    decltype            go to state 142


State 164

  166 io_statement: T_CIN T_INP . in_list T_SEMI

    T_STATIC    shift, and go to state 75
    T_THIS      shift, and go to state 87
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    variable  go to state 230
    decltype  go to state 142
    in_list   go to state 231
    in_item   go to state 232


State 165

  167 io_statement: T_COUT T_OUT . out_list T_SEMI

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression          go to state 97
    variable            go to state 98
    general_expression  go to state 233
    assignment          go to state 100
    constant            go to state 101
    listexpression      go to state 102
    decltype            go to state 142
    out_list            go to state 234
    out_item            go to state 235


State 166

   33 expression: expression . T_OROP expression
   34           | expression . T_ANDOP expression
   35           | expression . T_EQUOP expression
   36           | expression . T_RELOP expression
   37           | expression . T_ADDOP expression
   38           | expression . T_MULOP expression
   40           | T_ADDOP expression .

    T_MULOP  shift, and go to state 181

    $default  reduce using rule 40 (expression)


State 167

   33 expression: expression . T_OROP expression
   34           | expression . T_ANDOP expression
   35           | expression . T_EQUOP expression
   36           | expression . T_RELOP expression
   37           | expression . T_ADDOP expression
   38           | expression . T_MULOP expression
   39           | T_NOTOP expression .

    $default  reduce using rule 39 (expression)


State 168

   42 expression: T_INCDEC variable .
   52 variable: variable . T_LBRACK general_expression T_RBRACK
   53         | variable . T_DOT T_ID

    T_DOT     shift, and go to state 184
    T_LBRACK  shift, and go to state 186

    $default  reduce using rule 42 (expression)


State 169

   33 expression: expression . T_OROP expression
   34           | expression . T_ANDOP expression
   35           | expression . T_EQUOP expression
   36           | expression . T_RELOP expression
   37           | expression . T_ADDOP expression
   38           | expression . T_MULOP expression
   41           | T_SIZEOP expression .

    $default  reduce using rule 41 (expression)


State 170

   50 expression: T_LPAREN standard_type . T_RPAREN

    T_RPAREN  shift, and go to state 236


State 171

   49 expression: T_LPAREN general_expression . T_RPAREN
   57 general_expression: general_expression . T_COMMA general_expression

    T_RPAREN  shift, and go to state 237
    T_COMMA   shift, and go to state 188


State 172

   57 general_expression: general_expression . T_COMMA general_expression
   61 expression_list: general_expression .

    T_COMMA  shift, and go to state 188

    $default  reduce using rule 61 (expression_list)


State 173

   67 listexpression: T_LBRACK expression_list . T_RBRACK

    T_RBRACK  shift, and go to state 238


State 174

  174 comp_statement: T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 239


State 175

   54 variable: T_LISTFUNC T_LPAREN . general_expression T_RPAREN

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression          go to state 97
    variable            go to state 98
    general_expression  go to state 240
    assignment          go to state 100
    constant            go to state 101
    listexpression      go to state 102
    decltype            go to state 142


State 176

   33 expression: expression T_OROP . expression

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression      go to state 241
    variable        go to state 141
    constant        go to state 101
    listexpression  go to state 102
    decltype        go to state 142


State 177

   34 expression: expression T_ANDOP . expression

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression      go to state 242
    variable        go to state 141
    constant        go to state 101
    listexpression  go to state 102
    decltype        go to state 142


State 178

   35 expression: expression T_EQUOP . expression

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression      go to state 243
    variable        go to state 141
    constant        go to state 101
    listexpression  go to state 102
    decltype        go to state 142


State 179

   36 expression: expression T_RELOP . expression

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression      go to state 244
    variable        go to state 141
    constant        go to state 101
    listexpression  go to state 102
    decltype        go to state 142


State 180

   37 expression: expression T_ADDOP . expression

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression      go to state 245
    variable        go to state 141
    constant        go to state 101
    listexpression  go to state 102
    decltype        go to state 142


State 181

   38 expression: expression T_MULOP . expression

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression      go to state 246
    variable        go to state 141
    constant        go to state 101
    listexpression  go to state 102
    decltype        go to state 142


State 182

   43 expression: variable T_INCDEC .

    $default  reduce using rule 43 (expression)


State 183

   45 expression: variable T_LPAREN . expression_list T_RPAREN

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    T_ID      reduce using rule 129 (decltype)
    $default  reduce using rule 62 (expression_list)

    expression          go to state 97
    variable            go to state 98
    general_expression  go to state 172
    assignment          go to state 100
    expression_list     go to state 247
    constant            go to state 101
    listexpression      go to state 102
    decltype            go to state 142


State 184

   53 variable: variable T_DOT . T_ID

    T_ID  shift, and go to state 248


State 185

   59 assignment: variable T_ASSIGN . assignment

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression      go to state 97
    variable        go to state 98
    assignment      go to state 249
    constant        go to state 101
    listexpression  go to state 102
    decltype        go to state 142


State 186

   52 variable: variable T_LBRACK . general_expression T_RBRACK

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression          go to state 97
    variable            go to state 98
    general_expression  go to state 250
    assignment          go to state 100
    constant            go to state 101
    listexpression      go to state 102
    decltype            go to state 142


State 187

  143 expression_statement: general_expression T_SEMI .

    $default  reduce using rule 143 (expression_statement)


State 188

   57 general_expression: general_expression T_COMMA . general_expression

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression          go to state 97
    variable            go to state 98
    general_expression  go to state 251
    assignment          go to state 100
    constant            go to state 101
    listexpression      go to state 102
    decltype            go to state 142


State 189

  112 full_func_declaration: nopar_func_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 112 (full_func_declaration)


State 190

   55 variable: decltype . T_ID
  126 declarations: declarations decltype . typename variabledefs T_SEMI

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 192

    typename       go to state 252
    standard_type  go to state 18


State 191

  122 decl_statements: declarations statements .
  130 statements: statements . statement

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_CONTINUE  shift, and go to state 76
    T_BREAK     shift, and go to state 77
    T_IF        shift, and go to state 78
    T_WHILE     shift, and go to state 79
    T_FOR       shift, and go to state 80
    T_SWITCH    shift, and go to state 81
    T_RETURN    shift, and go to state 82
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_CIN       shift, and go to state 85
    T_COUT      shift, and go to state 86
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_SEMI      shift, and go to state 93
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 95
    T_LISTFUNC  shift, and go to state 96

    T_ID      reduce using rule 129 (decltype)
    $default  reduce using rule 122 (decl_statements)

    expression            go to state 97
    variable              go to state 98
    general_expression    go to state 99
    assignment            go to state 100
    constant              go to state 101
    listexpression        go to state 102
    decltype              go to state 142
    statement             go to state 194
    expression_statement  go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 192

   13 typename: T_ID .
   55 variable: decltype T_ID .

    T_LIST    reduce using rule 13 (typename)
    T_ID      reduce using rule 13 (typename)
    $default  reduce using rule 55 (variable)


State 193

  127 declarations: decltype typename . variabledefs T_SEMI

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec      go to state 143
    variabledefs  go to state 253
    variabledef   go to state 207


State 194

  130 statements: statements statement .

    $default  reduce using rule 130 (statements)


State 195

  110 full_func_declaration: full_par_func_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 110 (full_func_declaration)


State 196

  120 pass_variabledef: T_REFER . T_ID

    T_ID  shift, and go to state 219


State 197

  113 full_par_func_header: class_func_header_start T_LPAREN parameter_list T_RPAREN .

    $default  reduce using rule 113 (full_par_func_header)


State 198

  111 full_func_declaration: nopar_class_func_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 111 (full_func_declaration)


State 199

  175 main_function: main_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 175 (main_function)


State 200

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID $@1 . dims T_SEMI

    $default  reduce using rule 22 (dims)

    dims  go to state 254


State 201

   76 access: T_PRIVATE . T_COLON

    T_COLON  shift, and go to state 255


State 202

   77 access: T_PROTECTED . T_COLON

    T_COLON  shift, and go to state 256


State 203

   78 access: T_PUBLIC . T_COLON

    T_COLON  shift, and go to state 257


State 204

   71 class_body: parent T_LBRACE members_methods . T_RBRACE
   74 members_methods: members_methods . access member_or_method

    T_PRIVATE    shift, and go to state 201
    T_PROTECTED  shift, and go to state 202
    T_PUBLIC     shift, and go to state 203
    T_RBRACE     shift, and go to state 258

    $default  reduce using rule 79 (access)

    access  go to state 259


State 205

   75 members_methods: access . member_or_method

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_UNION   shift, and go to state 260
    T_ID      shift, and go to state 14

    typename                go to state 261
    standard_type           go to state 18
    member_or_method        go to state 262
    member                  go to state 263
    var_declaration         go to state 264
    anonymous_union         go to state 265
    method                  go to state 266
    short_func_declaration  go to state 267
    short_par_func_header   go to state 22
    func_header_start       go to state 268
    nopar_func_header       go to state 269


State 206

   84 var_declaration: typename variabledefs . T_SEMI
   85 variabledefs: variabledefs . T_COMMA variabledef

    T_SEMI   shift, and go to state 270
    T_COMMA  shift, and go to state 271


State 207

   86 variabledefs: variabledef .

    $default  reduce using rule 86 (variabledefs)


State 208

   89 union_body: T_LBRACE fields T_RBRACE .

    $default  reduce using rule 89 (union_body)


State 209

   90 fields: fields field .

    $default  reduce using rule 90 (fields)


State 210

   28 id_list: T_ID initializer .

    $default  reduce using rule 28 (id_list)


State 211

   27 id_list: id_list T_COMMA . T_ID initializer

    T_ID  shift, and go to state 272


State 212

   26 enum_body: T_LBRACE id_list T_RBRACE .

    $default  reduce using rule 26 (enum_body)


State 213

   23 dim: T_LBRACK . T_ICONST T_RBRACK
   24    | T_LBRACK . T_RBRACK

    T_ICONST  shift, and go to state 273
    T_RBRACK  shift, and go to state 274


State 214

   21 dims: dims dim .

    $default  reduce using rule 21 (dims)


State 215

   69 init_values: init_value .

    $default  reduce using rule 69 (init_values)


State 216

   32 init_value: T_LBRACE init_values . T_RBRACE
   68 init_values: init_values . T_COMMA init_value

    T_COMMA   shift, and go to state 275
    T_RBRACE  shift, and go to state 276


State 217

   55 variable: decltype T_ID .

    $default  reduce using rule 55 (variable)


State 218

   87 variabledef: listspec T_ID . dims

    $default  reduce using rule 22 (dims)

    dims  go to state 136


State 219

  120 pass_variabledef: T_REFER T_ID .

    $default  reduce using rule 120 (pass_variabledef)


State 220

   21 dims: dims . dim
  101 pass_list_dims: listspec dims .

    T_LBRACK  shift, and go to state 213

    $default  reduce using rule 101 (pass_list_dims)

    dim  go to state 214


State 221

   98 parameter_types: parameter_types T_COMMA typename . pass_list_dims

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 277

    $default  reduce using rule 20 (listspec)

    listspec        go to state 278
    pass_list_dims  go to state 279


State 222

  117 parameter_list: parameter_list T_COMMA typename . pass_variabledef

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 196

    $default  reduce using rule 20 (listspec)

    listspec          go to state 143
    variabledef       go to state 147
    pass_variabledef  go to state 280


State 223

   57 general_expression: general_expression . T_COMMA general_expression
  144 if_statement: T_IF T_LPAREN general_expression . T_RPAREN statement if_tail

    T_RPAREN  shift, and go to state 281
    T_COMMA   shift, and go to state 188


State 224

   57 general_expression: general_expression . T_COMMA general_expression
  147 while_statement: T_WHILE T_LPAREN general_expression . T_RPAREN statement

    T_RPAREN  shift, and go to state 282
    T_COMMA   shift, and go to state 188


State 225

  148 for_statement: T_FOR T_LPAREN optexpr . T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

    T_SEMI  shift, and go to state 283


State 226

   57 general_expression: general_expression . T_COMMA general_expression
  151 switch_statement: T_SWITCH T_LPAREN general_expression . T_RPAREN switch_tail

    T_RPAREN  shift, and go to state 284
    T_COMMA   shift, and go to state 188


State 227

  165 return_statement: T_RETURN optexpr T_SEMI .

    $default  reduce using rule 165 (return_statement)


State 228

   46 expression: T_LENGTH T_LPAREN general_expression . T_RPAREN
   57 general_expression: general_expression . T_COMMA general_expression

    T_RPAREN  shift, and go to state 285
    T_COMMA   shift, and go to state 188


State 229

   47 expression: T_NEW T_LPAREN general_expression . T_RPAREN
   57 general_expression: general_expression . T_COMMA general_expression

    T_RPAREN  shift, and go to state 286
    T_COMMA   shift, and go to state 188


State 230

   52 variable: variable . T_LBRACK general_expression T_RBRACK
   53         | variable . T_DOT T_ID
  170 in_item: variable .

    T_DOT     shift, and go to state 184
    T_LBRACK  shift, and go to state 186

    $default  reduce using rule 170 (in_item)


State 231

  166 io_statement: T_CIN T_INP in_list . T_SEMI
  168 in_list: in_list . T_INP in_item

    T_SEMI  shift, and go to state 287
    T_INP   shift, and go to state 288


State 232

  169 in_list: in_item .

    $default  reduce using rule 169 (in_list)


State 233

   57 general_expression: general_expression . T_COMMA general_expression
  173 out_item: general_expression .

    T_COMMA  shift, and go to state 188

    $default  reduce using rule 173 (out_item)


State 234

  167 io_statement: T_COUT T_OUT out_list . T_SEMI
  171 out_list: out_list . T_OUT out_item

    T_SEMI  shift, and go to state 289
    T_OUT   shift, and go to state 290


State 235

  172 out_list: out_item .

    $default  reduce using rule 172 (out_list)


State 236

   50 expression: T_LPAREN standard_type T_RPAREN .

    $default  reduce using rule 50 (expression)


State 237

   49 expression: T_LPAREN general_expression T_RPAREN .

    $default  reduce using rule 49 (expression)


State 238

   67 listexpression: T_LBRACK expression_list T_RBRACK .

    $default  reduce using rule 67 (listexpression)


State 239

  174 comp_statement: T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 174 (comp_statement)


State 240

   54 variable: T_LISTFUNC T_LPAREN general_expression . T_RPAREN
   57 general_expression: general_expression . T_COMMA general_expression

    T_RPAREN  shift, and go to state 291
    T_COMMA   shift, and go to state 188


State 241

   33 expression: expression . T_OROP expression
   33           | expression T_OROP expression .
   34           | expression . T_ANDOP expression
   35           | expression . T_EQUOP expression
   36           | expression . T_RELOP expression
   37           | expression . T_ADDOP expression
   38           | expression . T_MULOP expression

    T_ANDOP  shift, and go to state 177
    T_EQUOP  shift, and go to state 178
    T_RELOP  shift, and go to state 179
    T_ADDOP  shift, and go to state 180
    T_MULOP  shift, and go to state 181

    $default  reduce using rule 33 (expression)


State 242

   33 expression: expression . T_OROP expression
   34           | expression . T_ANDOP expression
   34           | expression T_ANDOP expression .
   35           | expression . T_EQUOP expression
   36           | expression . T_RELOP expression
   37           | expression . T_ADDOP expression
   38           | expression . T_MULOP expression

    T_EQUOP  shift, and go to state 178
    T_RELOP  shift, and go to state 179
    T_ADDOP  shift, and go to state 180
    T_MULOP  shift, and go to state 181

    $default  reduce using rule 34 (expression)


State 243

   33 expression: expression . T_OROP expression
   34           | expression . T_ANDOP expression
   35           | expression . T_EQUOP expression
   35           | expression T_EQUOP expression .
   36           | expression . T_RELOP expression
   37           | expression . T_ADDOP expression
   38           | expression . T_MULOP expression

    T_RELOP  shift, and go to state 179
    T_ADDOP  shift, and go to state 180
    T_MULOP  shift, and go to state 181

    $default  reduce using rule 35 (expression)


State 244

   33 expression: expression . T_OROP expression
   34           | expression . T_ANDOP expression
   35           | expression . T_EQUOP expression
   36           | expression . T_RELOP expression
   36           | expression T_RELOP expression .
   37           | expression . T_ADDOP expression
   38           | expression . T_MULOP expression

    T_ADDOP  shift, and go to state 180
    T_MULOP  shift, and go to state 181

    $default  reduce using rule 36 (expression)


State 245

   33 expression: expression . T_OROP expression
   34           | expression . T_ANDOP expression
   35           | expression . T_EQUOP expression
   36           | expression . T_RELOP expression
   37           | expression . T_ADDOP expression
   37           | expression T_ADDOP expression .
   38           | expression . T_MULOP expression

    T_MULOP  shift, and go to state 181

    $default  reduce using rule 37 (expression)


State 246

   33 expression: expression . T_OROP expression
   34           | expression . T_ANDOP expression
   35           | expression . T_EQUOP expression
   36           | expression . T_RELOP expression
   37           | expression . T_ADDOP expression
   38           | expression . T_MULOP expression
   38           | expression T_MULOP expression .

    $default  reduce using rule 38 (expression)


State 247

   45 expression: variable T_LPAREN expression_list . T_RPAREN

    T_RPAREN  shift, and go to state 292


State 248

   53 variable: variable T_DOT T_ID .

    $default  reduce using rule 53 (variable)


State 249

   59 assignment: variable T_ASSIGN assignment .

    $default  reduce using rule 59 (assignment)


State 250

   52 variable: variable T_LBRACK general_expression . T_RBRACK
   57 general_expression: general_expression . T_COMMA general_expression

    T_COMMA   shift, and go to state 188
    T_RBRACK  shift, and go to state 293


State 251

   57 general_expression: general_expression . T_COMMA general_expression
   57                   | general_expression T_COMMA general_expression .

    $default  reduce using rule 57 (general_expression)


State 252

  126 declarations: declarations decltype typename . variabledefs T_SEMI

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec      go to state 143
    variabledefs  go to state 294
    variabledef   go to state 207


State 253

   85 variabledefs: variabledefs . T_COMMA variabledef
  127 declarations: decltype typename variabledefs . T_SEMI

    T_SEMI   shift, and go to state 295
    T_COMMA  shift, and go to state 271


State 254

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID $@1 dims . T_SEMI
   21 dims: dims . dim

    T_SEMI    shift, and go to state 296
    T_LBRACK  shift, and go to state 213

    dim  go to state 214


State 255

   76 access: T_PRIVATE T_COLON .

    $default  reduce using rule 76 (access)


State 256

   77 access: T_PROTECTED T_COLON .

    $default  reduce using rule 77 (access)


State 257

   78 access: T_PUBLIC T_COLON .

    $default  reduce using rule 78 (access)


State 258

   71 class_body: parent T_LBRACE members_methods T_RBRACE .

    $default  reduce using rule 71 (class_body)


State 259

   74 members_methods: members_methods access . member_or_method

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_UNION   shift, and go to state 260
    T_ID      shift, and go to state 14

    typename                go to state 261
    standard_type           go to state 18
    member_or_method        go to state 297
    member                  go to state 263
    var_declaration         go to state 264
    anonymous_union         go to state 265
    method                  go to state 266
    short_func_declaration  go to state 267
    short_par_func_header   go to state 22
    func_header_start       go to state 268
    nopar_func_header       go to state 269


State 260

   88 anonymous_union: T_UNION . union_body T_SEMI

    T_LBRACE  shift, and go to state 56

    union_body  go to state 298


State 261

   84 var_declaration: typename . variabledefs T_SEMI
   97 func_header_start: typename . listspec T_ID

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec      go to state 299
    variabledefs  go to state 206
    variabledef   go to state 207


State 262

   75 members_methods: access member_or_method .

    $default  reduce using rule 75 (members_methods)


State 263

   80 member_or_method: member .

    $default  reduce using rule 80 (member_or_method)


State 264

   82 member: var_declaration .

    $default  reduce using rule 82 (member)


State 265

   83 member: anonymous_union .

    $default  reduce using rule 83 (member)


State 266

   81 member_or_method: method .

    $default  reduce using rule 81 (member_or_method)


State 267

   93 method: short_func_declaration .

    $default  reduce using rule 93 (method)


State 268

   96 short_par_func_header: func_header_start . T_LPAREN parameter_types T_RPAREN
  102 nopar_func_header: func_header_start . T_LPAREN T_RPAREN

    T_LPAREN  shift, and go to state 300


State 269

   95 short_func_declaration: nopar_func_header . T_SEMI

    T_SEMI  shift, and go to state 46


State 270

   84 var_declaration: typename variabledefs T_SEMI .

    $default  reduce using rule 84 (var_declaration)


State 271

   85 variabledefs: variabledefs T_COMMA . variabledef

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec     go to state 143
    variabledef  go to state 301


State 272

   27 id_list: id_list T_COMMA T_ID . initializer

    T_ASSIGN  shift, and go to state 63

    $default  reduce using rule 30 (initializer)

    initializer  go to state 302


State 273

   23 dim: T_LBRACK T_ICONST . T_RBRACK

    T_RBRACK  shift, and go to state 303


State 274

   24 dim: T_LBRACK T_RBRACK .

    $default  reduce using rule 24 (dim)


State 275

   68 init_values: init_values T_COMMA . init_value

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 138
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    init_value      go to state 304
    expression      go to state 140
    variable        go to state 141
    constant        go to state 101
    listexpression  go to state 102
    decltype        go to state 142


State 276

   32 init_value: T_LBRACE init_values T_RBRACE .

    $default  reduce using rule 32 (init_value)


State 277

  100 pass_list_dims: T_REFER .

    $default  reduce using rule 100 (pass_list_dims)


State 278

  101 pass_list_dims: listspec . dims

    $default  reduce using rule 22 (dims)

    dims  go to state 220


State 279

   98 parameter_types: parameter_types T_COMMA typename pass_list_dims .

    $default  reduce using rule 98 (parameter_types)


State 280

  117 parameter_list: parameter_list T_COMMA typename pass_variabledef .

    $default  reduce using rule 117 (parameter_list)


State 281

  144 if_statement: T_IF T_LPAREN general_expression T_RPAREN . statement if_tail

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_CONTINUE  shift, and go to state 76
    T_BREAK     shift, and go to state 77
    T_IF        shift, and go to state 78
    T_WHILE     shift, and go to state 79
    T_FOR       shift, and go to state 80
    T_SWITCH    shift, and go to state 81
    T_RETURN    shift, and go to state 82
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_CIN       shift, and go to state 85
    T_COUT      shift, and go to state 86
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_SEMI      shift, and go to state 93
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 95
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression            go to state 97
    variable              go to state 98
    general_expression    go to state 99
    assignment            go to state 100
    constant              go to state 101
    listexpression        go to state 102
    decltype              go to state 142
    statement             go to state 305
    expression_statement  go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 282

  147 while_statement: T_WHILE T_LPAREN general_expression T_RPAREN . statement

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_CONTINUE  shift, and go to state 76
    T_BREAK     shift, and go to state 77
    T_IF        shift, and go to state 78
    T_WHILE     shift, and go to state 79
    T_FOR       shift, and go to state 80
    T_SWITCH    shift, and go to state 81
    T_RETURN    shift, and go to state 82
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_CIN       shift, and go to state 85
    T_COUT      shift, and go to state 86
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_SEMI      shift, and go to state 93
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 95
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression            go to state 97
    variable              go to state 98
    general_expression    go to state 99
    assignment            go to state 100
    constant              go to state 101
    listexpression        go to state 102
    decltype              go to state 142
    statement             go to state 306
    expression_statement  go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 283

  148 for_statement: T_FOR T_LPAREN optexpr T_SEMI . optexpr T_SEMI optexpr T_RPAREN statement

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    T_SEMI    reduce using rule 150 (optexpr)
    $default  reduce using rule 129 (decltype)

    expression          go to state 97
    variable            go to state 98
    general_expression  go to state 160
    assignment          go to state 100
    constant            go to state 101
    listexpression      go to state 102
    decltype            go to state 142
    optexpr             go to state 307


State 284

  151 switch_statement: T_SWITCH T_LPAREN general_expression T_RPAREN . switch_tail

    T_CASE    shift, and go to state 308
    T_LBRACE  shift, and go to state 309

    switch_tail           go to state 310
    single_casestatement  go to state 311


State 285

   46 expression: T_LENGTH T_LPAREN general_expression T_RPAREN .

    $default  reduce using rule 46 (expression)


State 286

   47 expression: T_NEW T_LPAREN general_expression T_RPAREN .

    $default  reduce using rule 47 (expression)


State 287

  166 io_statement: T_CIN T_INP in_list T_SEMI .

    $default  reduce using rule 166 (io_statement)


State 288

  168 in_list: in_list T_INP . in_item

    T_STATIC    shift, and go to state 75
    T_THIS      shift, and go to state 87
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    variable  go to state 230
    decltype  go to state 142
    in_item   go to state 312


State 289

  167 io_statement: T_COUT T_OUT out_list T_SEMI .

    $default  reduce using rule 167 (io_statement)


State 290

  171 out_list: out_list T_OUT . out_item

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression          go to state 97
    variable            go to state 98
    general_expression  go to state 233
    assignment          go to state 100
    constant            go to state 101
    listexpression      go to state 102
    decltype            go to state 142
    out_item            go to state 313


State 291

   54 variable: T_LISTFUNC T_LPAREN general_expression T_RPAREN .

    $default  reduce using rule 54 (variable)


State 292

   45 expression: variable T_LPAREN expression_list T_RPAREN .

    $default  reduce using rule 45 (expression)


State 293

   52 variable: variable T_LBRACK general_expression T_RBRACK .

    $default  reduce using rule 52 (variable)


State 294

   85 variabledefs: variabledefs . T_COMMA variabledef
  126 declarations: declarations decltype typename variabledefs . T_SEMI

    T_SEMI   shift, and go to state 314
    T_COMMA  shift, and go to state 271


State 295

  127 declarations: decltype typename variabledefs T_SEMI .

    $default  reduce using rule 127 (declarations)


State 296

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID $@1 dims T_SEMI .

    $default  reduce using rule 11 (typedef_declaration)


State 297

   74 members_methods: members_methods access member_or_method .

    $default  reduce using rule 74 (members_methods)


State 298

   88 anonymous_union: T_UNION union_body . T_SEMI

    T_SEMI  shift, and go to state 315


State 299

   87 variabledef: listspec . T_ID dims
   97 func_header_start: typename listspec . T_ID

    T_ID  shift, and go to state 316


State 300

   96 short_par_func_header: func_header_start T_LPAREN . parameter_types T_RPAREN
  102 nopar_func_header: func_header_start T_LPAREN . T_RPAREN

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_RPAREN  shift, and go to state 67
    T_ID      shift, and go to state 14

    typename         go to state 317
    standard_type    go to state 18
    parameter_types  go to state 69


State 301

   85 variabledefs: variabledefs T_COMMA variabledef .

    $default  reduce using rule 85 (variabledefs)


State 302

   27 id_list: id_list T_COMMA T_ID initializer .

    $default  reduce using rule 27 (id_list)


State 303

   23 dim: T_LBRACK T_ICONST T_RBRACK .

    $default  reduce using rule 23 (dim)


State 304

   68 init_values: init_values T_COMMA init_value .

    $default  reduce using rule 68 (init_values)


State 305

  144 if_statement: T_IF T_LPAREN general_expression T_RPAREN statement . if_tail

    T_ELSE  shift, and go to state 318

    T_ELSE    [reduce using rule 146 (if_tail)]
    $default  reduce using rule 146 (if_tail)

    if_tail  go to state 319


State 306

  147 while_statement: T_WHILE T_LPAREN general_expression T_RPAREN statement .

    $default  reduce using rule 147 (while_statement)


State 307

  148 for_statement: T_FOR T_LPAREN optexpr T_SEMI optexpr . T_SEMI optexpr T_RPAREN statement

    T_SEMI  shift, and go to state 320


State 308

  163 single_casestatement: T_CASE . constant T_COLON single_casestatement
  164                     | T_CASE . constant T_COLON statement

    T_ICONST  shift, and go to state 71
    T_FCONST  shift, and go to state 72
    T_CCONST  shift, and go to state 73
    T_SCONST  shift, and go to state 74

    constant  go to state 321


State 309

  152 switch_tail: T_LBRACE . decl_cases T_RBRACE

    T_STATIC   shift, and go to state 75
    T_CASE     shift, and go to state 322
    T_DEFAULT  shift, and go to state 323

    T_RBRACE  reduce using rule 157 (decl_cases)
    $default  reduce using rule 129 (decltype)

    declarations    go to state 324
    decltype        go to state 325
    decl_cases      go to state 326
    casestatements  go to state 327
    casestatement   go to state 328


State 310

  151 switch_statement: T_SWITCH T_LPAREN general_expression T_RPAREN switch_tail .

    $default  reduce using rule 151 (switch_statement)


State 311

  153 switch_tail: single_casestatement .

    $default  reduce using rule 153 (switch_tail)


State 312

  168 in_list: in_list T_INP in_item .

    $default  reduce using rule 168 (in_list)


State 313

  171 out_list: out_list T_OUT out_item .

    $default  reduce using rule 171 (out_list)


State 314

  126 declarations: declarations decltype typename variabledefs T_SEMI .

    $default  reduce using rule 126 (declarations)


State 315

   88 anonymous_union: T_UNION union_body T_SEMI .

    $default  reduce using rule 88 (anonymous_union)


State 316

   87 variabledef: listspec T_ID . dims
   97 func_header_start: typename listspec T_ID .

    T_LPAREN  reduce using rule 97 (func_header_start)
    $default  reduce using rule 22 (dims)

    dims  go to state 136


State 317

   99 parameter_types: typename . pass_list_dims

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 277

    $default  reduce using rule 20 (listspec)

    listspec        go to state 278
    pass_list_dims  go to state 148


State 318

  145 if_tail: T_ELSE . statement

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_CONTINUE  shift, and go to state 76
    T_BREAK     shift, and go to state 77
    T_IF        shift, and go to state 78
    T_WHILE     shift, and go to state 79
    T_FOR       shift, and go to state 80
    T_SWITCH    shift, and go to state 81
    T_RETURN    shift, and go to state 82
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_CIN       shift, and go to state 85
    T_COUT      shift, and go to state 86
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_SEMI      shift, and go to state 93
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 95
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression            go to state 97
    variable              go to state 98
    general_expression    go to state 99
    assignment            go to state 100
    constant              go to state 101
    listexpression        go to state 102
    decltype              go to state 142
    statement             go to state 329
    expression_statement  go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 319

  144 if_statement: T_IF T_LPAREN general_expression T_RPAREN statement if_tail .

    $default  reduce using rule 144 (if_statement)


State 320

  148 for_statement: T_FOR T_LPAREN optexpr T_SEMI optexpr T_SEMI . optexpr T_RPAREN statement

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_LBRACK    shift, and go to state 94
    T_LISTFUNC  shift, and go to state 96

    T_RPAREN  reduce using rule 150 (optexpr)
    $default  reduce using rule 129 (decltype)

    expression          go to state 97
    variable            go to state 98
    general_expression  go to state 160
    assignment          go to state 100
    constant            go to state 101
    listexpression      go to state 102
    decltype            go to state 142
    optexpr             go to state 330


State 321

  163 single_casestatement: T_CASE constant . T_COLON single_casestatement
  164                     | T_CASE constant . T_COLON statement

    T_COLON  shift, and go to state 331


State 322

  160 casestatement: T_CASE . constant T_COLON casestatement
  161              | T_CASE . constant T_COLON statements

    T_ICONST  shift, and go to state 71
    T_FCONST  shift, and go to state 72
    T_CCONST  shift, and go to state 73
    T_SCONST  shift, and go to state 74

    constant  go to state 332


State 323

  162 casestatement: T_DEFAULT . T_COLON statements

    T_COLON  shift, and go to state 333


State 324

  126 declarations: declarations . decltype typename variabledefs T_SEMI
  154 decl_cases: declarations . casestatements
  155           | declarations .

    T_STATIC   shift, and go to state 75
    T_CASE     shift, and go to state 322
    T_DEFAULT  shift, and go to state 323

    T_RBRACE  reduce using rule 155 (decl_cases)
    $default  reduce using rule 129 (decltype)

    decltype        go to state 334
    casestatements  go to state 335
    casestatement   go to state 328


State 325

  127 declarations: decltype . typename variabledefs T_SEMI

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 14

    typename       go to state 193
    standard_type  go to state 18


State 326

  152 switch_tail: T_LBRACE decl_cases . T_RBRACE

    T_RBRACE  shift, and go to state 336


State 327

  156 decl_cases: casestatements .
  158 casestatements: casestatements . casestatement

    T_CASE     shift, and go to state 322
    T_DEFAULT  shift, and go to state 323

    $default  reduce using rule 156 (decl_cases)

    casestatement  go to state 337


State 328

  159 casestatements: casestatement .

    $default  reduce using rule 159 (casestatements)


State 329

  145 if_tail: T_ELSE statement .

    $default  reduce using rule 145 (if_tail)


State 330

  148 for_statement: T_FOR T_LPAREN optexpr T_SEMI optexpr T_SEMI optexpr . T_RPAREN statement

    T_RPAREN  shift, and go to state 338


State 331

  163 single_casestatement: T_CASE constant T_COLON . single_casestatement
  164                     | T_CASE constant T_COLON . statement

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_CONTINUE  shift, and go to state 76
    T_BREAK     shift, and go to state 77
    T_IF        shift, and go to state 78
    T_WHILE     shift, and go to state 79
    T_FOR       shift, and go to state 80
    T_SWITCH    shift, and go to state 81
    T_CASE      shift, and go to state 308
    T_RETURN    shift, and go to state 82
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_CIN       shift, and go to state 85
    T_COUT      shift, and go to state 86
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_SEMI      shift, and go to state 93
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 95
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression            go to state 97
    variable              go to state 98
    general_expression    go to state 99
    assignment            go to state 100
    constant              go to state 101
    listexpression        go to state 102
    decltype              go to state 142
    statement             go to state 339
    expression_statement  go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    single_casestatement  go to state 340
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 332

  160 casestatement: T_CASE constant . T_COLON casestatement
  161              | T_CASE constant . T_COLON statements

    T_COLON  shift, and go to state 341


State 333

  162 casestatement: T_DEFAULT T_COLON . statements

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_CONTINUE  shift, and go to state 76
    T_BREAK     shift, and go to state 77
    T_IF        shift, and go to state 78
    T_WHILE     shift, and go to state 79
    T_FOR       shift, and go to state 80
    T_SWITCH    shift, and go to state 81
    T_RETURN    shift, and go to state 82
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_CIN       shift, and go to state 85
    T_COUT      shift, and go to state 86
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_SEMI      shift, and go to state 93
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 95
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression            go to state 97
    variable              go to state 98
    general_expression    go to state 99
    assignment            go to state 100
    constant              go to state 101
    listexpression        go to state 102
    decltype              go to state 142
    statements            go to state 342
    statement             go to state 107
    expression_statement  go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 334

  126 declarations: declarations decltype . typename variabledefs T_SEMI

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 14

    typename       go to state 252
    standard_type  go to state 18


State 335

  154 decl_cases: declarations casestatements .
  158 casestatements: casestatements . casestatement

    T_CASE     shift, and go to state 322
    T_DEFAULT  shift, and go to state 323

    $default  reduce using rule 154 (decl_cases)

    casestatement  go to state 337


State 336

  152 switch_tail: T_LBRACE decl_cases T_RBRACE .

    $default  reduce using rule 152 (switch_tail)


State 337

  158 casestatements: casestatements casestatement .

    $default  reduce using rule 158 (casestatements)


State 338

  148 for_statement: T_FOR T_LPAREN optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN . statement

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_CONTINUE  shift, and go to state 76
    T_BREAK     shift, and go to state 77
    T_IF        shift, and go to state 78
    T_WHILE     shift, and go to state 79
    T_FOR       shift, and go to state 80
    T_SWITCH    shift, and go to state 81
    T_RETURN    shift, and go to state 82
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_CIN       shift, and go to state 85
    T_COUT      shift, and go to state 86
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_SEMI      shift, and go to state 93
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 95
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression            go to state 97
    variable              go to state 98
    general_expression    go to state 99
    assignment            go to state 100
    constant              go to state 101
    listexpression        go to state 102
    decltype              go to state 142
    statement             go to state 343
    expression_statement  go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 339

  164 single_casestatement: T_CASE constant T_COLON statement .

    $default  reduce using rule 164 (single_casestatement)


State 340

  163 single_casestatement: T_CASE constant T_COLON single_casestatement .

    $default  reduce using rule 163 (single_casestatement)


State 341

  160 casestatement: T_CASE constant T_COLON . casestatement
  161              | T_CASE constant T_COLON . statements

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_CONTINUE  shift, and go to state 76
    T_BREAK     shift, and go to state 77
    T_IF        shift, and go to state 78
    T_WHILE     shift, and go to state 79
    T_FOR       shift, and go to state 80
    T_SWITCH    shift, and go to state 81
    T_CASE      shift, and go to state 322
    T_DEFAULT   shift, and go to state 323
    T_RETURN    shift, and go to state 82
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_CIN       shift, and go to state 85
    T_COUT      shift, and go to state 86
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_SEMI      shift, and go to state 93
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 95
    T_LISTFUNC  shift, and go to state 96

    $default  reduce using rule 129 (decltype)

    expression            go to state 97
    variable              go to state 98
    general_expression    go to state 99
    assignment            go to state 100
    constant              go to state 101
    listexpression        go to state 102
    decltype              go to state 142
    statements            go to state 344
    statement             go to state 107
    expression_statement  go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    casestatement         go to state 345
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 342

  130 statements: statements . statement
  162 casestatement: T_DEFAULT T_COLON statements .

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_CONTINUE  shift, and go to state 76
    T_BREAK     shift, and go to state 77
    T_IF        shift, and go to state 78
    T_WHILE     shift, and go to state 79
    T_FOR       shift, and go to state 80
    T_SWITCH    shift, and go to state 81
    T_RETURN    shift, and go to state 82
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_CIN       shift, and go to state 85
    T_COUT      shift, and go to state 86
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_SEMI      shift, and go to state 93
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 95
    T_LISTFUNC  shift, and go to state 96

    T_ID      reduce using rule 129 (decltype)
    $default  reduce using rule 162 (casestatement)

    expression            go to state 97
    variable              go to state 98
    general_expression    go to state 99
    assignment            go to state 100
    constant              go to state 101
    listexpression        go to state 102
    decltype              go to state 142
    statement             go to state 194
    expression_statement  go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 343

  148 for_statement: T_FOR T_LPAREN optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement .

    $default  reduce using rule 148 (for_statement)


State 344

  130 statements: statements . statement
  161 casestatement: T_CASE constant T_COLON statements .

    T_ICONST    shift, and go to state 71
    T_FCONST    shift, and go to state 72
    T_CCONST    shift, and go to state 73
    T_SCONST    shift, and go to state 74
    T_STATIC    shift, and go to state 75
    T_CONTINUE  shift, and go to state 76
    T_BREAK     shift, and go to state 77
    T_IF        shift, and go to state 78
    T_WHILE     shift, and go to state 79
    T_FOR       shift, and go to state 80
    T_SWITCH    shift, and go to state 81
    T_RETURN    shift, and go to state 82
    T_LENGTH    shift, and go to state 83
    T_NEW       shift, and go to state 84
    T_CIN       shift, and go to state 85
    T_COUT      shift, and go to state 86
    T_THIS      shift, and go to state 87
    T_ADDOP     shift, and go to state 88
    T_NOTOP     shift, and go to state 89
    T_INCDEC    shift, and go to state 90
    T_SIZEOP    shift, and go to state 91
    T_LPAREN    shift, and go to state 92
    T_SEMI      shift, and go to state 93
    T_LBRACK    shift, and go to state 94
    T_LBRACE    shift, and go to state 95
    T_LISTFUNC  shift, and go to state 96

    T_ID      reduce using rule 129 (decltype)
    $default  reduce using rule 161 (casestatement)

    expression            go to state 97
    variable              go to state 98
    general_expression    go to state 99
    assignment            go to state 100
    constant              go to state 101
    listexpression        go to state 102
    decltype              go to state 142
    statement             go to state 194
    expression_statement  go to state 108
    if_statement          go to state 109
    while_statement       go to state 110
    for_statement         go to state 111
    switch_statement      go to state 112
    return_statement      go to state 113
    io_statement          go to state 114
    comp_statement        go to state 115


State 345

  160 casestatement: T_CASE constant T_COLON casestatement .

    $default  reduce using rule 160 (casestatement)
