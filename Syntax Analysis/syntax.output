Nonterminals useless in grammar

   general_expression
   assignment
   expression_statement
   if_statement
   if_tail
   while_statement
   switch_statement
   switch_tail
   decl_cases
   casestatements
   casestatement
   single_casestatement
   out_list
   out_item


Terminals unused in grammar

   T_EOF
   T_IF
   T_ELSE
   T_WHILE
   T_SWITCH
   T_CASE
   T_DEFAULT
   T_LENGTH
   T_NEW
   T_COUT
   T_OUT
   T_LISTFUNC


Rules useless in grammar

  138 expression: T_LENGTH T_LPAREN general_expression T_RPAREN
  139           | T_NEW T_LPAREN general_expression T_RPAREN
  140           | T_LPAREN general_expression T_RPAREN

  141 variable: variable T_LBRACK general_expression T_RBRACK
  142         | T_LISTFUNC T_LPAREN general_expression T_RPAREN

  143 general_expression: general_expression T_COMMA general_expression
  144                   | assignment

  145 assignment: variable T_ASSIGN assignment
  146           | assignment

  147 expression_list: general_expression

  148 statement: expression_statement
  149          | if_statement
  150          | while_statement
  151          | switch_statement

  152 expression_statement: general_expression T_SEMI

  153 if_statement: T_IF T_LPAREN general_expression T_RPAREN statement if_tail

  154 if_tail: T_ELSE statement
  155        | %empty

  156 while_statement: T_WHILE T_LPAREN general_expression T_RPAREN statement

  157 optexpr: general_expression

  158 switch_statement: T_SWITCH T_LPAREN general_expression T_RPAREN switch_tail

  159 switch_tail: T_LBRACE decl_cases T_RBRACE
  160            | single_casestatement

  161 decl_cases: declarations casestatements
  162           | declarations
  163           | casestatements
  164           | %empty

  165 casestatements: casestatements casestatement
  166               | casestatement

  167 casestatement: T_CASE constant T_COLON casestatement
  168              | T_CASE constant T_COLON statements
  169              | T_DEFAULT T_COLON statements

  170 single_casestatement: T_CASE constant T_COLON single_casestatement
  171                     | T_CASE constant T_COLON statement

  172 io_statement: T_COUT T_OUT out_list T_SEMI

  173 out_list: out_list T_OUT out_item
  174         | out_item

  175 out_item: general_expression


Grammar

    0 $accept: program $end

    1 program: global_declarations main_function

    2 global_declarations: global_declarations global_declaration
    3                    | %empty

    4 global_declaration: typedef_declaration
    5                   | enum_declaration
    6                   | class_declaration
    7                   | union_declaration
    8                   | global_var_declaration
    9                   | func_declaration

   10 typedef_declaration: T_TYPEDEF typename listspec T_ID dims T_SEMI

   11 typename: standard_type
   12         | T_ID

   13 standard_type: T_CHAR
   14              | T_INT
   15              | T_FLOAT
   16              | T_STRING
   17              | T_VOID

   18 listspec: T_LIST
   19         | %empty

   20 dims: dims dim
   21     | %empty

   22 dim: T_LBRACK T_ICONST T_RBRACK
   23    | T_LBRACK T_RBRACK

   24 enum_declaration: T_ENUM T_ID enum_body T_SEMI

   25 enum_body: T_LBRACE id_list T_RBRACE

   26 id_list: id_list T_COMMA T_ID initializer
   27        | T_ID initializer

   28 initializer: T_ASSIGN init_value
   29            | %empty

   30 init_value: expression
   31           | T_LBRACE init_values T_RBRACE

   32 expression: expression T_OROP expression
   33           | expression T_ANDOP expression
   34           | expression T_EQUOP expression
   35           | expression T_RELOP expression
   36           | expression T_ADDOP expression
   37           | expression T_MULOP expression
   38           | T_NOTOP expression
   39           | T_ADDOP expression
   40           | T_SIZEOP expression
   41           | T_INCDEC variable
   42           | variable T_INCDEC
   43           | variable
   44           | variable T_LPAREN expression_list T_RPAREN
   45           | constant
   46           | T_LPAREN standard_type T_RPAREN
   47           | listexpression

   48 variable: variable T_DOT T_ID
   49         | decltype T_ID
   50         | T_THIS

   51 expression_list: %empty

   52 constant: T_CCONST
   53         | T_ICONST
   54         | T_FCONST
   55         | T_SCONST

   56 listexpression: T_LBRACK expression_list T_RBRACK

   57 init_values: init_values T_COMMA init_value
   58            | init_value

   59 class_declaration: T_CLASS T_ID class_body T_SEMI

   60 class_body: parent T_LBRACE members_methods T_RBRACE

   61 parent: T_COLON T_ID
   62       | %empty

   63 members_methods: members_methods access member_or_method
   64                | access member_or_method

   65 access: T_PRIVATE T_COLON
   66       | T_PROTECTED T_COLON
   67       | T_PUBLIC T_COLON
   68       | %empty

   69 member_or_method: member
   70                 | method

   71 member: var_declaration
   72       | anonymous_union

   73 var_declaration: typename variabledefs T_SEMI

   74 variabledefs: variabledefs T_COMMA variabledef
   75             | variabledef

   76 variabledef: listspec T_ID dims

   77 anonymous_union: T_UNION union_body T_SEMI

   78 union_body: T_LBRACE fields T_RBRACE

   79 fields: fields field
   80       | field

   81 field: var_declaration

   82 method: short_func_declaration

   83 short_func_declaration: short_par_func_header T_SEMI
   84                       | nopar_func_header T_SEMI

   85 short_par_func_header: func_header_start T_LPAREN parameter_types T_RPAREN

   86 func_header_start: typename listspec T_ID

   87 parameter_types: parameter_types T_COMMA typename pass_list_dims
   88                | typename pass_list_dims

   89 pass_list_dims: T_REFER
   90               | listspec dims

   91 nopar_func_header: func_header_start T_LPAREN T_RPAREN

   92 union_declaration: T_UNION T_ID union_body T_SEMI

   93 global_var_declaration: typename init_variabledefs T_SEMI

   94 init_variabledefs: init_variabledefs T_COMMA init_variabledef
   95                  | init_variabledef

   96 init_variabledef: variabledef initializer

   97 func_declaration: short_func_declaration
   98                 | full_func_declaration

   99 full_func_declaration: full_par_func_header T_LBRACE decl_statements T_RBRACE
  100                      | nopar_class_func_header T_LBRACE decl_statements T_RBRACE
  101                      | nopar_func_header T_LBRACE decl_statements T_RBRACE

  102 full_par_func_header: class_func_header_start T_LPAREN parameter_list T_RPAREN
  103                     | func_header_start T_LPAREN parameter_list T_RPAREN

  104 class_func_header_start: typename listspec func_class T_ID

  105 func_class: T_ID T_METH

  106 parameter_list: parameter_list T_COMMA typename pass_variabledef
  107               | typename pass_variabledef

  108 pass_variabledef: variabledef
  109                 | T_REFER T_ID

  110 nopar_class_func_header: class_func_header_start T_LPAREN T_RPAREN

  111 decl_statements: declarations statements
  112                | declarations
  113                | statements
  114                | %empty

  115 declarations: declarations decltype typename variabledefs T_SEMI
  116             | decltype typename variabledefs T_SEMI

  117 decltype: T_STATIC
  118         | %empty

  119 statements: statements statement
  120           | statement

  121 statement: for_statement
  122          | return_statement
  123          | io_statement
  124          | comp_statement
  125          | T_CONTINUE T_SEMI
  126          | T_BREAK T_SEMI
  127          | T_SEMI

  128 for_statement: T_FOR T_LPAREN optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

  129 optexpr: %empty

  130 return_statement: T_RETURN optexpr T_SEMI

  131 io_statement: T_CIN T_INP in_list T_SEMI

  132 in_list: in_list T_INP in_item
  133        | in_item

  134 in_item: variable

  135 comp_statement: T_LBRACE decl_statements T_RBRACE

  136 main_function: main_header T_LBRACE decl_statements T_RBRACE

  137 main_header: T_INP T_MAIN T_LPAREN T_RPAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
T_ICONST (258) 22 53
T_FCONST (259) 54
T_CCONST (260) 52
T_SCONST (261) 55
T_EOF (262)
T_TYPEDEF (263) 10
T_CHAR (264) 13
T_INT (265) 14
T_FLOAT (266) 15
T_STRING (267) 16
T_CLASS (268) 59
T_PRIVATE (269) 65
T_PROTECTED (270) 66
T_PUBLIC (271) 67
T_VOID (272) 17
T_STATIC (273) 117
T_UNION (274) 77 92
T_ENUM (275) 24
T_LIST (276) 18
T_CONTINUE (277) 125
T_BREAK (278) 126
T_IF (279)
T_ELSE (280)
T_WHILE (281)
T_FOR (282) 128
T_SWITCH (283)
T_CASE (284)
T_DEFAULT (285)
T_RETURN (286) 130
T_LENGTH (287)
T_NEW (288)
T_CIN (289) 131
T_COUT (290)
T_MAIN (291) 137
T_THIS (292) 50
T_OROP (293) 32
T_ANDOP (294) 33
T_EQUOP (295) 34
T_RELOP (296) 35
T_ADDOP (297) 36 39
T_MULOP (298) 37
T_NOTOP (299) 38
T_INCDEC (300) 41 42
T_SIZEOP (301) 40
T_LPAREN (302) 44 46 85 91 102 103 110 128 137
T_RPAREN (303) 44 46 85 91 102 103 110 128 137
T_SEMI (304) 10 24 59 73 77 83 84 92 93 115 116 125 126 127 128 130
    131
T_DOT (305) 48
T_COMMA (306) 26 57 74 87 94 106
T_ASSIGN (307) 28
T_COLON (308) 61 65 66 67
T_LBRACK (309) 22 23 56
T_RBRACK (310) 22 23 56
T_REFER (311) 89 109
T_LBRACE (312) 25 31 60 78 99 100 101 135 136
T_RBRACE (313) 25 31 60 78 99 100 101 135 136
T_METH (314) 105
T_INP (315) 131 132 137
T_OUT (316)
T_ID (317) 10 12 24 26 27 48 49 59 61 76 86 92 104 105 109
T_LISTFUNC (318)


Nonterminals, with rules where they appear

$accept (64)
    on left: 0
program (65)
    on left: 1, on right: 0
global_declarations (66)
    on left: 2 3, on right: 1 2
global_declaration (67)
    on left: 4 5 6 7 8 9, on right: 2
typedef_declaration (68)
    on left: 10, on right: 4
typename (69)
    on left: 11 12, on right: 10 73 86 87 88 93 104 106 107 115 116
standard_type (70)
    on left: 13 14 15 16 17, on right: 11 46
listspec (71)
    on left: 18 19, on right: 10 76 86 90 104
dims (72)
    on left: 20 21, on right: 10 20 76 90
dim (73)
    on left: 22 23, on right: 20
enum_declaration (74)
    on left: 24, on right: 5
enum_body (75)
    on left: 25, on right: 24
id_list (76)
    on left: 26 27, on right: 25 26
initializer (77)
    on left: 28 29, on right: 26 27 96
init_value (78)
    on left: 30 31, on right: 28 57 58
expression (79)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47, on right:
    30 32 33 34 35 36 37 38 39 40
variable (80)
    on left: 48 49 50, on right: 41 42 43 44 48 134
expression_list (81)
    on left: 51, on right: 44 56
constant (82)
    on left: 52 53 54 55, on right: 45
listexpression (83)
    on left: 56, on right: 47
init_values (84)
    on left: 57 58, on right: 31 57
class_declaration (85)
    on left: 59, on right: 6
class_body (86)
    on left: 60, on right: 59
parent (87)
    on left: 61 62, on right: 60
members_methods (88)
    on left: 63 64, on right: 60 63
access (89)
    on left: 65 66 67 68, on right: 63 64
member_or_method (90)
    on left: 69 70, on right: 63 64
member (91)
    on left: 71 72, on right: 69
var_declaration (92)
    on left: 73, on right: 71 81
variabledefs (93)
    on left: 74 75, on right: 73 74 115 116
variabledef (94)
    on left: 76, on right: 74 75 96 108
anonymous_union (95)
    on left: 77, on right: 72
union_body (96)
    on left: 78, on right: 77 92
fields (97)
    on left: 79 80, on right: 78 79
field (98)
    on left: 81, on right: 79 80
method (99)
    on left: 82, on right: 70
short_func_declaration (100)
    on left: 83 84, on right: 82 97
short_par_func_header (101)
    on left: 85, on right: 83
func_header_start (102)
    on left: 86, on right: 85 91 103
parameter_types (103)
    on left: 87 88, on right: 85 87
pass_list_dims (104)
    on left: 89 90, on right: 87 88
nopar_func_header (105)
    on left: 91, on right: 84 101
union_declaration (106)
    on left: 92, on right: 7
global_var_declaration (107)
    on left: 93, on right: 8
init_variabledefs (108)
    on left: 94 95, on right: 93 94
init_variabledef (109)
    on left: 96, on right: 94 95
func_declaration (110)
    on left: 97 98, on right: 9
full_func_declaration (111)
    on left: 99 100 101, on right: 98
full_par_func_header (112)
    on left: 102 103, on right: 99
class_func_header_start (113)
    on left: 104, on right: 102 110
func_class (114)
    on left: 105, on right: 104
parameter_list (115)
    on left: 106 107, on right: 102 103 106
pass_variabledef (116)
    on left: 108 109, on right: 106 107
nopar_class_func_header (117)
    on left: 110, on right: 100
decl_statements (118)
    on left: 111 112 113 114, on right: 99 100 101 135 136
declarations (119)
    on left: 115 116, on right: 111 112 115
decltype (120)
    on left: 117 118, on right: 49 115 116
statements (121)
    on left: 119 120, on right: 111 113 119
statement (122)
    on left: 121 122 123 124 125 126 127, on right: 119 120 128
for_statement (123)
    on left: 128, on right: 121
optexpr (124)
    on left: 129, on right: 128 130
return_statement (125)
    on left: 130, on right: 122
io_statement (126)
    on left: 131, on right: 123
in_list (127)
    on left: 132 133, on right: 131 132
in_item (128)
    on left: 134, on right: 132 133
comp_statement (129)
    on left: 135, on right: 124
main_function (130)
    on left: 136, on right: 1
main_header (131)
    on left: 137, on right: 136


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (global_declarations)

    program              go to state 1
    global_declarations  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_declarations . main_function
    2 global_declarations: global_declarations . global_declaration

    T_TYPEDEF  shift, and go to state 4
    T_CHAR     shift, and go to state 5
    T_INT      shift, and go to state 6
    T_FLOAT    shift, and go to state 7
    T_STRING   shift, and go to state 8
    T_CLASS    shift, and go to state 9
    T_VOID     shift, and go to state 10
    T_UNION    shift, and go to state 11
    T_ENUM     shift, and go to state 12
    T_INP      shift, and go to state 13
    T_ID       shift, and go to state 14

    global_declaration       go to state 15
    typedef_declaration      go to state 16
    typename                 go to state 17
    standard_type            go to state 18
    enum_declaration         go to state 19
    class_declaration        go to state 20
    short_func_declaration   go to state 21
    short_par_func_header    go to state 22
    func_header_start        go to state 23
    nopar_func_header        go to state 24
    union_declaration        go to state 25
    global_var_declaration   go to state 26
    func_declaration         go to state 27
    full_func_declaration    go to state 28
    full_par_func_header     go to state 29
    class_func_header_start  go to state 30
    nopar_class_func_header  go to state 31
    main_function            go to state 32
    main_header              go to state 33


State 3

    0 $accept: program $end .

    $default  accept


State 4

   10 typedef_declaration: T_TYPEDEF . typename listspec T_ID dims T_SEMI

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 14

    typename       go to state 34
    standard_type  go to state 18


State 5

   13 standard_type: T_CHAR .

    $default  reduce using rule 13 (standard_type)


State 6

   14 standard_type: T_INT .

    $default  reduce using rule 14 (standard_type)


State 7

   15 standard_type: T_FLOAT .

    $default  reduce using rule 15 (standard_type)


State 8

   16 standard_type: T_STRING .

    $default  reduce using rule 16 (standard_type)


State 9

   59 class_declaration: T_CLASS . T_ID class_body T_SEMI

    T_ID  shift, and go to state 35


State 10

   17 standard_type: T_VOID .

    $default  reduce using rule 17 (standard_type)


State 11

   92 union_declaration: T_UNION . T_ID union_body T_SEMI

    T_ID  shift, and go to state 36


State 12

   24 enum_declaration: T_ENUM . T_ID enum_body T_SEMI

    T_ID  shift, and go to state 37


State 13

  137 main_header: T_INP . T_MAIN T_LPAREN T_RPAREN

    T_MAIN  shift, and go to state 38


State 14

   12 typename: T_ID .

    $default  reduce using rule 12 (typename)


State 15

    2 global_declarations: global_declarations global_declaration .

    $default  reduce using rule 2 (global_declarations)


State 16

    4 global_declaration: typedef_declaration .

    $default  reduce using rule 4 (global_declaration)


State 17

   86 func_header_start: typename . listspec T_ID
   93 global_var_declaration: typename . init_variabledefs T_SEMI
  104 class_func_header_start: typename . listspec func_class T_ID

    T_LIST  shift, and go to state 39

    $default  reduce using rule 19 (listspec)

    listspec           go to state 40
    variabledef        go to state 41
    init_variabledefs  go to state 42
    init_variabledef   go to state 43


State 18

   11 typename: standard_type .

    $default  reduce using rule 11 (typename)


State 19

    5 global_declaration: enum_declaration .

    $default  reduce using rule 5 (global_declaration)


State 20

    6 global_declaration: class_declaration .

    $default  reduce using rule 6 (global_declaration)


State 21

   97 func_declaration: short_func_declaration .

    $default  reduce using rule 97 (func_declaration)


State 22

   83 short_func_declaration: short_par_func_header . T_SEMI

    T_SEMI  shift, and go to state 44


State 23

   85 short_par_func_header: func_header_start . T_LPAREN parameter_types T_RPAREN
   91 nopar_func_header: func_header_start . T_LPAREN T_RPAREN
  103 full_par_func_header: func_header_start . T_LPAREN parameter_list T_RPAREN

    T_LPAREN  shift, and go to state 45


State 24

   84 short_func_declaration: nopar_func_header . T_SEMI
  101 full_func_declaration: nopar_func_header . T_LBRACE decl_statements T_RBRACE

    T_SEMI    shift, and go to state 46
    T_LBRACE  shift, and go to state 47


State 25

    7 global_declaration: union_declaration .

    $default  reduce using rule 7 (global_declaration)


State 26

    8 global_declaration: global_var_declaration .

    $default  reduce using rule 8 (global_declaration)


State 27

    9 global_declaration: func_declaration .

    $default  reduce using rule 9 (global_declaration)


State 28

   98 func_declaration: full_func_declaration .

    $default  reduce using rule 98 (func_declaration)


State 29

   99 full_func_declaration: full_par_func_header . T_LBRACE decl_statements T_RBRACE

    T_LBRACE  shift, and go to state 48


State 30

  102 full_par_func_header: class_func_header_start . T_LPAREN parameter_list T_RPAREN
  110 nopar_class_func_header: class_func_header_start . T_LPAREN T_RPAREN

    T_LPAREN  shift, and go to state 49


State 31

  100 full_func_declaration: nopar_class_func_header . T_LBRACE decl_statements T_RBRACE

    T_LBRACE  shift, and go to state 50


State 32

    1 program: global_declarations main_function .

    $default  reduce using rule 1 (program)


State 33

  136 main_function: main_header . T_LBRACE decl_statements T_RBRACE

    T_LBRACE  shift, and go to state 51


State 34

   10 typedef_declaration: T_TYPEDEF typename . listspec T_ID dims T_SEMI

    T_LIST  shift, and go to state 39

    $default  reduce using rule 19 (listspec)

    listspec  go to state 52


State 35

   59 class_declaration: T_CLASS T_ID . class_body T_SEMI

    T_COLON  shift, and go to state 53

    $default  reduce using rule 62 (parent)

    class_body  go to state 54
    parent      go to state 55


State 36

   92 union_declaration: T_UNION T_ID . union_body T_SEMI

    T_LBRACE  shift, and go to state 56

    union_body  go to state 57


State 37

   24 enum_declaration: T_ENUM T_ID . enum_body T_SEMI

    T_LBRACE  shift, and go to state 58

    enum_body  go to state 59


State 38

  137 main_header: T_INP T_MAIN . T_LPAREN T_RPAREN

    T_LPAREN  shift, and go to state 60


State 39

   18 listspec: T_LIST .

    $default  reduce using rule 18 (listspec)


State 40

   76 variabledef: listspec . T_ID dims
   86 func_header_start: typename listspec . T_ID
  104 class_func_header_start: typename listspec . func_class T_ID

    T_ID  shift, and go to state 61

    func_class  go to state 62


State 41

   96 init_variabledef: variabledef . initializer

    T_ASSIGN  shift, and go to state 63

    $default  reduce using rule 29 (initializer)

    initializer  go to state 64


State 42

   93 global_var_declaration: typename init_variabledefs . T_SEMI
   94 init_variabledefs: init_variabledefs . T_COMMA init_variabledef

    T_SEMI   shift, and go to state 65
    T_COMMA  shift, and go to state 66


State 43

   95 init_variabledefs: init_variabledef .

    $default  reduce using rule 95 (init_variabledefs)


State 44

   83 short_func_declaration: short_par_func_header T_SEMI .

    $default  reduce using rule 83 (short_func_declaration)


State 45

   85 short_par_func_header: func_header_start T_LPAREN . parameter_types T_RPAREN
   91 nopar_func_header: func_header_start T_LPAREN . T_RPAREN
  103 full_par_func_header: func_header_start T_LPAREN . parameter_list T_RPAREN

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_RPAREN  shift, and go to state 67
    T_ID      shift, and go to state 14

    typename         go to state 68
    standard_type    go to state 18
    parameter_types  go to state 69
    parameter_list   go to state 70


State 46

   84 short_func_declaration: nopar_func_header T_SEMI .

    $default  reduce using rule 84 (short_func_declaration)


State 47

  101 full_func_declaration: nopar_func_header T_LBRACE . decl_statements T_RBRACE

    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_FOR       shift, and go to state 74
    T_RETURN    shift, and go to state 75
    T_CIN       shift, and go to state 76
    T_SEMI      shift, and go to state 77
    T_LBRACE    shift, and go to state 78

    T_RBRACE  reduce using rule 114 (decl_statements)
    $default  reduce using rule 118 (decltype)

    decl_statements   go to state 79
    declarations      go to state 80
    decltype          go to state 81
    statements        go to state 82
    statement         go to state 83
    for_statement     go to state 84
    return_statement  go to state 85
    io_statement      go to state 86
    comp_statement    go to state 87


State 48

   99 full_func_declaration: full_par_func_header T_LBRACE . decl_statements T_RBRACE

    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_FOR       shift, and go to state 74
    T_RETURN    shift, and go to state 75
    T_CIN       shift, and go to state 76
    T_SEMI      shift, and go to state 77
    T_LBRACE    shift, and go to state 78

    T_RBRACE  reduce using rule 114 (decl_statements)
    $default  reduce using rule 118 (decltype)

    decl_statements   go to state 88
    declarations      go to state 80
    decltype          go to state 81
    statements        go to state 82
    statement         go to state 83
    for_statement     go to state 84
    return_statement  go to state 85
    io_statement      go to state 86
    comp_statement    go to state 87


State 49

  102 full_par_func_header: class_func_header_start T_LPAREN . parameter_list T_RPAREN
  110 nopar_class_func_header: class_func_header_start T_LPAREN . T_RPAREN

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_RPAREN  shift, and go to state 89
    T_ID      shift, and go to state 14

    typename        go to state 90
    standard_type   go to state 18
    parameter_list  go to state 91


State 50

  100 full_func_declaration: nopar_class_func_header T_LBRACE . decl_statements T_RBRACE

    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_FOR       shift, and go to state 74
    T_RETURN    shift, and go to state 75
    T_CIN       shift, and go to state 76
    T_SEMI      shift, and go to state 77
    T_LBRACE    shift, and go to state 78

    T_RBRACE  reduce using rule 114 (decl_statements)
    $default  reduce using rule 118 (decltype)

    decl_statements   go to state 92
    declarations      go to state 80
    decltype          go to state 81
    statements        go to state 82
    statement         go to state 83
    for_statement     go to state 84
    return_statement  go to state 85
    io_statement      go to state 86
    comp_statement    go to state 87


State 51

  136 main_function: main_header T_LBRACE . decl_statements T_RBRACE

    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_FOR       shift, and go to state 74
    T_RETURN    shift, and go to state 75
    T_CIN       shift, and go to state 76
    T_SEMI      shift, and go to state 77
    T_LBRACE    shift, and go to state 78

    T_RBRACE  reduce using rule 114 (decl_statements)
    $default  reduce using rule 118 (decltype)

    decl_statements   go to state 93
    declarations      go to state 80
    decltype          go to state 81
    statements        go to state 82
    statement         go to state 83
    for_statement     go to state 84
    return_statement  go to state 85
    io_statement      go to state 86
    comp_statement    go to state 87


State 52

   10 typedef_declaration: T_TYPEDEF typename listspec . T_ID dims T_SEMI

    T_ID  shift, and go to state 94


State 53

   61 parent: T_COLON . T_ID

    T_ID  shift, and go to state 95


State 54

   59 class_declaration: T_CLASS T_ID class_body . T_SEMI

    T_SEMI  shift, and go to state 96


State 55

   60 class_body: parent . T_LBRACE members_methods T_RBRACE

    T_LBRACE  shift, and go to state 97


State 56

   78 union_body: T_LBRACE . fields T_RBRACE

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 14

    typename         go to state 98
    standard_type    go to state 18
    var_declaration  go to state 99
    fields           go to state 100
    field            go to state 101


State 57

   92 union_declaration: T_UNION T_ID union_body . T_SEMI

    T_SEMI  shift, and go to state 102


State 58

   25 enum_body: T_LBRACE . id_list T_RBRACE

    T_ID  shift, and go to state 103

    id_list  go to state 104


State 59

   24 enum_declaration: T_ENUM T_ID enum_body . T_SEMI

    T_SEMI  shift, and go to state 105


State 60

  137 main_header: T_INP T_MAIN T_LPAREN . T_RPAREN

    T_RPAREN  shift, and go to state 106


State 61

   76 variabledef: listspec T_ID . dims
   86 func_header_start: typename listspec T_ID .
  105 func_class: T_ID . T_METH

    T_METH  shift, and go to state 107

    T_LPAREN  reduce using rule 86 (func_header_start)
    $default  reduce using rule 21 (dims)

    dims  go to state 108


State 62

  104 class_func_header_start: typename listspec func_class . T_ID

    T_ID  shift, and go to state 109


State 63

   28 initializer: T_ASSIGN . init_value

    T_ICONST  shift, and go to state 110
    T_FCONST  shift, and go to state 111
    T_CCONST  shift, and go to state 112
    T_SCONST  shift, and go to state 113
    T_STATIC  shift, and go to state 71
    T_THIS    shift, and go to state 114
    T_ADDOP   shift, and go to state 115
    T_NOTOP   shift, and go to state 116
    T_INCDEC  shift, and go to state 117
    T_SIZEOP  shift, and go to state 118
    T_LPAREN  shift, and go to state 119
    T_LBRACK  shift, and go to state 120
    T_LBRACE  shift, and go to state 121

    $default  reduce using rule 118 (decltype)

    init_value      go to state 122
    expression      go to state 123
    variable        go to state 124
    constant        go to state 125
    listexpression  go to state 126
    decltype        go to state 127


State 64

   96 init_variabledef: variabledef initializer .

    $default  reduce using rule 96 (init_variabledef)


State 65

   93 global_var_declaration: typename init_variabledefs T_SEMI .

    $default  reduce using rule 93 (global_var_declaration)


State 66

   94 init_variabledefs: init_variabledefs T_COMMA . init_variabledef

    T_LIST  shift, and go to state 39

    $default  reduce using rule 19 (listspec)

    listspec          go to state 128
    variabledef       go to state 41
    init_variabledef  go to state 129


State 67

   91 nopar_func_header: func_header_start T_LPAREN T_RPAREN .

    $default  reduce using rule 91 (nopar_func_header)


State 68

   88 parameter_types: typename . pass_list_dims
  107 parameter_list: typename . pass_variabledef

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 130

    $default  reduce using rule 19 (listspec)

    listspec          go to state 131
    variabledef       go to state 132
    pass_list_dims    go to state 133
    pass_variabledef  go to state 134


State 69

   85 short_par_func_header: func_header_start T_LPAREN parameter_types . T_RPAREN
   87 parameter_types: parameter_types . T_COMMA typename pass_list_dims

    T_RPAREN  shift, and go to state 135
    T_COMMA   shift, and go to state 136


State 70

  103 full_par_func_header: func_header_start T_LPAREN parameter_list . T_RPAREN
  106 parameter_list: parameter_list . T_COMMA typename pass_variabledef

    T_RPAREN  shift, and go to state 137
    T_COMMA   shift, and go to state 138


State 71

  117 decltype: T_STATIC .

    $default  reduce using rule 117 (decltype)


State 72

  125 statement: T_CONTINUE . T_SEMI

    T_SEMI  shift, and go to state 139


State 73

  126 statement: T_BREAK . T_SEMI

    T_SEMI  shift, and go to state 140


State 74

  128 for_statement: T_FOR . T_LPAREN optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

    T_LPAREN  shift, and go to state 141


State 75

  130 return_statement: T_RETURN . optexpr T_SEMI

    $default  reduce using rule 129 (optexpr)

    optexpr  go to state 142


State 76

  131 io_statement: T_CIN . T_INP in_list T_SEMI

    T_INP  shift, and go to state 143


State 77

  127 statement: T_SEMI .

    $default  reduce using rule 127 (statement)


State 78

  135 comp_statement: T_LBRACE . decl_statements T_RBRACE

    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_FOR       shift, and go to state 74
    T_RETURN    shift, and go to state 75
    T_CIN       shift, and go to state 76
    T_SEMI      shift, and go to state 77
    T_LBRACE    shift, and go to state 78

    T_RBRACE  reduce using rule 114 (decl_statements)
    $default  reduce using rule 118 (decltype)

    decl_statements   go to state 144
    declarations      go to state 80
    decltype          go to state 81
    statements        go to state 82
    statement         go to state 83
    for_statement     go to state 84
    return_statement  go to state 85
    io_statement      go to state 86
    comp_statement    go to state 87


State 79

  101 full_func_declaration: nopar_func_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 145


State 80

  111 decl_statements: declarations . statements
  112                | declarations .
  115 declarations: declarations . decltype typename variabledefs T_SEMI

    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_FOR       shift, and go to state 74
    T_RETURN    shift, and go to state 75
    T_CIN       shift, and go to state 76
    T_SEMI      shift, and go to state 77
    T_LBRACE    shift, and go to state 78

    T_RBRACE  reduce using rule 112 (decl_statements)
    $default  reduce using rule 118 (decltype)

    decltype          go to state 146
    statements        go to state 147
    statement         go to state 83
    for_statement     go to state 84
    return_statement  go to state 85
    io_statement      go to state 86
    comp_statement    go to state 87


State 81

  116 declarations: decltype . typename variabledefs T_SEMI

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 14

    typename       go to state 148
    standard_type  go to state 18


State 82

  113 decl_statements: statements .
  119 statements: statements . statement

    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_FOR       shift, and go to state 74
    T_RETURN    shift, and go to state 75
    T_CIN       shift, and go to state 76
    T_SEMI      shift, and go to state 77
    T_LBRACE    shift, and go to state 78

    $default  reduce using rule 113 (decl_statements)

    statement         go to state 149
    for_statement     go to state 84
    return_statement  go to state 85
    io_statement      go to state 86
    comp_statement    go to state 87


State 83

  120 statements: statement .

    $default  reduce using rule 120 (statements)


State 84

  121 statement: for_statement .

    $default  reduce using rule 121 (statement)


State 85

  122 statement: return_statement .

    $default  reduce using rule 122 (statement)


State 86

  123 statement: io_statement .

    $default  reduce using rule 123 (statement)


State 87

  124 statement: comp_statement .

    $default  reduce using rule 124 (statement)


State 88

   99 full_func_declaration: full_par_func_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 150


State 89

  110 nopar_class_func_header: class_func_header_start T_LPAREN T_RPAREN .

    $default  reduce using rule 110 (nopar_class_func_header)


State 90

  107 parameter_list: typename . pass_variabledef

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 151

    $default  reduce using rule 19 (listspec)

    listspec          go to state 128
    variabledef       go to state 132
    pass_variabledef  go to state 134


State 91

  102 full_par_func_header: class_func_header_start T_LPAREN parameter_list . T_RPAREN
  106 parameter_list: parameter_list . T_COMMA typename pass_variabledef

    T_RPAREN  shift, and go to state 152
    T_COMMA   shift, and go to state 138


State 92

  100 full_func_declaration: nopar_class_func_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 153


State 93

  136 main_function: main_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 154


State 94

   10 typedef_declaration: T_TYPEDEF typename listspec T_ID . dims T_SEMI

    $default  reduce using rule 21 (dims)

    dims  go to state 155


State 95

   61 parent: T_COLON T_ID .

    $default  reduce using rule 61 (parent)


State 96

   59 class_declaration: T_CLASS T_ID class_body T_SEMI .

    $default  reduce using rule 59 (class_declaration)


State 97

   60 class_body: parent T_LBRACE . members_methods T_RBRACE

    T_PRIVATE    shift, and go to state 156
    T_PROTECTED  shift, and go to state 157
    T_PUBLIC     shift, and go to state 158

    $default  reduce using rule 68 (access)

    members_methods  go to state 159
    access           go to state 160


State 98

   73 var_declaration: typename . variabledefs T_SEMI

    T_LIST  shift, and go to state 39

    $default  reduce using rule 19 (listspec)

    listspec      go to state 128
    variabledefs  go to state 161
    variabledef   go to state 162


State 99

   81 field: var_declaration .

    $default  reduce using rule 81 (field)


State 100

   78 union_body: T_LBRACE fields . T_RBRACE
   79 fields: fields . field

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_RBRACE  shift, and go to state 163
    T_ID      shift, and go to state 14

    typename         go to state 98
    standard_type    go to state 18
    var_declaration  go to state 99
    field            go to state 164


State 101

   80 fields: field .

    $default  reduce using rule 80 (fields)


State 102

   92 union_declaration: T_UNION T_ID union_body T_SEMI .

    $default  reduce using rule 92 (union_declaration)


State 103

   27 id_list: T_ID . initializer

    T_ASSIGN  shift, and go to state 63

    $default  reduce using rule 29 (initializer)

    initializer  go to state 165


State 104

   25 enum_body: T_LBRACE id_list . T_RBRACE
   26 id_list: id_list . T_COMMA T_ID initializer

    T_COMMA   shift, and go to state 166
    T_RBRACE  shift, and go to state 167


State 105

   24 enum_declaration: T_ENUM T_ID enum_body T_SEMI .

    $default  reduce using rule 24 (enum_declaration)


State 106

  137 main_header: T_INP T_MAIN T_LPAREN T_RPAREN .

    $default  reduce using rule 137 (main_header)


State 107

  105 func_class: T_ID T_METH .

    $default  reduce using rule 105 (func_class)


State 108

   20 dims: dims . dim
   76 variabledef: listspec T_ID dims .

    T_LBRACK  shift, and go to state 168

    $default  reduce using rule 76 (variabledef)

    dim  go to state 169


State 109

  104 class_func_header_start: typename listspec func_class T_ID .

    $default  reduce using rule 104 (class_func_header_start)


State 110

   53 constant: T_ICONST .

    $default  reduce using rule 53 (constant)


State 111

   54 constant: T_FCONST .

    $default  reduce using rule 54 (constant)


State 112

   52 constant: T_CCONST .

    $default  reduce using rule 52 (constant)


State 113

   55 constant: T_SCONST .

    $default  reduce using rule 55 (constant)


State 114

   50 variable: T_THIS .

    $default  reduce using rule 50 (variable)


State 115

   39 expression: T_ADDOP . expression

    T_ICONST  shift, and go to state 110
    T_FCONST  shift, and go to state 111
    T_CCONST  shift, and go to state 112
    T_SCONST  shift, and go to state 113
    T_STATIC  shift, and go to state 71
    T_THIS    shift, and go to state 114
    T_ADDOP   shift, and go to state 115
    T_NOTOP   shift, and go to state 116
    T_INCDEC  shift, and go to state 117
    T_SIZEOP  shift, and go to state 118
    T_LPAREN  shift, and go to state 119
    T_LBRACK  shift, and go to state 120

    $default  reduce using rule 118 (decltype)

    expression      go to state 170
    variable        go to state 124
    constant        go to state 125
    listexpression  go to state 126
    decltype        go to state 127


State 116

   38 expression: T_NOTOP . expression

    T_ICONST  shift, and go to state 110
    T_FCONST  shift, and go to state 111
    T_CCONST  shift, and go to state 112
    T_SCONST  shift, and go to state 113
    T_STATIC  shift, and go to state 71
    T_THIS    shift, and go to state 114
    T_ADDOP   shift, and go to state 115
    T_NOTOP   shift, and go to state 116
    T_INCDEC  shift, and go to state 117
    T_SIZEOP  shift, and go to state 118
    T_LPAREN  shift, and go to state 119
    T_LBRACK  shift, and go to state 120

    $default  reduce using rule 118 (decltype)

    expression      go to state 171
    variable        go to state 124
    constant        go to state 125
    listexpression  go to state 126
    decltype        go to state 127


State 117

   41 expression: T_INCDEC . variable

    T_STATIC  shift, and go to state 71
    T_THIS    shift, and go to state 114

    $default  reduce using rule 118 (decltype)

    variable  go to state 172
    decltype  go to state 127


State 118

   40 expression: T_SIZEOP . expression

    T_ICONST  shift, and go to state 110
    T_FCONST  shift, and go to state 111
    T_CCONST  shift, and go to state 112
    T_SCONST  shift, and go to state 113
    T_STATIC  shift, and go to state 71
    T_THIS    shift, and go to state 114
    T_ADDOP   shift, and go to state 115
    T_NOTOP   shift, and go to state 116
    T_INCDEC  shift, and go to state 117
    T_SIZEOP  shift, and go to state 118
    T_LPAREN  shift, and go to state 119
    T_LBRACK  shift, and go to state 120

    $default  reduce using rule 118 (decltype)

    expression      go to state 173
    variable        go to state 124
    constant        go to state 125
    listexpression  go to state 126
    decltype        go to state 127


State 119

   46 expression: T_LPAREN . standard_type T_RPAREN

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10

    standard_type  go to state 174


State 120

   56 listexpression: T_LBRACK . expression_list T_RBRACK

    $default  reduce using rule 51 (expression_list)

    expression_list  go to state 175


State 121

   31 init_value: T_LBRACE . init_values T_RBRACE

    T_ICONST  shift, and go to state 110
    T_FCONST  shift, and go to state 111
    T_CCONST  shift, and go to state 112
    T_SCONST  shift, and go to state 113
    T_STATIC  shift, and go to state 71
    T_THIS    shift, and go to state 114
    T_ADDOP   shift, and go to state 115
    T_NOTOP   shift, and go to state 116
    T_INCDEC  shift, and go to state 117
    T_SIZEOP  shift, and go to state 118
    T_LPAREN  shift, and go to state 119
    T_LBRACK  shift, and go to state 120
    T_LBRACE  shift, and go to state 121

    $default  reduce using rule 118 (decltype)

    init_value      go to state 176
    expression      go to state 123
    variable        go to state 124
    constant        go to state 125
    listexpression  go to state 126
    init_values     go to state 177
    decltype        go to state 127


State 122

   28 initializer: T_ASSIGN init_value .

    $default  reduce using rule 28 (initializer)


State 123

   30 init_value: expression .
   32 expression: expression . T_OROP expression
   33           | expression . T_ANDOP expression
   34           | expression . T_EQUOP expression
   35           | expression . T_RELOP expression
   36           | expression . T_ADDOP expression
   37           | expression . T_MULOP expression

    T_OROP   shift, and go to state 178
    T_ANDOP  shift, and go to state 179
    T_EQUOP  shift, and go to state 180
    T_RELOP  shift, and go to state 181
    T_ADDOP  shift, and go to state 182
    T_MULOP  shift, and go to state 183

    $default  reduce using rule 30 (init_value)


State 124

   42 expression: variable . T_INCDEC
   43           | variable .
   44           | variable . T_LPAREN expression_list T_RPAREN
   48 variable: variable . T_DOT T_ID

    T_INCDEC  shift, and go to state 184
    T_LPAREN  shift, and go to state 185
    T_DOT     shift, and go to state 186

    $default  reduce using rule 43 (expression)


State 125

   45 expression: constant .

    $default  reduce using rule 45 (expression)


State 126

   47 expression: listexpression .

    $default  reduce using rule 47 (expression)


State 127

   49 variable: decltype . T_ID

    T_ID  shift, and go to state 187


State 128

   76 variabledef: listspec . T_ID dims

    T_ID  shift, and go to state 188


State 129

   94 init_variabledefs: init_variabledefs T_COMMA init_variabledef .

    $default  reduce using rule 94 (init_variabledefs)


State 130

   89 pass_list_dims: T_REFER .
  109 pass_variabledef: T_REFER . T_ID

    T_ID  shift, and go to state 189

    $default  reduce using rule 89 (pass_list_dims)


State 131

   76 variabledef: listspec . T_ID dims
   90 pass_list_dims: listspec . dims

    T_ID  shift, and go to state 188

    $default  reduce using rule 21 (dims)

    dims  go to state 190


State 132

  108 pass_variabledef: variabledef .

    $default  reduce using rule 108 (pass_variabledef)


State 133

   88 parameter_types: typename pass_list_dims .

    $default  reduce using rule 88 (parameter_types)


State 134

  107 parameter_list: typename pass_variabledef .

    $default  reduce using rule 107 (parameter_list)


State 135

   85 short_par_func_header: func_header_start T_LPAREN parameter_types T_RPAREN .

    $default  reduce using rule 85 (short_par_func_header)


State 136

   87 parameter_types: parameter_types T_COMMA . typename pass_list_dims

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 14

    typename       go to state 191
    standard_type  go to state 18


State 137

  103 full_par_func_header: func_header_start T_LPAREN parameter_list T_RPAREN .

    $default  reduce using rule 103 (full_par_func_header)


State 138

  106 parameter_list: parameter_list T_COMMA . typename pass_variabledef

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 14

    typename       go to state 192
    standard_type  go to state 18


State 139

  125 statement: T_CONTINUE T_SEMI .

    $default  reduce using rule 125 (statement)


State 140

  126 statement: T_BREAK T_SEMI .

    $default  reduce using rule 126 (statement)


State 141

  128 for_statement: T_FOR T_LPAREN . optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

    $default  reduce using rule 129 (optexpr)

    optexpr  go to state 193


State 142

  130 return_statement: T_RETURN optexpr . T_SEMI

    T_SEMI  shift, and go to state 194


State 143

  131 io_statement: T_CIN T_INP . in_list T_SEMI

    T_STATIC  shift, and go to state 71
    T_THIS    shift, and go to state 114

    $default  reduce using rule 118 (decltype)

    variable  go to state 195
    decltype  go to state 127
    in_list   go to state 196
    in_item   go to state 197


State 144

  135 comp_statement: T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 198


State 145

  101 full_func_declaration: nopar_func_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 101 (full_func_declaration)


State 146

  115 declarations: declarations decltype . typename variabledefs T_SEMI

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 14

    typename       go to state 199
    standard_type  go to state 18


State 147

  111 decl_statements: declarations statements .
  119 statements: statements . statement

    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_FOR       shift, and go to state 74
    T_RETURN    shift, and go to state 75
    T_CIN       shift, and go to state 76
    T_SEMI      shift, and go to state 77
    T_LBRACE    shift, and go to state 78

    $default  reduce using rule 111 (decl_statements)

    statement         go to state 149
    for_statement     go to state 84
    return_statement  go to state 85
    io_statement      go to state 86
    comp_statement    go to state 87


State 148

  116 declarations: decltype typename . variabledefs T_SEMI

    T_LIST  shift, and go to state 39

    $default  reduce using rule 19 (listspec)

    listspec      go to state 128
    variabledefs  go to state 200
    variabledef   go to state 162


State 149

  119 statements: statements statement .

    $default  reduce using rule 119 (statements)


State 150

   99 full_func_declaration: full_par_func_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 99 (full_func_declaration)


State 151

  109 pass_variabledef: T_REFER . T_ID

    T_ID  shift, and go to state 189


State 152

  102 full_par_func_header: class_func_header_start T_LPAREN parameter_list T_RPAREN .

    $default  reduce using rule 102 (full_par_func_header)


State 153

  100 full_func_declaration: nopar_class_func_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 100 (full_func_declaration)


State 154

  136 main_function: main_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 136 (main_function)


State 155

   10 typedef_declaration: T_TYPEDEF typename listspec T_ID dims . T_SEMI
   20 dims: dims . dim

    T_SEMI    shift, and go to state 201
    T_LBRACK  shift, and go to state 168

    dim  go to state 169


State 156

   65 access: T_PRIVATE . T_COLON

    T_COLON  shift, and go to state 202


State 157

   66 access: T_PROTECTED . T_COLON

    T_COLON  shift, and go to state 203


State 158

   67 access: T_PUBLIC . T_COLON

    T_COLON  shift, and go to state 204


State 159

   60 class_body: parent T_LBRACE members_methods . T_RBRACE
   63 members_methods: members_methods . access member_or_method

    T_PRIVATE    shift, and go to state 156
    T_PROTECTED  shift, and go to state 157
    T_PUBLIC     shift, and go to state 158
    T_RBRACE     shift, and go to state 205

    $default  reduce using rule 68 (access)

    access  go to state 206


State 160

   64 members_methods: access . member_or_method

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_UNION   shift, and go to state 207
    T_ID      shift, and go to state 14

    typename                go to state 208
    standard_type           go to state 18
    member_or_method        go to state 209
    member                  go to state 210
    var_declaration         go to state 211
    anonymous_union         go to state 212
    method                  go to state 213
    short_func_declaration  go to state 214
    short_par_func_header   go to state 22
    func_header_start       go to state 215
    nopar_func_header       go to state 216


State 161

   73 var_declaration: typename variabledefs . T_SEMI
   74 variabledefs: variabledefs . T_COMMA variabledef

    T_SEMI   shift, and go to state 217
    T_COMMA  shift, and go to state 218


State 162

   75 variabledefs: variabledef .

    $default  reduce using rule 75 (variabledefs)


State 163

   78 union_body: T_LBRACE fields T_RBRACE .

    $default  reduce using rule 78 (union_body)


State 164

   79 fields: fields field .

    $default  reduce using rule 79 (fields)


State 165

   27 id_list: T_ID initializer .

    $default  reduce using rule 27 (id_list)


State 166

   26 id_list: id_list T_COMMA . T_ID initializer

    T_ID  shift, and go to state 219


State 167

   25 enum_body: T_LBRACE id_list T_RBRACE .

    $default  reduce using rule 25 (enum_body)


State 168

   22 dim: T_LBRACK . T_ICONST T_RBRACK
   23    | T_LBRACK . T_RBRACK

    T_ICONST  shift, and go to state 220
    T_RBRACK  shift, and go to state 221


State 169

   20 dims: dims dim .

    $default  reduce using rule 20 (dims)


State 170

   32 expression: expression . T_OROP expression
   33           | expression . T_ANDOP expression
   34           | expression . T_EQUOP expression
   35           | expression . T_RELOP expression
   36           | expression . T_ADDOP expression
   37           | expression . T_MULOP expression
   39           | T_ADDOP expression .

    T_MULOP  shift, and go to state 183

    $default  reduce using rule 39 (expression)


State 171

   32 expression: expression . T_OROP expression
   33           | expression . T_ANDOP expression
   34           | expression . T_EQUOP expression
   35           | expression . T_RELOP expression
   36           | expression . T_ADDOP expression
   37           | expression . T_MULOP expression
   38           | T_NOTOP expression .

    $default  reduce using rule 38 (expression)


State 172

   41 expression: T_INCDEC variable .
   48 variable: variable . T_DOT T_ID

    T_DOT  shift, and go to state 186

    $default  reduce using rule 41 (expression)


State 173

   32 expression: expression . T_OROP expression
   33           | expression . T_ANDOP expression
   34           | expression . T_EQUOP expression
   35           | expression . T_RELOP expression
   36           | expression . T_ADDOP expression
   37           | expression . T_MULOP expression
   40           | T_SIZEOP expression .

    $default  reduce using rule 40 (expression)


State 174

   46 expression: T_LPAREN standard_type . T_RPAREN

    T_RPAREN  shift, and go to state 222


State 175

   56 listexpression: T_LBRACK expression_list . T_RBRACK

    T_RBRACK  shift, and go to state 223


State 176

   58 init_values: init_value .

    $default  reduce using rule 58 (init_values)


State 177

   31 init_value: T_LBRACE init_values . T_RBRACE
   57 init_values: init_values . T_COMMA init_value

    T_COMMA   shift, and go to state 224
    T_RBRACE  shift, and go to state 225


State 178

   32 expression: expression T_OROP . expression

    T_ICONST  shift, and go to state 110
    T_FCONST  shift, and go to state 111
    T_CCONST  shift, and go to state 112
    T_SCONST  shift, and go to state 113
    T_STATIC  shift, and go to state 71
    T_THIS    shift, and go to state 114
    T_ADDOP   shift, and go to state 115
    T_NOTOP   shift, and go to state 116
    T_INCDEC  shift, and go to state 117
    T_SIZEOP  shift, and go to state 118
    T_LPAREN  shift, and go to state 119
    T_LBRACK  shift, and go to state 120

    $default  reduce using rule 118 (decltype)

    expression      go to state 226
    variable        go to state 124
    constant        go to state 125
    listexpression  go to state 126
    decltype        go to state 127


State 179

   33 expression: expression T_ANDOP . expression

    T_ICONST  shift, and go to state 110
    T_FCONST  shift, and go to state 111
    T_CCONST  shift, and go to state 112
    T_SCONST  shift, and go to state 113
    T_STATIC  shift, and go to state 71
    T_THIS    shift, and go to state 114
    T_ADDOP   shift, and go to state 115
    T_NOTOP   shift, and go to state 116
    T_INCDEC  shift, and go to state 117
    T_SIZEOP  shift, and go to state 118
    T_LPAREN  shift, and go to state 119
    T_LBRACK  shift, and go to state 120

    $default  reduce using rule 118 (decltype)

    expression      go to state 227
    variable        go to state 124
    constant        go to state 125
    listexpression  go to state 126
    decltype        go to state 127


State 180

   34 expression: expression T_EQUOP . expression

    T_ICONST  shift, and go to state 110
    T_FCONST  shift, and go to state 111
    T_CCONST  shift, and go to state 112
    T_SCONST  shift, and go to state 113
    T_STATIC  shift, and go to state 71
    T_THIS    shift, and go to state 114
    T_ADDOP   shift, and go to state 115
    T_NOTOP   shift, and go to state 116
    T_INCDEC  shift, and go to state 117
    T_SIZEOP  shift, and go to state 118
    T_LPAREN  shift, and go to state 119
    T_LBRACK  shift, and go to state 120

    $default  reduce using rule 118 (decltype)

    expression      go to state 228
    variable        go to state 124
    constant        go to state 125
    listexpression  go to state 126
    decltype        go to state 127


State 181

   35 expression: expression T_RELOP . expression

    T_ICONST  shift, and go to state 110
    T_FCONST  shift, and go to state 111
    T_CCONST  shift, and go to state 112
    T_SCONST  shift, and go to state 113
    T_STATIC  shift, and go to state 71
    T_THIS    shift, and go to state 114
    T_ADDOP   shift, and go to state 115
    T_NOTOP   shift, and go to state 116
    T_INCDEC  shift, and go to state 117
    T_SIZEOP  shift, and go to state 118
    T_LPAREN  shift, and go to state 119
    T_LBRACK  shift, and go to state 120

    $default  reduce using rule 118 (decltype)

    expression      go to state 229
    variable        go to state 124
    constant        go to state 125
    listexpression  go to state 126
    decltype        go to state 127


State 182

   36 expression: expression T_ADDOP . expression

    T_ICONST  shift, and go to state 110
    T_FCONST  shift, and go to state 111
    T_CCONST  shift, and go to state 112
    T_SCONST  shift, and go to state 113
    T_STATIC  shift, and go to state 71
    T_THIS    shift, and go to state 114
    T_ADDOP   shift, and go to state 115
    T_NOTOP   shift, and go to state 116
    T_INCDEC  shift, and go to state 117
    T_SIZEOP  shift, and go to state 118
    T_LPAREN  shift, and go to state 119
    T_LBRACK  shift, and go to state 120

    $default  reduce using rule 118 (decltype)

    expression      go to state 230
    variable        go to state 124
    constant        go to state 125
    listexpression  go to state 126
    decltype        go to state 127


State 183

   37 expression: expression T_MULOP . expression

    T_ICONST  shift, and go to state 110
    T_FCONST  shift, and go to state 111
    T_CCONST  shift, and go to state 112
    T_SCONST  shift, and go to state 113
    T_STATIC  shift, and go to state 71
    T_THIS    shift, and go to state 114
    T_ADDOP   shift, and go to state 115
    T_NOTOP   shift, and go to state 116
    T_INCDEC  shift, and go to state 117
    T_SIZEOP  shift, and go to state 118
    T_LPAREN  shift, and go to state 119
    T_LBRACK  shift, and go to state 120

    $default  reduce using rule 118 (decltype)

    expression      go to state 231
    variable        go to state 124
    constant        go to state 125
    listexpression  go to state 126
    decltype        go to state 127


State 184

   42 expression: variable T_INCDEC .

    $default  reduce using rule 42 (expression)


State 185

   44 expression: variable T_LPAREN . expression_list T_RPAREN

    $default  reduce using rule 51 (expression_list)

    expression_list  go to state 232


State 186

   48 variable: variable T_DOT . T_ID

    T_ID  shift, and go to state 233


State 187

   49 variable: decltype T_ID .

    $default  reduce using rule 49 (variable)


State 188

   76 variabledef: listspec T_ID . dims

    $default  reduce using rule 21 (dims)

    dims  go to state 108


State 189

  109 pass_variabledef: T_REFER T_ID .

    $default  reduce using rule 109 (pass_variabledef)


State 190

   20 dims: dims . dim
   90 pass_list_dims: listspec dims .

    T_LBRACK  shift, and go to state 168

    $default  reduce using rule 90 (pass_list_dims)

    dim  go to state 169


State 191

   87 parameter_types: parameter_types T_COMMA typename . pass_list_dims

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 234

    $default  reduce using rule 19 (listspec)

    listspec        go to state 235
    pass_list_dims  go to state 236


State 192

  106 parameter_list: parameter_list T_COMMA typename . pass_variabledef

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 151

    $default  reduce using rule 19 (listspec)

    listspec          go to state 128
    variabledef       go to state 132
    pass_variabledef  go to state 237


State 193

  128 for_statement: T_FOR T_LPAREN optexpr . T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

    T_SEMI  shift, and go to state 238


State 194

  130 return_statement: T_RETURN optexpr T_SEMI .

    $default  reduce using rule 130 (return_statement)


State 195

   48 variable: variable . T_DOT T_ID
  134 in_item: variable .

    T_DOT  shift, and go to state 186

    $default  reduce using rule 134 (in_item)


State 196

  131 io_statement: T_CIN T_INP in_list . T_SEMI
  132 in_list: in_list . T_INP in_item

    T_SEMI  shift, and go to state 239
    T_INP   shift, and go to state 240


State 197

  133 in_list: in_item .

    $default  reduce using rule 133 (in_list)


State 198

  135 comp_statement: T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 135 (comp_statement)


State 199

  115 declarations: declarations decltype typename . variabledefs T_SEMI

    T_LIST  shift, and go to state 39

    $default  reduce using rule 19 (listspec)

    listspec      go to state 128
    variabledefs  go to state 241
    variabledef   go to state 162


State 200

   74 variabledefs: variabledefs . T_COMMA variabledef
  116 declarations: decltype typename variabledefs . T_SEMI

    T_SEMI   shift, and go to state 242
    T_COMMA  shift, and go to state 218


State 201

   10 typedef_declaration: T_TYPEDEF typename listspec T_ID dims T_SEMI .

    $default  reduce using rule 10 (typedef_declaration)


State 202

   65 access: T_PRIVATE T_COLON .

    $default  reduce using rule 65 (access)


State 203

   66 access: T_PROTECTED T_COLON .

    $default  reduce using rule 66 (access)


State 204

   67 access: T_PUBLIC T_COLON .

    $default  reduce using rule 67 (access)


State 205

   60 class_body: parent T_LBRACE members_methods T_RBRACE .

    $default  reduce using rule 60 (class_body)


State 206

   63 members_methods: members_methods access . member_or_method

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_UNION   shift, and go to state 207
    T_ID      shift, and go to state 14

    typename                go to state 208
    standard_type           go to state 18
    member_or_method        go to state 243
    member                  go to state 210
    var_declaration         go to state 211
    anonymous_union         go to state 212
    method                  go to state 213
    short_func_declaration  go to state 214
    short_par_func_header   go to state 22
    func_header_start       go to state 215
    nopar_func_header       go to state 216


State 207

   77 anonymous_union: T_UNION . union_body T_SEMI

    T_LBRACE  shift, and go to state 56

    union_body  go to state 244


State 208

   73 var_declaration: typename . variabledefs T_SEMI
   86 func_header_start: typename . listspec T_ID

    T_LIST  shift, and go to state 39

    $default  reduce using rule 19 (listspec)

    listspec      go to state 245
    variabledefs  go to state 161
    variabledef   go to state 162


State 209

   64 members_methods: access member_or_method .

    $default  reduce using rule 64 (members_methods)


State 210

   69 member_or_method: member .

    $default  reduce using rule 69 (member_or_method)


State 211

   71 member: var_declaration .

    $default  reduce using rule 71 (member)


State 212

   72 member: anonymous_union .

    $default  reduce using rule 72 (member)


State 213

   70 member_or_method: method .

    $default  reduce using rule 70 (member_or_method)


State 214

   82 method: short_func_declaration .

    $default  reduce using rule 82 (method)


State 215

   85 short_par_func_header: func_header_start . T_LPAREN parameter_types T_RPAREN
   91 nopar_func_header: func_header_start . T_LPAREN T_RPAREN

    T_LPAREN  shift, and go to state 246


State 216

   84 short_func_declaration: nopar_func_header . T_SEMI

    T_SEMI  shift, and go to state 46


State 217

   73 var_declaration: typename variabledefs T_SEMI .

    $default  reduce using rule 73 (var_declaration)


State 218

   74 variabledefs: variabledefs T_COMMA . variabledef

    T_LIST  shift, and go to state 39

    $default  reduce using rule 19 (listspec)

    listspec     go to state 128
    variabledef  go to state 247


State 219

   26 id_list: id_list T_COMMA T_ID . initializer

    T_ASSIGN  shift, and go to state 63

    $default  reduce using rule 29 (initializer)

    initializer  go to state 248


State 220

   22 dim: T_LBRACK T_ICONST . T_RBRACK

    T_RBRACK  shift, and go to state 249


State 221

   23 dim: T_LBRACK T_RBRACK .

    $default  reduce using rule 23 (dim)


State 222

   46 expression: T_LPAREN standard_type T_RPAREN .

    $default  reduce using rule 46 (expression)


State 223

   56 listexpression: T_LBRACK expression_list T_RBRACK .

    $default  reduce using rule 56 (listexpression)


State 224

   57 init_values: init_values T_COMMA . init_value

    T_ICONST  shift, and go to state 110
    T_FCONST  shift, and go to state 111
    T_CCONST  shift, and go to state 112
    T_SCONST  shift, and go to state 113
    T_STATIC  shift, and go to state 71
    T_THIS    shift, and go to state 114
    T_ADDOP   shift, and go to state 115
    T_NOTOP   shift, and go to state 116
    T_INCDEC  shift, and go to state 117
    T_SIZEOP  shift, and go to state 118
    T_LPAREN  shift, and go to state 119
    T_LBRACK  shift, and go to state 120
    T_LBRACE  shift, and go to state 121

    $default  reduce using rule 118 (decltype)

    init_value      go to state 250
    expression      go to state 123
    variable        go to state 124
    constant        go to state 125
    listexpression  go to state 126
    decltype        go to state 127


State 225

   31 init_value: T_LBRACE init_values T_RBRACE .

    $default  reduce using rule 31 (init_value)


State 226

   32 expression: expression . T_OROP expression
   32           | expression T_OROP expression .
   33           | expression . T_ANDOP expression
   34           | expression . T_EQUOP expression
   35           | expression . T_RELOP expression
   36           | expression . T_ADDOP expression
   37           | expression . T_MULOP expression

    T_EQUOP  shift, and go to state 180
    T_RELOP  shift, and go to state 181
    T_ADDOP  shift, and go to state 182
    T_MULOP  shift, and go to state 183

    $default  reduce using rule 32 (expression)


State 227

   32 expression: expression . T_OROP expression
   33           | expression . T_ANDOP expression
   33           | expression T_ANDOP expression .
   34           | expression . T_EQUOP expression
   35           | expression . T_RELOP expression
   36           | expression . T_ADDOP expression
   37           | expression . T_MULOP expression

    T_EQUOP  shift, and go to state 180
    T_RELOP  shift, and go to state 181
    T_ADDOP  shift, and go to state 182
    T_MULOP  shift, and go to state 183

    $default  reduce using rule 33 (expression)


State 228

   32 expression: expression . T_OROP expression
   33           | expression . T_ANDOP expression
   34           | expression . T_EQUOP expression
   34           | expression T_EQUOP expression .
   35           | expression . T_RELOP expression
   36           | expression . T_ADDOP expression
   37           | expression . T_MULOP expression

    T_ADDOP  shift, and go to state 182
    T_MULOP  shift, and go to state 183

    $default  reduce using rule 34 (expression)


State 229

   32 expression: expression . T_OROP expression
   33           | expression . T_ANDOP expression
   34           | expression . T_EQUOP expression
   35           | expression . T_RELOP expression
   35           | expression T_RELOP expression .
   36           | expression . T_ADDOP expression
   37           | expression . T_MULOP expression

    T_ADDOP  shift, and go to state 182
    T_MULOP  shift, and go to state 183

    $default  reduce using rule 35 (expression)


State 230

   32 expression: expression . T_OROP expression
   33           | expression . T_ANDOP expression
   34           | expression . T_EQUOP expression
   35           | expression . T_RELOP expression
   36           | expression . T_ADDOP expression
   36           | expression T_ADDOP expression .
   37           | expression . T_MULOP expression

    T_MULOP  shift, and go to state 183

    $default  reduce using rule 36 (expression)


State 231

   32 expression: expression . T_OROP expression
   33           | expression . T_ANDOP expression
   34           | expression . T_EQUOP expression
   35           | expression . T_RELOP expression
   36           | expression . T_ADDOP expression
   37           | expression . T_MULOP expression
   37           | expression T_MULOP expression .

    $default  reduce using rule 37 (expression)


State 232

   44 expression: variable T_LPAREN expression_list . T_RPAREN

    T_RPAREN  shift, and go to state 251


State 233

   48 variable: variable T_DOT T_ID .

    $default  reduce using rule 48 (variable)


State 234

   89 pass_list_dims: T_REFER .

    $default  reduce using rule 89 (pass_list_dims)


State 235

   90 pass_list_dims: listspec . dims

    $default  reduce using rule 21 (dims)

    dims  go to state 190


State 236

   87 parameter_types: parameter_types T_COMMA typename pass_list_dims .

    $default  reduce using rule 87 (parameter_types)


State 237

  106 parameter_list: parameter_list T_COMMA typename pass_variabledef .

    $default  reduce using rule 106 (parameter_list)


State 238

  128 for_statement: T_FOR T_LPAREN optexpr T_SEMI . optexpr T_SEMI optexpr T_RPAREN statement

    $default  reduce using rule 129 (optexpr)

    optexpr  go to state 252


State 239

  131 io_statement: T_CIN T_INP in_list T_SEMI .

    $default  reduce using rule 131 (io_statement)


State 240

  132 in_list: in_list T_INP . in_item

    T_STATIC  shift, and go to state 71
    T_THIS    shift, and go to state 114

    $default  reduce using rule 118 (decltype)

    variable  go to state 195
    decltype  go to state 127
    in_item   go to state 253


State 241

   74 variabledefs: variabledefs . T_COMMA variabledef
  115 declarations: declarations decltype typename variabledefs . T_SEMI

    T_SEMI   shift, and go to state 254
    T_COMMA  shift, and go to state 218


State 242

  116 declarations: decltype typename variabledefs T_SEMI .

    $default  reduce using rule 116 (declarations)


State 243

   63 members_methods: members_methods access member_or_method .

    $default  reduce using rule 63 (members_methods)


State 244

   77 anonymous_union: T_UNION union_body . T_SEMI

    T_SEMI  shift, and go to state 255


State 245

   76 variabledef: listspec . T_ID dims
   86 func_header_start: typename listspec . T_ID

    T_ID  shift, and go to state 256


State 246

   85 short_par_func_header: func_header_start T_LPAREN . parameter_types T_RPAREN
   91 nopar_func_header: func_header_start T_LPAREN . T_RPAREN

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_RPAREN  shift, and go to state 67
    T_ID      shift, and go to state 14

    typename         go to state 257
    standard_type    go to state 18
    parameter_types  go to state 69


State 247

   74 variabledefs: variabledefs T_COMMA variabledef .

    $default  reduce using rule 74 (variabledefs)


State 248

   26 id_list: id_list T_COMMA T_ID initializer .

    $default  reduce using rule 26 (id_list)


State 249

   22 dim: T_LBRACK T_ICONST T_RBRACK .

    $default  reduce using rule 22 (dim)


State 250

   57 init_values: init_values T_COMMA init_value .

    $default  reduce using rule 57 (init_values)


State 251

   44 expression: variable T_LPAREN expression_list T_RPAREN .

    $default  reduce using rule 44 (expression)


State 252

  128 for_statement: T_FOR T_LPAREN optexpr T_SEMI optexpr . T_SEMI optexpr T_RPAREN statement

    T_SEMI  shift, and go to state 258


State 253

  132 in_list: in_list T_INP in_item .

    $default  reduce using rule 132 (in_list)


State 254

  115 declarations: declarations decltype typename variabledefs T_SEMI .

    $default  reduce using rule 115 (declarations)


State 255

   77 anonymous_union: T_UNION union_body T_SEMI .

    $default  reduce using rule 77 (anonymous_union)


State 256

   76 variabledef: listspec T_ID . dims
   86 func_header_start: typename listspec T_ID .

    T_LPAREN  reduce using rule 86 (func_header_start)
    $default  reduce using rule 21 (dims)

    dims  go to state 108


State 257

   88 parameter_types: typename . pass_list_dims

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 234

    $default  reduce using rule 19 (listspec)

    listspec        go to state 235
    pass_list_dims  go to state 133


State 258

  128 for_statement: T_FOR T_LPAREN optexpr T_SEMI optexpr T_SEMI . optexpr T_RPAREN statement

    $default  reduce using rule 129 (optexpr)

    optexpr  go to state 259


State 259

  128 for_statement: T_FOR T_LPAREN optexpr T_SEMI optexpr T_SEMI optexpr . T_RPAREN statement

    T_RPAREN  shift, and go to state 260


State 260

  128 for_statement: T_FOR T_LPAREN optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN . statement

    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_FOR       shift, and go to state 74
    T_RETURN    shift, and go to state 75
    T_CIN       shift, and go to state 76
    T_SEMI      shift, and go to state 77
    T_LBRACE    shift, and go to state 78

    statement         go to state 261
    for_statement     go to state 84
    return_statement  go to state 85
    io_statement      go to state 86
    comp_statement    go to state 87


State 261

  128 for_statement: T_FOR T_LPAREN optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement .

    $default  reduce using rule 128 (for_statement)
