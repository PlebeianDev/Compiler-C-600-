Terminals unused in grammar

   T_EOF


Grammar

    0 $accept: program $end

    1 program: global_declarations main_function

    2 global_declarations: global_declarations global_declaration
    3                    | %empty

    4 global_declaration: typedef_declaration
    5                   | enum_declaration
    6                   | class_declaration
    7                   | union_declaration
    8                   | global_var_declaration
    9                   | func_declaration

   10 $@1: %empty

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID $@1 dims T_SEMI

   12 typename: standard_type
   13         | T_ID

   14 standard_type: T_CHAR
   15              | T_INT
   16              | T_FLOAT
   17              | T_STRING
   18              | T_VOID

   19 listspec: T_LIST
   20         | %empty

   21 dims: dims dim
   22     | %empty

   23 dim: T_LBRACK T_ICONST T_RBRACK
   24    | T_LBRACK T_RBRACK

   25 $@2: %empty

   26 $@3: %empty

   27 enum_declaration: T_ENUM T_ID $@2 enum_body $@3 T_SEMI

   28 enum_body: T_LBRACE id_list T_RBRACE

   29 id_list: id_list T_COMMA T_ID initializer

   30 $@4: %empty

   31 id_list: T_ID $@4 initializer

   32 initializer: T_ASSIGN init_value
   33            | %empty

   34 init_value: expression
   35           | T_LBRACE init_values T_RBRACE

   36 expression: expression T_OROP expression
   37           | expression T_ANDOP expression
   38           | expression T_EQUOP expression
   39           | expression T_RELOP expression
   40           | expression T_ADDOP expression
   41           | expression T_MULOP expression
   42           | T_NOTOP expression
   43           | T_ADDOP expression
   44           | T_SIZEOP expression
   45           | T_INCDEC variable
   46           | variable T_INCDEC
   47           | variable
   48           | variable T_LPAREN expression_list T_RPAREN
   49           | T_LENGTH T_LPAREN general_expression T_RPAREN
   50           | T_NEW T_LPAREN general_expression T_RPAREN
   51           | constant
   52           | T_LPAREN general_expression T_RPAREN
   53           | T_LPAREN standard_type T_RPAREN
   54           | listexpression

   55 variable: variable T_LBRACK general_expression T_RBRACK
   56         | variable T_DOT T_ID
   57         | T_LISTFUNC T_LPAREN general_expression T_RPAREN
   58         | decltype T_ID
   59         | T_THIS

   60 general_expression: general_expression T_COMMA general_expression
   61                   | assignment

   62 assignment: variable T_ASSIGN assignment
   63           | expression

   64 expression_list: general_expression
   65                | %empty

   66 constant: T_CCONST
   67         | T_ICONST
   68         | T_FCONST
   69         | T_SCONST

   70 listexpression: T_LBRACK expression_list T_RBRACK

   71 init_values: init_values T_COMMA init_value
   72            | init_value

   73 $@5: %empty

   74 class_declaration: T_CLASS T_ID $@5 class_body T_SEMI

   75 class_body: parent T_LBRACE members_methods T_RBRACE

   76 parent: T_COLON T_ID
   77       | %empty

   78 members_methods: members_methods access member_or_method
   79                | access member_or_method

   80 access: T_PRIVATE T_COLON
   81       | T_PROTECTED T_COLON
   82       | T_PUBLIC T_COLON
   83       | %empty

   84 member_or_method: member
   85                 | method

   86 member: var_declaration
   87       | anonymous_union

   88 var_declaration: typename variabledefs T_SEMI

   89 variabledefs: variabledefs T_COMMA variabledef
   90             | variabledef

   91 variabledef: listspec T_ID dims

   92 $@6: %empty

   93 $@7: %empty

   94 anonymous_union: T_UNION $@6 union_body $@7 T_SEMI

   95 union_body: T_LBRACE fields T_RBRACE

   96 fields: fields field
   97       | field

   98 field: var_declaration

   99 method: short_func_declaration

  100 short_func_declaration: short_par_func_header T_SEMI
  101                       | nopar_func_header T_SEMI

  102 short_par_func_header: func_header_start T_LPAREN parameter_types T_RPAREN

  103 func_header_start: typename listspec T_ID

  104 parameter_types: parameter_types T_COMMA typename pass_list_dims
  105                | typename pass_list_dims

  106 pass_list_dims: T_REFER
  107               | listspec dims

  108 nopar_func_header: func_header_start T_LPAREN T_RPAREN

  109 $@8: %empty

  110 union_declaration: T_UNION T_ID $@8 union_body T_SEMI

  111 global_var_declaration: typename init_variabledefs T_SEMI

  112 init_variabledefs: init_variabledefs T_COMMA init_variabledef
  113                  | init_variabledef

  114 init_variabledef: variabledef initializer

  115 func_declaration: short_func_declaration
  116                 | full_func_declaration

  117 full_func_declaration: full_par_func_header T_LBRACE decl_statements T_RBRACE
  118                      | nopar_class_func_header T_LBRACE decl_statements T_RBRACE
  119                      | nopar_func_header T_LBRACE decl_statements T_RBRACE

  120 full_par_func_header: class_func_header_start T_LPAREN parameter_list T_RPAREN
  121                     | func_header_start T_LPAREN parameter_list T_RPAREN

  122 class_func_header_start: typename listspec func_class T_ID

  123 func_class: T_ID T_METH

  124 parameter_list: parameter_list T_COMMA typename pass_variabledef
  125               | typename pass_variabledef

  126 pass_variabledef: variabledef
  127                 | T_REFER T_ID

  128 nopar_class_func_header: class_func_header_start T_LPAREN T_RPAREN

  129 decl_statements: declarations statements
  130                | declarations
  131                | statements
  132                | %empty

  133 declarations: declarations decltype typename variabledefs T_SEMI
  134             | decltype typename variabledefs T_SEMI

  135 decltype: T_STATIC
  136         | %empty

  137 statements: statements statement
  138           | statement

  139 statement: expression_statement
  140          | if_statement
  141          | while_statement
  142          | for_statement
  143          | switch_statement
  144          | return_statement
  145          | io_statement
  146          | comp_statement
  147          | T_CONTINUE T_SEMI
  148          | T_BREAK T_SEMI
  149          | T_SEMI

  150 expression_statement: general_expression T_SEMI

  151 $@9: %empty

  152 $@10: %empty

  153 if_statement: T_IF T_LPAREN $@9 general_expression T_RPAREN statement $@10 if_tail

  154 $@11: %empty

  155 if_tail: T_ELSE $@11 statement
  156        | %empty

  157 $@12: %empty

  158 while_statement: T_WHILE T_LPAREN $@12 general_expression T_RPAREN statement

  159 $@13: %empty

  160 for_statement: T_FOR T_LPAREN $@13 optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

  161 optexpr: general_expression
  162        | %empty

  163 $@14: %empty

  164 switch_statement: T_SWITCH T_LPAREN $@14 general_expression T_RPAREN switch_tail

  165 switch_tail: T_LBRACE decl_cases T_RBRACE
  166            | single_casestatement

  167 decl_cases: declarations casestatements
  168           | declarations
  169           | casestatements
  170           | %empty

  171 casestatements: casestatements casestatement
  172               | casestatement

  173 casestatement: T_CASE constant T_COLON casestatement

  174 $@15: %empty

  175 casestatement: T_CASE constant T_COLON $@15 statements

  176 $@16: %empty

  177 casestatement: T_DEFAULT T_COLON $@16 statements

  178 single_casestatement: T_CASE constant T_COLON single_casestatement

  179 $@17: %empty

  180 single_casestatement: T_CASE constant T_COLON $@17 statement

  181 return_statement: T_RETURN optexpr T_SEMI

  182 io_statement: T_CIN T_INP in_list T_SEMI
  183             | T_CIN T_INP in_list error
  184             | T_COUT T_OUT out_list T_SEMI
  185             | T_COUT T_OUT out_list error

  186 in_list: in_list T_INP in_item
  187        | in_item

  188 in_item: variable

  189 out_list: out_list T_OUT out_item
  190         | out_item

  191 out_item: general_expression

  192 comp_statement: T_LBRACE decl_statements T_RBRACE

  193 main_function: main_header T_LBRACE decl_statements T_RBRACE

  194 main_header: T_INP T_MAIN T_LPAREN T_RPAREN
  195            | T_INP T_MAIN error T_RPAREN
  196            | T_INP T_MAIN T_LPAREN error


Terminals, with rules where they appear

$end (0) 0
error (256) 183 185 195 196
T_ICONST (258) 23 67
T_FCONST (259) 68
T_CCONST (260) 66
T_SCONST (261) 69
T_EOF (262)
T_TYPEDEF (263) 11
T_CHAR (264) 14
T_INT (265) 15
T_FLOAT (266) 16
T_STRING (267) 17
T_CLASS (268) 74
T_PRIVATE (269) 80
T_PROTECTED (270) 81
T_PUBLIC (271) 82
T_VOID (272) 18
T_STATIC (273) 135
T_UNION (274) 94 110
T_ENUM (275) 27
T_LIST (276) 19
T_CONTINUE (277) 147
T_BREAK (278) 148
T_IF (279) 153
T_ELSE (280) 155
T_WHILE (281) 158
T_FOR (282) 160
T_SWITCH (283) 164
T_CASE (284) 173 175 178 180
T_DEFAULT (285) 177
T_RETURN (286) 181
T_LENGTH (287) 49
T_NEW (288) 50
T_CIN (289) 182 183
T_COUT (290) 184 185
T_MAIN (291) 194 195 196
T_THIS (292) 59
T_OROP (293) 36
T_ANDOP (294) 37
T_EQUOP (295) 38
T_RELOP (296) 39
T_ADDOP (297) 40 43
T_MULOP (298) 41
T_NOTOP (299) 42
T_INCDEC (300) 45 46
T_SIZEOP (301) 44
T_LPAREN (302) 48 49 50 52 53 57 102 108 120 121 128 153 158 160 164
    194 196
T_RPAREN (303) 48 49 50 52 53 57 102 108 120 121 128 153 158 160 164
    194 195
T_SEMI (304) 11 27 74 88 94 100 101 110 111 133 134 147 148 149 150
    160 181 182 184
T_DOT (305) 56
T_COMMA (306) 29 60 71 89 104 112 124
T_ASSIGN (307) 32 62
T_COLON (308) 76 80 81 82 173 175 177 178 180
T_LBRACK (309) 23 24 55 70
T_RBRACK (310) 23 24 55 70
T_REFER (311) 106 127
T_LBRACE (312) 28 35 75 95 117 118 119 165 192 193
T_RBRACE (313) 28 35 75 95 117 118 119 165 192 193
T_METH (314) 123
T_INP (315) 182 183 186 194 195 196
T_OUT (316) 184 185 189
T_ID (317) 11 13 27 29 31 56 58 74 76 91 103 110 122 123 127
T_LISTFUNC (318) 57
LOWER_THAN_ELSE (319)


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
program (66)
    on left: 1, on right: 0
global_declarations (67)
    on left: 2 3, on right: 1 2
global_declaration (68)
    on left: 4 5 6 7 8 9, on right: 2
typedef_declaration (69)
    on left: 11, on right: 4
$@1 (70)
    on left: 10, on right: 11
typename (71)
    on left: 12 13, on right: 11 88 103 104 105 111 122 124 125 133
    134
standard_type (72)
    on left: 14 15 16 17 18, on right: 12 53
listspec (73)
    on left: 19 20, on right: 11 91 103 107 122
dims (74)
    on left: 21 22, on right: 11 21 91 107
dim (75)
    on left: 23 24, on right: 21
enum_declaration (76)
    on left: 27, on right: 5
$@2 (77)
    on left: 25, on right: 27
$@3 (78)
    on left: 26, on right: 27
enum_body (79)
    on left: 28, on right: 27
id_list (80)
    on left: 29 31, on right: 28 29
$@4 (81)
    on left: 30, on right: 31
initializer (82)
    on left: 32 33, on right: 29 31 114
init_value (83)
    on left: 34 35, on right: 32 71 72
expression (84)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    54, on right: 34 36 37 38 39 40 41 42 43 44 63
variable (85)
    on left: 55 56 57 58 59, on right: 45 46 47 48 55 56 62 188
general_expression (86)
    on left: 60 61, on right: 49 50 52 55 57 60 64 150 153 158 161
    164 191
assignment (87)
    on left: 62 63, on right: 61 62
expression_list (88)
    on left: 64 65, on right: 48 70
constant (89)
    on left: 66 67 68 69, on right: 51 173 175 178 180
listexpression (90)
    on left: 70, on right: 54
init_values (91)
    on left: 71 72, on right: 35 71
class_declaration (92)
    on left: 74, on right: 6
$@5 (93)
    on left: 73, on right: 74
class_body (94)
    on left: 75, on right: 74
parent (95)
    on left: 76 77, on right: 75
members_methods (96)
    on left: 78 79, on right: 75 78
access (97)
    on left: 80 81 82 83, on right: 78 79
member_or_method (98)
    on left: 84 85, on right: 78 79
member (99)
    on left: 86 87, on right: 84
var_declaration (100)
    on left: 88, on right: 86 98
variabledefs (101)
    on left: 89 90, on right: 88 89 133 134
variabledef (102)
    on left: 91, on right: 89 90 114 126
anonymous_union (103)
    on left: 94, on right: 87
$@6 (104)
    on left: 92, on right: 94
$@7 (105)
    on left: 93, on right: 94
union_body (106)
    on left: 95, on right: 94 110
fields (107)
    on left: 96 97, on right: 95 96
field (108)
    on left: 98, on right: 96 97
method (109)
    on left: 99, on right: 85
short_func_declaration (110)
    on left: 100 101, on right: 99 115
short_par_func_header (111)
    on left: 102, on right: 100
func_header_start (112)
    on left: 103, on right: 102 108 121
parameter_types (113)
    on left: 104 105, on right: 102 104
pass_list_dims (114)
    on left: 106 107, on right: 104 105
nopar_func_header (115)
    on left: 108, on right: 101 119
union_declaration (116)
    on left: 110, on right: 7
$@8 (117)
    on left: 109, on right: 110
global_var_declaration (118)
    on left: 111, on right: 8
init_variabledefs (119)
    on left: 112 113, on right: 111 112
init_variabledef (120)
    on left: 114, on right: 112 113
func_declaration (121)
    on left: 115 116, on right: 9
full_func_declaration (122)
    on left: 117 118 119, on right: 116
full_par_func_header (123)
    on left: 120 121, on right: 117
class_func_header_start (124)
    on left: 122, on right: 120 128
func_class (125)
    on left: 123, on right: 122
parameter_list (126)
    on left: 124 125, on right: 120 121 124
pass_variabledef (127)
    on left: 126 127, on right: 124 125
nopar_class_func_header (128)
    on left: 128, on right: 118
decl_statements (129)
    on left: 129 130 131 132, on right: 117 118 119 192 193
declarations (130)
    on left: 133 134, on right: 129 130 133 167 168
decltype (131)
    on left: 135 136, on right: 58 133 134
statements (132)
    on left: 137 138, on right: 129 131 137 175 177
statement (133)
    on left: 139 140 141 142 143 144 145 146 147 148 149, on right:
    137 138 153 155 158 160 180
expression_statement (134)
    on left: 150, on right: 139
if_statement (135)
    on left: 153, on right: 140
$@9 (136)
    on left: 151, on right: 153
$@10 (137)
    on left: 152, on right: 153
if_tail (138)
    on left: 155 156, on right: 153
$@11 (139)
    on left: 154, on right: 155
while_statement (140)
    on left: 158, on right: 141
$@12 (141)
    on left: 157, on right: 158
for_statement (142)
    on left: 160, on right: 142
$@13 (143)
    on left: 159, on right: 160
optexpr (144)
    on left: 161 162, on right: 160 181
switch_statement (145)
    on left: 164, on right: 143
$@14 (146)
    on left: 163, on right: 164
switch_tail (147)
    on left: 165 166, on right: 164
decl_cases (148)
    on left: 167 168 169 170, on right: 165
casestatements (149)
    on left: 171 172, on right: 167 169 171
casestatement (150)
    on left: 173 175 177, on right: 171 172 173
$@15 (151)
    on left: 174, on right: 175
$@16 (152)
    on left: 176, on right: 177
single_casestatement (153)
    on left: 178 180, on right: 166 178
$@17 (154)
    on left: 179, on right: 180
return_statement (155)
    on left: 181, on right: 144
io_statement (156)
    on left: 182 183 184 185, on right: 145
in_list (157)
    on left: 186 187, on right: 182 183 186
in_item (158)
    on left: 188, on right: 186 187
out_list (159)
    on left: 189 190, on right: 184 185 189
out_item (160)
    on left: 191, on right: 189 190
comp_statement (161)
    on left: 192, on right: 146
main_function (162)
    on left: 193, on right: 1
main_header (163)
    on left: 194 195 196, on right: 193


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (global_declarations)

    program              go to state 1
    global_declarations  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_declarations . main_function
    2 global_declarations: global_declarations . global_declaration

    T_TYPEDEF  shift, and go to state 4
    T_CHAR     shift, and go to state 5
    T_INT      shift, and go to state 6
    T_FLOAT    shift, and go to state 7
    T_STRING   shift, and go to state 8
    T_CLASS    shift, and go to state 9
    T_VOID     shift, and go to state 10
    T_UNION    shift, and go to state 11
    T_ENUM     shift, and go to state 12
    T_INP      shift, and go to state 13
    T_ID       shift, and go to state 14

    global_declaration       go to state 15
    typedef_declaration      go to state 16
    typename                 go to state 17
    standard_type            go to state 18
    enum_declaration         go to state 19
    class_declaration        go to state 20
    short_func_declaration   go to state 21
    short_par_func_header    go to state 22
    func_header_start        go to state 23
    nopar_func_header        go to state 24
    union_declaration        go to state 25
    global_var_declaration   go to state 26
    func_declaration         go to state 27
    full_func_declaration    go to state 28
    full_par_func_header     go to state 29
    class_func_header_start  go to state 30
    nopar_class_func_header  go to state 31
    main_function            go to state 32
    main_header              go to state 33


State 3

    0 $accept: program $end .

    $default  accept


State 4

   11 typedef_declaration: T_TYPEDEF . typename listspec T_ID $@1 dims T_SEMI

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 14

    typename       go to state 34
    standard_type  go to state 18


State 5

   14 standard_type: T_CHAR .

    $default  reduce using rule 14 (standard_type)


State 6

   15 standard_type: T_INT .

    $default  reduce using rule 15 (standard_type)


State 7

   16 standard_type: T_FLOAT .

    $default  reduce using rule 16 (standard_type)


State 8

   17 standard_type: T_STRING .

    $default  reduce using rule 17 (standard_type)


State 9

   74 class_declaration: T_CLASS . T_ID $@5 class_body T_SEMI

    T_ID  shift, and go to state 35


State 10

   18 standard_type: T_VOID .

    $default  reduce using rule 18 (standard_type)


State 11

  110 union_declaration: T_UNION . T_ID $@8 union_body T_SEMI

    T_ID  shift, and go to state 36


State 12

   27 enum_declaration: T_ENUM . T_ID $@2 enum_body $@3 T_SEMI

    T_ID  shift, and go to state 37


State 13

  194 main_header: T_INP . T_MAIN T_LPAREN T_RPAREN
  195            | T_INP . T_MAIN error T_RPAREN
  196            | T_INP . T_MAIN T_LPAREN error

    T_MAIN  shift, and go to state 38


State 14

   13 typename: T_ID .

    $default  reduce using rule 13 (typename)


State 15

    2 global_declarations: global_declarations global_declaration .

    $default  reduce using rule 2 (global_declarations)


State 16

    4 global_declaration: typedef_declaration .

    $default  reduce using rule 4 (global_declaration)


State 17

  103 func_header_start: typename . listspec T_ID
  111 global_var_declaration: typename . init_variabledefs T_SEMI
  122 class_func_header_start: typename . listspec func_class T_ID

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec           go to state 40
    variabledef        go to state 41
    init_variabledefs  go to state 42
    init_variabledef   go to state 43


State 18

   12 typename: standard_type .

    $default  reduce using rule 12 (typename)


State 19

    5 global_declaration: enum_declaration .

    $default  reduce using rule 5 (global_declaration)


State 20

    6 global_declaration: class_declaration .

    $default  reduce using rule 6 (global_declaration)


State 21

  115 func_declaration: short_func_declaration .

    $default  reduce using rule 115 (func_declaration)


State 22

  100 short_func_declaration: short_par_func_header . T_SEMI

    T_SEMI  shift, and go to state 44


State 23

  102 short_par_func_header: func_header_start . T_LPAREN parameter_types T_RPAREN
  108 nopar_func_header: func_header_start . T_LPAREN T_RPAREN
  121 full_par_func_header: func_header_start . T_LPAREN parameter_list T_RPAREN

    T_LPAREN  shift, and go to state 45


State 24

  101 short_func_declaration: nopar_func_header . T_SEMI
  119 full_func_declaration: nopar_func_header . T_LBRACE decl_statements T_RBRACE

    T_SEMI    shift, and go to state 46
    T_LBRACE  shift, and go to state 47


State 25

    7 global_declaration: union_declaration .

    $default  reduce using rule 7 (global_declaration)


State 26

    8 global_declaration: global_var_declaration .

    $default  reduce using rule 8 (global_declaration)


State 27

    9 global_declaration: func_declaration .

    $default  reduce using rule 9 (global_declaration)


State 28

  116 func_declaration: full_func_declaration .

    $default  reduce using rule 116 (func_declaration)


State 29

  117 full_func_declaration: full_par_func_header . T_LBRACE decl_statements T_RBRACE

    T_LBRACE  shift, and go to state 48


State 30

  120 full_par_func_header: class_func_header_start . T_LPAREN parameter_list T_RPAREN
  128 nopar_class_func_header: class_func_header_start . T_LPAREN T_RPAREN

    T_LPAREN  shift, and go to state 49


State 31

  118 full_func_declaration: nopar_class_func_header . T_LBRACE decl_statements T_RBRACE

    T_LBRACE  shift, and go to state 50


State 32

    1 program: global_declarations main_function .

    $default  reduce using rule 1 (program)


State 33

  193 main_function: main_header . T_LBRACE decl_statements T_RBRACE

    T_LBRACE  shift, and go to state 51


State 34

   11 typedef_declaration: T_TYPEDEF typename . listspec T_ID $@1 dims T_SEMI

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec  go to state 52


State 35

   74 class_declaration: T_CLASS T_ID . $@5 class_body T_SEMI

    $default  reduce using rule 73 ($@5)

    $@5  go to state 53


State 36

  110 union_declaration: T_UNION T_ID . $@8 union_body T_SEMI

    $default  reduce using rule 109 ($@8)

    $@8  go to state 54


State 37

   27 enum_declaration: T_ENUM T_ID . $@2 enum_body $@3 T_SEMI

    $default  reduce using rule 25 ($@2)

    $@2  go to state 55


State 38

  194 main_header: T_INP T_MAIN . T_LPAREN T_RPAREN
  195            | T_INP T_MAIN . error T_RPAREN
  196            | T_INP T_MAIN . T_LPAREN error

    error     shift, and go to state 56
    T_LPAREN  shift, and go to state 57


State 39

   19 listspec: T_LIST .

    $default  reduce using rule 19 (listspec)


State 40

   91 variabledef: listspec . T_ID dims
  103 func_header_start: typename listspec . T_ID
  122 class_func_header_start: typename listspec . func_class T_ID

    T_ID  shift, and go to state 58

    func_class  go to state 59


State 41

  114 init_variabledef: variabledef . initializer

    T_ASSIGN  shift, and go to state 60

    $default  reduce using rule 33 (initializer)

    initializer  go to state 61


State 42

  111 global_var_declaration: typename init_variabledefs . T_SEMI
  112 init_variabledefs: init_variabledefs . T_COMMA init_variabledef

    T_SEMI   shift, and go to state 62
    T_COMMA  shift, and go to state 63


State 43

  113 init_variabledefs: init_variabledef .

    $default  reduce using rule 113 (init_variabledefs)


State 44

  100 short_func_declaration: short_par_func_header T_SEMI .

    $default  reduce using rule 100 (short_func_declaration)


State 45

  102 short_par_func_header: func_header_start T_LPAREN . parameter_types T_RPAREN
  108 nopar_func_header: func_header_start T_LPAREN . T_RPAREN
  121 full_par_func_header: func_header_start T_LPAREN . parameter_list T_RPAREN

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_RPAREN  shift, and go to state 64
    T_ID      shift, and go to state 14

    typename         go to state 65
    standard_type    go to state 18
    parameter_types  go to state 66
    parameter_list   go to state 67


State 46

  101 short_func_declaration: nopar_func_header T_SEMI .

    $default  reduce using rule 101 (short_func_declaration)


State 47

  119 full_func_declaration: nopar_func_header T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_CONTINUE  shift, and go to state 73
    T_BREAK     shift, and go to state 74
    T_IF        shift, and go to state 75
    T_WHILE     shift, and go to state 76
    T_FOR       shift, and go to state 77
    T_SWITCH    shift, and go to state 78
    T_RETURN    shift, and go to state 79
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_CIN       shift, and go to state 82
    T_COUT      shift, and go to state 83
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_SEMI      shift, and go to state 90
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 92
    T_LISTFUNC  shift, and go to state 93

    T_RBRACE  reduce using rule 132 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 94
    variable              go to state 95
    general_expression    go to state 96
    assignment            go to state 97
    constant              go to state 98
    listexpression        go to state 99
    decl_statements       go to state 100
    declarations          go to state 101
    decltype              go to state 102
    statements            go to state 103
    statement             go to state 104
    expression_statement  go to state 105
    if_statement          go to state 106
    while_statement       go to state 107
    for_statement         go to state 108
    switch_statement      go to state 109
    return_statement      go to state 110
    io_statement          go to state 111
    comp_statement        go to state 112


State 48

  117 full_func_declaration: full_par_func_header T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_CONTINUE  shift, and go to state 73
    T_BREAK     shift, and go to state 74
    T_IF        shift, and go to state 75
    T_WHILE     shift, and go to state 76
    T_FOR       shift, and go to state 77
    T_SWITCH    shift, and go to state 78
    T_RETURN    shift, and go to state 79
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_CIN       shift, and go to state 82
    T_COUT      shift, and go to state 83
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_SEMI      shift, and go to state 90
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 92
    T_LISTFUNC  shift, and go to state 93

    T_RBRACE  reduce using rule 132 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 94
    variable              go to state 95
    general_expression    go to state 96
    assignment            go to state 97
    constant              go to state 98
    listexpression        go to state 99
    decl_statements       go to state 113
    declarations          go to state 101
    decltype              go to state 102
    statements            go to state 103
    statement             go to state 104
    expression_statement  go to state 105
    if_statement          go to state 106
    while_statement       go to state 107
    for_statement         go to state 108
    switch_statement      go to state 109
    return_statement      go to state 110
    io_statement          go to state 111
    comp_statement        go to state 112


State 49

  120 full_par_func_header: class_func_header_start T_LPAREN . parameter_list T_RPAREN
  128 nopar_class_func_header: class_func_header_start T_LPAREN . T_RPAREN

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_RPAREN  shift, and go to state 114
    T_ID      shift, and go to state 14

    typename        go to state 115
    standard_type   go to state 18
    parameter_list  go to state 116


State 50

  118 full_func_declaration: nopar_class_func_header T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_CONTINUE  shift, and go to state 73
    T_BREAK     shift, and go to state 74
    T_IF        shift, and go to state 75
    T_WHILE     shift, and go to state 76
    T_FOR       shift, and go to state 77
    T_SWITCH    shift, and go to state 78
    T_RETURN    shift, and go to state 79
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_CIN       shift, and go to state 82
    T_COUT      shift, and go to state 83
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_SEMI      shift, and go to state 90
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 92
    T_LISTFUNC  shift, and go to state 93

    T_RBRACE  reduce using rule 132 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 94
    variable              go to state 95
    general_expression    go to state 96
    assignment            go to state 97
    constant              go to state 98
    listexpression        go to state 99
    decl_statements       go to state 117
    declarations          go to state 101
    decltype              go to state 102
    statements            go to state 103
    statement             go to state 104
    expression_statement  go to state 105
    if_statement          go to state 106
    while_statement       go to state 107
    for_statement         go to state 108
    switch_statement      go to state 109
    return_statement      go to state 110
    io_statement          go to state 111
    comp_statement        go to state 112


State 51

  193 main_function: main_header T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_CONTINUE  shift, and go to state 73
    T_BREAK     shift, and go to state 74
    T_IF        shift, and go to state 75
    T_WHILE     shift, and go to state 76
    T_FOR       shift, and go to state 77
    T_SWITCH    shift, and go to state 78
    T_RETURN    shift, and go to state 79
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_CIN       shift, and go to state 82
    T_COUT      shift, and go to state 83
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_SEMI      shift, and go to state 90
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 92
    T_LISTFUNC  shift, and go to state 93

    T_RBRACE  reduce using rule 132 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 94
    variable              go to state 95
    general_expression    go to state 96
    assignment            go to state 97
    constant              go to state 98
    listexpression        go to state 99
    decl_statements       go to state 118
    declarations          go to state 101
    decltype              go to state 102
    statements            go to state 103
    statement             go to state 104
    expression_statement  go to state 105
    if_statement          go to state 106
    while_statement       go to state 107
    for_statement         go to state 108
    switch_statement      go to state 109
    return_statement      go to state 110
    io_statement          go to state 111
    comp_statement        go to state 112


State 52

   11 typedef_declaration: T_TYPEDEF typename listspec . T_ID $@1 dims T_SEMI

    T_ID  shift, and go to state 119


State 53

   74 class_declaration: T_CLASS T_ID $@5 . class_body T_SEMI

    T_COLON  shift, and go to state 120

    $default  reduce using rule 77 (parent)

    class_body  go to state 121
    parent      go to state 122


State 54

  110 union_declaration: T_UNION T_ID $@8 . union_body T_SEMI

    T_LBRACE  shift, and go to state 123

    union_body  go to state 124


State 55

   27 enum_declaration: T_ENUM T_ID $@2 . enum_body $@3 T_SEMI

    T_LBRACE  shift, and go to state 125

    enum_body  go to state 126


State 56

  195 main_header: T_INP T_MAIN error . T_RPAREN

    T_RPAREN  shift, and go to state 127


State 57

  194 main_header: T_INP T_MAIN T_LPAREN . T_RPAREN
  196            | T_INP T_MAIN T_LPAREN . error

    error     shift, and go to state 128
    T_RPAREN  shift, and go to state 129


State 58

   91 variabledef: listspec T_ID . dims
  103 func_header_start: typename listspec T_ID .
  123 func_class: T_ID . T_METH

    T_METH  shift, and go to state 130

    T_LPAREN  reduce using rule 103 (func_header_start)
    $default  reduce using rule 22 (dims)

    dims  go to state 131


State 59

  122 class_func_header_start: typename listspec func_class . T_ID

    T_ID  shift, and go to state 132


State 60

   32 initializer: T_ASSIGN . init_value

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 133
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    init_value      go to state 134
    expression      go to state 135
    variable        go to state 136
    constant        go to state 98
    listexpression  go to state 99
    decltype        go to state 137


State 61

  114 init_variabledef: variabledef initializer .

    $default  reduce using rule 114 (init_variabledef)


State 62

  111 global_var_declaration: typename init_variabledefs T_SEMI .

    $default  reduce using rule 111 (global_var_declaration)


State 63

  112 init_variabledefs: init_variabledefs T_COMMA . init_variabledef

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec          go to state 138
    variabledef       go to state 41
    init_variabledef  go to state 139


State 64

  108 nopar_func_header: func_header_start T_LPAREN T_RPAREN .

    $default  reduce using rule 108 (nopar_func_header)


State 65

  105 parameter_types: typename . pass_list_dims
  125 parameter_list: typename . pass_variabledef

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 140

    $default  reduce using rule 20 (listspec)

    listspec          go to state 141
    variabledef       go to state 142
    pass_list_dims    go to state 143
    pass_variabledef  go to state 144


State 66

  102 short_par_func_header: func_header_start T_LPAREN parameter_types . T_RPAREN
  104 parameter_types: parameter_types . T_COMMA typename pass_list_dims

    T_RPAREN  shift, and go to state 145
    T_COMMA   shift, and go to state 146


State 67

  121 full_par_func_header: func_header_start T_LPAREN parameter_list . T_RPAREN
  124 parameter_list: parameter_list . T_COMMA typename pass_variabledef

    T_RPAREN  shift, and go to state 147
    T_COMMA   shift, and go to state 148


State 68

   67 constant: T_ICONST .

    $default  reduce using rule 67 (constant)


State 69

   68 constant: T_FCONST .

    $default  reduce using rule 68 (constant)


State 70

   66 constant: T_CCONST .

    $default  reduce using rule 66 (constant)


State 71

   69 constant: T_SCONST .

    $default  reduce using rule 69 (constant)


State 72

  135 decltype: T_STATIC .

    $default  reduce using rule 135 (decltype)


State 73

  147 statement: T_CONTINUE . T_SEMI

    T_SEMI  shift, and go to state 149


State 74

  148 statement: T_BREAK . T_SEMI

    T_SEMI  shift, and go to state 150


State 75

  153 if_statement: T_IF . T_LPAREN $@9 general_expression T_RPAREN statement $@10 if_tail

    T_LPAREN  shift, and go to state 151


State 76

  158 while_statement: T_WHILE . T_LPAREN $@12 general_expression T_RPAREN statement

    T_LPAREN  shift, and go to state 152


State 77

  160 for_statement: T_FOR . T_LPAREN $@13 optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

    T_LPAREN  shift, and go to state 153


State 78

  164 switch_statement: T_SWITCH . T_LPAREN $@14 general_expression T_RPAREN switch_tail

    T_LPAREN  shift, and go to state 154


State 79

  181 return_statement: T_RETURN . optexpr T_SEMI

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    T_SEMI    reduce using rule 162 (optexpr)
    $default  reduce using rule 136 (decltype)

    expression          go to state 94
    variable            go to state 95
    general_expression  go to state 155
    assignment          go to state 97
    constant            go to state 98
    listexpression      go to state 99
    decltype            go to state 137
    optexpr             go to state 156


State 80

   49 expression: T_LENGTH . T_LPAREN general_expression T_RPAREN

    T_LPAREN  shift, and go to state 157


State 81

   50 expression: T_NEW . T_LPAREN general_expression T_RPAREN

    T_LPAREN  shift, and go to state 158


State 82

  182 io_statement: T_CIN . T_INP in_list T_SEMI
  183             | T_CIN . T_INP in_list error

    T_INP  shift, and go to state 159


State 83

  184 io_statement: T_COUT . T_OUT out_list T_SEMI
  185             | T_COUT . T_OUT out_list error

    T_OUT  shift, and go to state 160


State 84

   59 variable: T_THIS .

    $default  reduce using rule 59 (variable)


State 85

   43 expression: T_ADDOP . expression

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression      go to state 161
    variable        go to state 136
    constant        go to state 98
    listexpression  go to state 99
    decltype        go to state 137


State 86

   42 expression: T_NOTOP . expression

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression      go to state 162
    variable        go to state 136
    constant        go to state 98
    listexpression  go to state 99
    decltype        go to state 137


State 87

   45 expression: T_INCDEC . variable

    T_STATIC    shift, and go to state 72
    T_THIS      shift, and go to state 84
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    variable  go to state 163
    decltype  go to state 137


State 88

   44 expression: T_SIZEOP . expression

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression      go to state 164
    variable        go to state 136
    constant        go to state 98
    listexpression  go to state 99
    decltype        go to state 137


State 89

   52 expression: T_LPAREN . general_expression T_RPAREN
   53           | T_LPAREN . standard_type T_RPAREN

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_FLOAT     shift, and go to state 7
    T_STRING    shift, and go to state 8
    T_VOID      shift, and go to state 10
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    standard_type       go to state 165
    expression          go to state 94
    variable            go to state 95
    general_expression  go to state 166
    assignment          go to state 97
    constant            go to state 98
    listexpression      go to state 99
    decltype            go to state 137


State 90

  149 statement: T_SEMI .

    $default  reduce using rule 149 (statement)


State 91

   70 listexpression: T_LBRACK . expression_list T_RBRACK

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    T_ID      reduce using rule 136 (decltype)
    $default  reduce using rule 65 (expression_list)

    expression          go to state 94
    variable            go to state 95
    general_expression  go to state 167
    assignment          go to state 97
    expression_list     go to state 168
    constant            go to state 98
    listexpression      go to state 99
    decltype            go to state 137


State 92

  192 comp_statement: T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_CONTINUE  shift, and go to state 73
    T_BREAK     shift, and go to state 74
    T_IF        shift, and go to state 75
    T_WHILE     shift, and go to state 76
    T_FOR       shift, and go to state 77
    T_SWITCH    shift, and go to state 78
    T_RETURN    shift, and go to state 79
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_CIN       shift, and go to state 82
    T_COUT      shift, and go to state 83
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_SEMI      shift, and go to state 90
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 92
    T_LISTFUNC  shift, and go to state 93

    T_RBRACE  reduce using rule 132 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 94
    variable              go to state 95
    general_expression    go to state 96
    assignment            go to state 97
    constant              go to state 98
    listexpression        go to state 99
    decl_statements       go to state 169
    declarations          go to state 101
    decltype              go to state 102
    statements            go to state 103
    statement             go to state 104
    expression_statement  go to state 105
    if_statement          go to state 106
    while_statement       go to state 107
    for_statement         go to state 108
    switch_statement      go to state 109
    return_statement      go to state 110
    io_statement          go to state 111
    comp_statement        go to state 112


State 93

   57 variable: T_LISTFUNC . T_LPAREN general_expression T_RPAREN

    T_LPAREN  shift, and go to state 170


State 94

   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression
   63 assignment: expression .

    T_OROP   shift, and go to state 171
    T_ANDOP  shift, and go to state 172
    T_EQUOP  shift, and go to state 173
    T_RELOP  shift, and go to state 174
    T_ADDOP  shift, and go to state 175
    T_MULOP  shift, and go to state 176

    $default  reduce using rule 63 (assignment)


State 95

   46 expression: variable . T_INCDEC
   47           | variable .
   48           | variable . T_LPAREN expression_list T_RPAREN
   55 variable: variable . T_LBRACK general_expression T_RBRACK
   56         | variable . T_DOT T_ID
   62 assignment: variable . T_ASSIGN assignment

    T_INCDEC  shift, and go to state 177
    T_LPAREN  shift, and go to state 178
    T_DOT     shift, and go to state 179
    T_ASSIGN  shift, and go to state 180
    T_LBRACK  shift, and go to state 181

    $default  reduce using rule 47 (expression)


State 96

   60 general_expression: general_expression . T_COMMA general_expression
  150 expression_statement: general_expression . T_SEMI

    T_SEMI   shift, and go to state 182
    T_COMMA  shift, and go to state 183


State 97

   61 general_expression: assignment .

    $default  reduce using rule 61 (general_expression)


State 98

   51 expression: constant .

    $default  reduce using rule 51 (expression)


State 99

   54 expression: listexpression .

    $default  reduce using rule 54 (expression)


State 100

  119 full_func_declaration: nopar_func_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 184


State 101

  129 decl_statements: declarations . statements
  130                | declarations .
  133 declarations: declarations . decltype typename variabledefs T_SEMI

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_CONTINUE  shift, and go to state 73
    T_BREAK     shift, and go to state 74
    T_IF        shift, and go to state 75
    T_WHILE     shift, and go to state 76
    T_FOR       shift, and go to state 77
    T_SWITCH    shift, and go to state 78
    T_RETURN    shift, and go to state 79
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_CIN       shift, and go to state 82
    T_COUT      shift, and go to state 83
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_SEMI      shift, and go to state 90
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 92
    T_LISTFUNC  shift, and go to state 93

    T_RBRACE  reduce using rule 130 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 94
    variable              go to state 95
    general_expression    go to state 96
    assignment            go to state 97
    constant              go to state 98
    listexpression        go to state 99
    decltype              go to state 185
    statements            go to state 186
    statement             go to state 104
    expression_statement  go to state 105
    if_statement          go to state 106
    while_statement       go to state 107
    for_statement         go to state 108
    switch_statement      go to state 109
    return_statement      go to state 110
    io_statement          go to state 111
    comp_statement        go to state 112


State 102

   58 variable: decltype . T_ID
  134 declarations: decltype . typename variabledefs T_SEMI

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 187

    typename       go to state 188
    standard_type  go to state 18


State 103

  131 decl_statements: statements .
  137 statements: statements . statement

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_CONTINUE  shift, and go to state 73
    T_BREAK     shift, and go to state 74
    T_IF        shift, and go to state 75
    T_WHILE     shift, and go to state 76
    T_FOR       shift, and go to state 77
    T_SWITCH    shift, and go to state 78
    T_RETURN    shift, and go to state 79
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_CIN       shift, and go to state 82
    T_COUT      shift, and go to state 83
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_SEMI      shift, and go to state 90
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 92
    T_LISTFUNC  shift, and go to state 93

    T_ID      reduce using rule 136 (decltype)
    $default  reduce using rule 131 (decl_statements)

    expression            go to state 94
    variable              go to state 95
    general_expression    go to state 96
    assignment            go to state 97
    constant              go to state 98
    listexpression        go to state 99
    decltype              go to state 137
    statement             go to state 189
    expression_statement  go to state 105
    if_statement          go to state 106
    while_statement       go to state 107
    for_statement         go to state 108
    switch_statement      go to state 109
    return_statement      go to state 110
    io_statement          go to state 111
    comp_statement        go to state 112


State 104

  138 statements: statement .

    $default  reduce using rule 138 (statements)


State 105

  139 statement: expression_statement .

    $default  reduce using rule 139 (statement)


State 106

  140 statement: if_statement .

    $default  reduce using rule 140 (statement)


State 107

  141 statement: while_statement .

    $default  reduce using rule 141 (statement)


State 108

  142 statement: for_statement .

    $default  reduce using rule 142 (statement)


State 109

  143 statement: switch_statement .

    $default  reduce using rule 143 (statement)


State 110

  144 statement: return_statement .

    $default  reduce using rule 144 (statement)


State 111

  145 statement: io_statement .

    $default  reduce using rule 145 (statement)


State 112

  146 statement: comp_statement .

    $default  reduce using rule 146 (statement)


State 113

  117 full_func_declaration: full_par_func_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 190


State 114

  128 nopar_class_func_header: class_func_header_start T_LPAREN T_RPAREN .

    $default  reduce using rule 128 (nopar_class_func_header)


State 115

  125 parameter_list: typename . pass_variabledef

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 191

    $default  reduce using rule 20 (listspec)

    listspec          go to state 138
    variabledef       go to state 142
    pass_variabledef  go to state 144


State 116

  120 full_par_func_header: class_func_header_start T_LPAREN parameter_list . T_RPAREN
  124 parameter_list: parameter_list . T_COMMA typename pass_variabledef

    T_RPAREN  shift, and go to state 192
    T_COMMA   shift, and go to state 148


State 117

  118 full_func_declaration: nopar_class_func_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 193


State 118

  193 main_function: main_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 194


State 119

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID . $@1 dims T_SEMI

    $default  reduce using rule 10 ($@1)

    $@1  go to state 195


State 120

   76 parent: T_COLON . T_ID

    T_ID  shift, and go to state 196


State 121

   74 class_declaration: T_CLASS T_ID $@5 class_body . T_SEMI

    T_SEMI  shift, and go to state 197


State 122

   75 class_body: parent . T_LBRACE members_methods T_RBRACE

    T_LBRACE  shift, and go to state 198


State 123

   95 union_body: T_LBRACE . fields T_RBRACE

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 14

    typename         go to state 199
    standard_type    go to state 18
    var_declaration  go to state 200
    fields           go to state 201
    field            go to state 202


State 124

  110 union_declaration: T_UNION T_ID $@8 union_body . T_SEMI

    T_SEMI  shift, and go to state 203


State 125

   28 enum_body: T_LBRACE . id_list T_RBRACE

    T_ID  shift, and go to state 204

    id_list  go to state 205


State 126

   27 enum_declaration: T_ENUM T_ID $@2 enum_body . $@3 T_SEMI

    $default  reduce using rule 26 ($@3)

    $@3  go to state 206


State 127

  195 main_header: T_INP T_MAIN error T_RPAREN .

    $default  reduce using rule 195 (main_header)


State 128

  196 main_header: T_INP T_MAIN T_LPAREN error .

    $default  reduce using rule 196 (main_header)


State 129

  194 main_header: T_INP T_MAIN T_LPAREN T_RPAREN .

    $default  reduce using rule 194 (main_header)


State 130

  123 func_class: T_ID T_METH .

    $default  reduce using rule 123 (func_class)


State 131

   21 dims: dims . dim
   91 variabledef: listspec T_ID dims .

    T_LBRACK  shift, and go to state 207

    $default  reduce using rule 91 (variabledef)

    dim  go to state 208


State 132

  122 class_func_header_start: typename listspec func_class T_ID .

    $default  reduce using rule 122 (class_func_header_start)


State 133

   35 init_value: T_LBRACE . init_values T_RBRACE

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 133
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    init_value      go to state 209
    expression      go to state 135
    variable        go to state 136
    constant        go to state 98
    listexpression  go to state 99
    init_values     go to state 210
    decltype        go to state 137


State 134

   32 initializer: T_ASSIGN init_value .

    $default  reduce using rule 32 (initializer)


State 135

   34 init_value: expression .
   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression

    T_OROP   shift, and go to state 171
    T_ANDOP  shift, and go to state 172
    T_EQUOP  shift, and go to state 173
    T_RELOP  shift, and go to state 174
    T_ADDOP  shift, and go to state 175
    T_MULOP  shift, and go to state 176

    $default  reduce using rule 34 (init_value)


State 136

   46 expression: variable . T_INCDEC
   47           | variable .
   48           | variable . T_LPAREN expression_list T_RPAREN
   55 variable: variable . T_LBRACK general_expression T_RBRACK
   56         | variable . T_DOT T_ID

    T_INCDEC  shift, and go to state 177
    T_LPAREN  shift, and go to state 178
    T_DOT     shift, and go to state 179
    T_LBRACK  shift, and go to state 181

    $default  reduce using rule 47 (expression)


State 137

   58 variable: decltype . T_ID

    T_ID  shift, and go to state 211


State 138

   91 variabledef: listspec . T_ID dims

    T_ID  shift, and go to state 212


State 139

  112 init_variabledefs: init_variabledefs T_COMMA init_variabledef .

    $default  reduce using rule 112 (init_variabledefs)


State 140

  106 pass_list_dims: T_REFER .
  127 pass_variabledef: T_REFER . T_ID

    T_ID  shift, and go to state 213

    $default  reduce using rule 106 (pass_list_dims)


State 141

   91 variabledef: listspec . T_ID dims
  107 pass_list_dims: listspec . dims

    T_ID  shift, and go to state 212

    $default  reduce using rule 22 (dims)

    dims  go to state 214


State 142

  126 pass_variabledef: variabledef .

    $default  reduce using rule 126 (pass_variabledef)


State 143

  105 parameter_types: typename pass_list_dims .

    $default  reduce using rule 105 (parameter_types)


State 144

  125 parameter_list: typename pass_variabledef .

    $default  reduce using rule 125 (parameter_list)


State 145

  102 short_par_func_header: func_header_start T_LPAREN parameter_types T_RPAREN .

    $default  reduce using rule 102 (short_par_func_header)


State 146

  104 parameter_types: parameter_types T_COMMA . typename pass_list_dims

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 14

    typename       go to state 215
    standard_type  go to state 18


State 147

  121 full_par_func_header: func_header_start T_LPAREN parameter_list T_RPAREN .

    $default  reduce using rule 121 (full_par_func_header)


State 148

  124 parameter_list: parameter_list T_COMMA . typename pass_variabledef

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 14

    typename       go to state 216
    standard_type  go to state 18


State 149

  147 statement: T_CONTINUE T_SEMI .

    $default  reduce using rule 147 (statement)


State 150

  148 statement: T_BREAK T_SEMI .

    $default  reduce using rule 148 (statement)


State 151

  153 if_statement: T_IF T_LPAREN . $@9 general_expression T_RPAREN statement $@10 if_tail

    $default  reduce using rule 151 ($@9)

    $@9  go to state 217


State 152

  158 while_statement: T_WHILE T_LPAREN . $@12 general_expression T_RPAREN statement

    $default  reduce using rule 157 ($@12)

    $@12  go to state 218


State 153

  160 for_statement: T_FOR T_LPAREN . $@13 optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

    $default  reduce using rule 159 ($@13)

    $@13  go to state 219


State 154

  164 switch_statement: T_SWITCH T_LPAREN . $@14 general_expression T_RPAREN switch_tail

    $default  reduce using rule 163 ($@14)

    $@14  go to state 220


State 155

   60 general_expression: general_expression . T_COMMA general_expression
  161 optexpr: general_expression .

    T_COMMA  shift, and go to state 183

    $default  reduce using rule 161 (optexpr)


State 156

  181 return_statement: T_RETURN optexpr . T_SEMI

    T_SEMI  shift, and go to state 221


State 157

   49 expression: T_LENGTH T_LPAREN . general_expression T_RPAREN

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression          go to state 94
    variable            go to state 95
    general_expression  go to state 222
    assignment          go to state 97
    constant            go to state 98
    listexpression      go to state 99
    decltype            go to state 137


State 158

   50 expression: T_NEW T_LPAREN . general_expression T_RPAREN

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression          go to state 94
    variable            go to state 95
    general_expression  go to state 223
    assignment          go to state 97
    constant            go to state 98
    listexpression      go to state 99
    decltype            go to state 137


State 159

  182 io_statement: T_CIN T_INP . in_list T_SEMI
  183             | T_CIN T_INP . in_list error

    T_STATIC    shift, and go to state 72
    T_THIS      shift, and go to state 84
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    variable  go to state 224
    decltype  go to state 137
    in_list   go to state 225
    in_item   go to state 226


State 160

  184 io_statement: T_COUT T_OUT . out_list T_SEMI
  185             | T_COUT T_OUT . out_list error

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression          go to state 94
    variable            go to state 95
    general_expression  go to state 227
    assignment          go to state 97
    constant            go to state 98
    listexpression      go to state 99
    decltype            go to state 137
    out_list            go to state 228
    out_item            go to state 229


State 161

   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression
   43           | T_ADDOP expression .

    T_MULOP  shift, and go to state 176

    $default  reduce using rule 43 (expression)


State 162

   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression
   42           | T_NOTOP expression .

    $default  reduce using rule 42 (expression)


State 163

   45 expression: T_INCDEC variable .
   55 variable: variable . T_LBRACK general_expression T_RBRACK
   56         | variable . T_DOT T_ID

    T_DOT     shift, and go to state 179
    T_LBRACK  shift, and go to state 181

    $default  reduce using rule 45 (expression)


State 164

   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression
   44           | T_SIZEOP expression .

    $default  reduce using rule 44 (expression)


State 165

   53 expression: T_LPAREN standard_type . T_RPAREN

    T_RPAREN  shift, and go to state 230


State 166

   52 expression: T_LPAREN general_expression . T_RPAREN
   60 general_expression: general_expression . T_COMMA general_expression

    T_RPAREN  shift, and go to state 231
    T_COMMA   shift, and go to state 183


State 167

   60 general_expression: general_expression . T_COMMA general_expression
   64 expression_list: general_expression .

    T_COMMA  shift, and go to state 183

    $default  reduce using rule 64 (expression_list)


State 168

   70 listexpression: T_LBRACK expression_list . T_RBRACK

    T_RBRACK  shift, and go to state 232


State 169

  192 comp_statement: T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 233


State 170

   57 variable: T_LISTFUNC T_LPAREN . general_expression T_RPAREN

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression          go to state 94
    variable            go to state 95
    general_expression  go to state 234
    assignment          go to state 97
    constant            go to state 98
    listexpression      go to state 99
    decltype            go to state 137


State 171

   36 expression: expression T_OROP . expression

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression      go to state 235
    variable        go to state 136
    constant        go to state 98
    listexpression  go to state 99
    decltype        go to state 137


State 172

   37 expression: expression T_ANDOP . expression

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression      go to state 236
    variable        go to state 136
    constant        go to state 98
    listexpression  go to state 99
    decltype        go to state 137


State 173

   38 expression: expression T_EQUOP . expression

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression      go to state 237
    variable        go to state 136
    constant        go to state 98
    listexpression  go to state 99
    decltype        go to state 137


State 174

   39 expression: expression T_RELOP . expression

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression      go to state 238
    variable        go to state 136
    constant        go to state 98
    listexpression  go to state 99
    decltype        go to state 137


State 175

   40 expression: expression T_ADDOP . expression

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression      go to state 239
    variable        go to state 136
    constant        go to state 98
    listexpression  go to state 99
    decltype        go to state 137


State 176

   41 expression: expression T_MULOP . expression

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression      go to state 240
    variable        go to state 136
    constant        go to state 98
    listexpression  go to state 99
    decltype        go to state 137


State 177

   46 expression: variable T_INCDEC .

    $default  reduce using rule 46 (expression)


State 178

   48 expression: variable T_LPAREN . expression_list T_RPAREN

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    T_ID      reduce using rule 136 (decltype)
    $default  reduce using rule 65 (expression_list)

    expression          go to state 94
    variable            go to state 95
    general_expression  go to state 167
    assignment          go to state 97
    expression_list     go to state 241
    constant            go to state 98
    listexpression      go to state 99
    decltype            go to state 137


State 179

   56 variable: variable T_DOT . T_ID

    T_ID  shift, and go to state 242


State 180

   62 assignment: variable T_ASSIGN . assignment

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression      go to state 94
    variable        go to state 95
    assignment      go to state 243
    constant        go to state 98
    listexpression  go to state 99
    decltype        go to state 137


State 181

   55 variable: variable T_LBRACK . general_expression T_RBRACK

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression          go to state 94
    variable            go to state 95
    general_expression  go to state 244
    assignment          go to state 97
    constant            go to state 98
    listexpression      go to state 99
    decltype            go to state 137


State 182

  150 expression_statement: general_expression T_SEMI .

    $default  reduce using rule 150 (expression_statement)


State 183

   60 general_expression: general_expression T_COMMA . general_expression

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression          go to state 94
    variable            go to state 95
    general_expression  go to state 245
    assignment          go to state 97
    constant            go to state 98
    listexpression      go to state 99
    decltype            go to state 137


State 184

  119 full_func_declaration: nopar_func_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 119 (full_func_declaration)


State 185

   58 variable: decltype . T_ID
  133 declarations: declarations decltype . typename variabledefs T_SEMI

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 187

    typename       go to state 246
    standard_type  go to state 18


State 186

  129 decl_statements: declarations statements .
  137 statements: statements . statement

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_CONTINUE  shift, and go to state 73
    T_BREAK     shift, and go to state 74
    T_IF        shift, and go to state 75
    T_WHILE     shift, and go to state 76
    T_FOR       shift, and go to state 77
    T_SWITCH    shift, and go to state 78
    T_RETURN    shift, and go to state 79
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_CIN       shift, and go to state 82
    T_COUT      shift, and go to state 83
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_SEMI      shift, and go to state 90
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 92
    T_LISTFUNC  shift, and go to state 93

    T_ID      reduce using rule 136 (decltype)
    $default  reduce using rule 129 (decl_statements)

    expression            go to state 94
    variable              go to state 95
    general_expression    go to state 96
    assignment            go to state 97
    constant              go to state 98
    listexpression        go to state 99
    decltype              go to state 137
    statement             go to state 189
    expression_statement  go to state 105
    if_statement          go to state 106
    while_statement       go to state 107
    for_statement         go to state 108
    switch_statement      go to state 109
    return_statement      go to state 110
    io_statement          go to state 111
    comp_statement        go to state 112


State 187

   13 typename: T_ID .
   58 variable: decltype T_ID .

    T_LIST    reduce using rule 13 (typename)
    T_ID      reduce using rule 13 (typename)
    $default  reduce using rule 58 (variable)


State 188

  134 declarations: decltype typename . variabledefs T_SEMI

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec      go to state 138
    variabledefs  go to state 247
    variabledef   go to state 248


State 189

  137 statements: statements statement .

    $default  reduce using rule 137 (statements)


State 190

  117 full_func_declaration: full_par_func_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 117 (full_func_declaration)


State 191

  127 pass_variabledef: T_REFER . T_ID

    T_ID  shift, and go to state 213


State 192

  120 full_par_func_header: class_func_header_start T_LPAREN parameter_list T_RPAREN .

    $default  reduce using rule 120 (full_par_func_header)


State 193

  118 full_func_declaration: nopar_class_func_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 118 (full_func_declaration)


State 194

  193 main_function: main_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 193 (main_function)


State 195

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID $@1 . dims T_SEMI

    $default  reduce using rule 22 (dims)

    dims  go to state 249


State 196

   76 parent: T_COLON T_ID .

    $default  reduce using rule 76 (parent)


State 197

   74 class_declaration: T_CLASS T_ID $@5 class_body T_SEMI .

    $default  reduce using rule 74 (class_declaration)


State 198

   75 class_body: parent T_LBRACE . members_methods T_RBRACE

    T_PRIVATE    shift, and go to state 250
    T_PROTECTED  shift, and go to state 251
    T_PUBLIC     shift, and go to state 252

    $default  reduce using rule 83 (access)

    members_methods  go to state 253
    access           go to state 254


State 199

   88 var_declaration: typename . variabledefs T_SEMI

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec      go to state 138
    variabledefs  go to state 255
    variabledef   go to state 248


State 200

   98 field: var_declaration .

    $default  reduce using rule 98 (field)


State 201

   95 union_body: T_LBRACE fields . T_RBRACE
   96 fields: fields . field

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_RBRACE  shift, and go to state 256
    T_ID      shift, and go to state 14

    typename         go to state 199
    standard_type    go to state 18
    var_declaration  go to state 200
    field            go to state 257


State 202

   97 fields: field .

    $default  reduce using rule 97 (fields)


State 203

  110 union_declaration: T_UNION T_ID $@8 union_body T_SEMI .

    $default  reduce using rule 110 (union_declaration)


State 204

   31 id_list: T_ID . $@4 initializer

    $default  reduce using rule 30 ($@4)

    $@4  go to state 258


State 205

   28 enum_body: T_LBRACE id_list . T_RBRACE
   29 id_list: id_list . T_COMMA T_ID initializer

    T_COMMA   shift, and go to state 259
    T_RBRACE  shift, and go to state 260


State 206

   27 enum_declaration: T_ENUM T_ID $@2 enum_body $@3 . T_SEMI

    T_SEMI  shift, and go to state 261


State 207

   23 dim: T_LBRACK . T_ICONST T_RBRACK
   24    | T_LBRACK . T_RBRACK

    T_ICONST  shift, and go to state 262
    T_RBRACK  shift, and go to state 263


State 208

   21 dims: dims dim .

    $default  reduce using rule 21 (dims)


State 209

   72 init_values: init_value .

    $default  reduce using rule 72 (init_values)


State 210

   35 init_value: T_LBRACE init_values . T_RBRACE
   71 init_values: init_values . T_COMMA init_value

    T_COMMA   shift, and go to state 264
    T_RBRACE  shift, and go to state 265


State 211

   58 variable: decltype T_ID .

    $default  reduce using rule 58 (variable)


State 212

   91 variabledef: listspec T_ID . dims

    $default  reduce using rule 22 (dims)

    dims  go to state 131


State 213

  127 pass_variabledef: T_REFER T_ID .

    $default  reduce using rule 127 (pass_variabledef)


State 214

   21 dims: dims . dim
  107 pass_list_dims: listspec dims .

    T_LBRACK  shift, and go to state 207

    $default  reduce using rule 107 (pass_list_dims)

    dim  go to state 208


State 215

  104 parameter_types: parameter_types T_COMMA typename . pass_list_dims

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 266

    $default  reduce using rule 20 (listspec)

    listspec        go to state 267
    pass_list_dims  go to state 268


State 216

  124 parameter_list: parameter_list T_COMMA typename . pass_variabledef

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 191

    $default  reduce using rule 20 (listspec)

    listspec          go to state 138
    variabledef       go to state 142
    pass_variabledef  go to state 269


State 217

  153 if_statement: T_IF T_LPAREN $@9 . general_expression T_RPAREN statement $@10 if_tail

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression          go to state 94
    variable            go to state 95
    general_expression  go to state 270
    assignment          go to state 97
    constant            go to state 98
    listexpression      go to state 99
    decltype            go to state 137


State 218

  158 while_statement: T_WHILE T_LPAREN $@12 . general_expression T_RPAREN statement

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression          go to state 94
    variable            go to state 95
    general_expression  go to state 271
    assignment          go to state 97
    constant            go to state 98
    listexpression      go to state 99
    decltype            go to state 137


State 219

  160 for_statement: T_FOR T_LPAREN $@13 . optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    T_SEMI    reduce using rule 162 (optexpr)
    $default  reduce using rule 136 (decltype)

    expression          go to state 94
    variable            go to state 95
    general_expression  go to state 155
    assignment          go to state 97
    constant            go to state 98
    listexpression      go to state 99
    decltype            go to state 137
    optexpr             go to state 272


State 220

  164 switch_statement: T_SWITCH T_LPAREN $@14 . general_expression T_RPAREN switch_tail

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression          go to state 94
    variable            go to state 95
    general_expression  go to state 273
    assignment          go to state 97
    constant            go to state 98
    listexpression      go to state 99
    decltype            go to state 137


State 221

  181 return_statement: T_RETURN optexpr T_SEMI .

    $default  reduce using rule 181 (return_statement)


State 222

   49 expression: T_LENGTH T_LPAREN general_expression . T_RPAREN
   60 general_expression: general_expression . T_COMMA general_expression

    T_RPAREN  shift, and go to state 274
    T_COMMA   shift, and go to state 183


State 223

   50 expression: T_NEW T_LPAREN general_expression . T_RPAREN
   60 general_expression: general_expression . T_COMMA general_expression

    T_RPAREN  shift, and go to state 275
    T_COMMA   shift, and go to state 183


State 224

   55 variable: variable . T_LBRACK general_expression T_RBRACK
   56         | variable . T_DOT T_ID
  188 in_item: variable .

    T_DOT     shift, and go to state 179
    T_LBRACK  shift, and go to state 181

    $default  reduce using rule 188 (in_item)


State 225

  182 io_statement: T_CIN T_INP in_list . T_SEMI
  183             | T_CIN T_INP in_list . error
  186 in_list: in_list . T_INP in_item

    error   shift, and go to state 276
    T_SEMI  shift, and go to state 277
    T_INP   shift, and go to state 278


State 226

  187 in_list: in_item .

    $default  reduce using rule 187 (in_list)


State 227

   60 general_expression: general_expression . T_COMMA general_expression
  191 out_item: general_expression .

    T_COMMA  shift, and go to state 183

    $default  reduce using rule 191 (out_item)


State 228

  184 io_statement: T_COUT T_OUT out_list . T_SEMI
  185             | T_COUT T_OUT out_list . error
  189 out_list: out_list . T_OUT out_item

    error   shift, and go to state 279
    T_SEMI  shift, and go to state 280
    T_OUT   shift, and go to state 281


State 229

  190 out_list: out_item .

    $default  reduce using rule 190 (out_list)


State 230

   53 expression: T_LPAREN standard_type T_RPAREN .

    $default  reduce using rule 53 (expression)


State 231

   52 expression: T_LPAREN general_expression T_RPAREN .

    $default  reduce using rule 52 (expression)


State 232

   70 listexpression: T_LBRACK expression_list T_RBRACK .

    $default  reduce using rule 70 (listexpression)


State 233

  192 comp_statement: T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 192 (comp_statement)


State 234

   57 variable: T_LISTFUNC T_LPAREN general_expression . T_RPAREN
   60 general_expression: general_expression . T_COMMA general_expression

    T_RPAREN  shift, and go to state 282
    T_COMMA   shift, and go to state 183


State 235

   36 expression: expression . T_OROP expression
   36           | expression T_OROP expression .
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression

    T_ANDOP  shift, and go to state 172
    T_EQUOP  shift, and go to state 173
    T_RELOP  shift, and go to state 174
    T_ADDOP  shift, and go to state 175
    T_MULOP  shift, and go to state 176

    $default  reduce using rule 36 (expression)


State 236

   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   37           | expression T_ANDOP expression .
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression

    T_EQUOP  shift, and go to state 173
    T_RELOP  shift, and go to state 174
    T_ADDOP  shift, and go to state 175
    T_MULOP  shift, and go to state 176

    $default  reduce using rule 37 (expression)


State 237

   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   38           | expression T_EQUOP expression .
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression

    T_RELOP  shift, and go to state 174
    T_ADDOP  shift, and go to state 175
    T_MULOP  shift, and go to state 176

    $default  reduce using rule 38 (expression)


State 238

   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   39           | expression T_RELOP expression .
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression

    T_ADDOP  shift, and go to state 175
    T_MULOP  shift, and go to state 176

    $default  reduce using rule 39 (expression)


State 239

   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   40           | expression T_ADDOP expression .
   41           | expression . T_MULOP expression

    T_MULOP  shift, and go to state 176

    $default  reduce using rule 40 (expression)


State 240

   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression
   41           | expression T_MULOP expression .

    $default  reduce using rule 41 (expression)


State 241

   48 expression: variable T_LPAREN expression_list . T_RPAREN

    T_RPAREN  shift, and go to state 283


State 242

   56 variable: variable T_DOT T_ID .

    $default  reduce using rule 56 (variable)


State 243

   62 assignment: variable T_ASSIGN assignment .

    $default  reduce using rule 62 (assignment)


State 244

   55 variable: variable T_LBRACK general_expression . T_RBRACK
   60 general_expression: general_expression . T_COMMA general_expression

    T_COMMA   shift, and go to state 183
    T_RBRACK  shift, and go to state 284


State 245

   60 general_expression: general_expression . T_COMMA general_expression
   60                   | general_expression T_COMMA general_expression .

    $default  reduce using rule 60 (general_expression)


State 246

  133 declarations: declarations decltype typename . variabledefs T_SEMI

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec      go to state 138
    variabledefs  go to state 285
    variabledef   go to state 248


State 247

   89 variabledefs: variabledefs . T_COMMA variabledef
  134 declarations: decltype typename variabledefs . T_SEMI

    T_SEMI   shift, and go to state 286
    T_COMMA  shift, and go to state 287


State 248

   90 variabledefs: variabledef .

    $default  reduce using rule 90 (variabledefs)


State 249

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID $@1 dims . T_SEMI
   21 dims: dims . dim

    T_SEMI    shift, and go to state 288
    T_LBRACK  shift, and go to state 207

    dim  go to state 208


State 250

   80 access: T_PRIVATE . T_COLON

    T_COLON  shift, and go to state 289


State 251

   81 access: T_PROTECTED . T_COLON

    T_COLON  shift, and go to state 290


State 252

   82 access: T_PUBLIC . T_COLON

    T_COLON  shift, and go to state 291


State 253

   75 class_body: parent T_LBRACE members_methods . T_RBRACE
   78 members_methods: members_methods . access member_or_method

    T_PRIVATE    shift, and go to state 250
    T_PROTECTED  shift, and go to state 251
    T_PUBLIC     shift, and go to state 252
    T_RBRACE     shift, and go to state 292

    $default  reduce using rule 83 (access)

    access  go to state 293


State 254

   79 members_methods: access . member_or_method

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_UNION   shift, and go to state 294
    T_ID      shift, and go to state 14

    typename                go to state 295
    standard_type           go to state 18
    member_or_method        go to state 296
    member                  go to state 297
    var_declaration         go to state 298
    anonymous_union         go to state 299
    method                  go to state 300
    short_func_declaration  go to state 301
    short_par_func_header   go to state 22
    func_header_start       go to state 302
    nopar_func_header       go to state 303


State 255

   88 var_declaration: typename variabledefs . T_SEMI
   89 variabledefs: variabledefs . T_COMMA variabledef

    T_SEMI   shift, and go to state 304
    T_COMMA  shift, and go to state 287


State 256

   95 union_body: T_LBRACE fields T_RBRACE .

    $default  reduce using rule 95 (union_body)


State 257

   96 fields: fields field .

    $default  reduce using rule 96 (fields)


State 258

   31 id_list: T_ID $@4 . initializer

    T_ASSIGN  shift, and go to state 60

    $default  reduce using rule 33 (initializer)

    initializer  go to state 305


State 259

   29 id_list: id_list T_COMMA . T_ID initializer

    T_ID  shift, and go to state 306


State 260

   28 enum_body: T_LBRACE id_list T_RBRACE .

    $default  reduce using rule 28 (enum_body)


State 261

   27 enum_declaration: T_ENUM T_ID $@2 enum_body $@3 T_SEMI .

    $default  reduce using rule 27 (enum_declaration)


State 262

   23 dim: T_LBRACK T_ICONST . T_RBRACK

    T_RBRACK  shift, and go to state 307


State 263

   24 dim: T_LBRACK T_RBRACK .

    $default  reduce using rule 24 (dim)


State 264

   71 init_values: init_values T_COMMA . init_value

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 133
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    init_value      go to state 308
    expression      go to state 135
    variable        go to state 136
    constant        go to state 98
    listexpression  go to state 99
    decltype        go to state 137


State 265

   35 init_value: T_LBRACE init_values T_RBRACE .

    $default  reduce using rule 35 (init_value)


State 266

  106 pass_list_dims: T_REFER .

    $default  reduce using rule 106 (pass_list_dims)


State 267

  107 pass_list_dims: listspec . dims

    $default  reduce using rule 22 (dims)

    dims  go to state 214


State 268

  104 parameter_types: parameter_types T_COMMA typename pass_list_dims .

    $default  reduce using rule 104 (parameter_types)


State 269

  124 parameter_list: parameter_list T_COMMA typename pass_variabledef .

    $default  reduce using rule 124 (parameter_list)


State 270

   60 general_expression: general_expression . T_COMMA general_expression
  153 if_statement: T_IF T_LPAREN $@9 general_expression . T_RPAREN statement $@10 if_tail

    T_RPAREN  shift, and go to state 309
    T_COMMA   shift, and go to state 183


State 271

   60 general_expression: general_expression . T_COMMA general_expression
  158 while_statement: T_WHILE T_LPAREN $@12 general_expression . T_RPAREN statement

    T_RPAREN  shift, and go to state 310
    T_COMMA   shift, and go to state 183


State 272

  160 for_statement: T_FOR T_LPAREN $@13 optexpr . T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

    T_SEMI  shift, and go to state 311


State 273

   60 general_expression: general_expression . T_COMMA general_expression
  164 switch_statement: T_SWITCH T_LPAREN $@14 general_expression . T_RPAREN switch_tail

    T_RPAREN  shift, and go to state 312
    T_COMMA   shift, and go to state 183


State 274

   49 expression: T_LENGTH T_LPAREN general_expression T_RPAREN .

    $default  reduce using rule 49 (expression)


State 275

   50 expression: T_NEW T_LPAREN general_expression T_RPAREN .

    $default  reduce using rule 50 (expression)


State 276

  183 io_statement: T_CIN T_INP in_list error .

    $default  reduce using rule 183 (io_statement)


State 277

  182 io_statement: T_CIN T_INP in_list T_SEMI .

    $default  reduce using rule 182 (io_statement)


State 278

  186 in_list: in_list T_INP . in_item

    T_STATIC    shift, and go to state 72
    T_THIS      shift, and go to state 84
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    variable  go to state 224
    decltype  go to state 137
    in_item   go to state 313


State 279

  185 io_statement: T_COUT T_OUT out_list error .

    $default  reduce using rule 185 (io_statement)


State 280

  184 io_statement: T_COUT T_OUT out_list T_SEMI .

    $default  reduce using rule 184 (io_statement)


State 281

  189 out_list: out_list T_OUT . out_item

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression          go to state 94
    variable            go to state 95
    general_expression  go to state 227
    assignment          go to state 97
    constant            go to state 98
    listexpression      go to state 99
    decltype            go to state 137
    out_item            go to state 314


State 282

   57 variable: T_LISTFUNC T_LPAREN general_expression T_RPAREN .

    $default  reduce using rule 57 (variable)


State 283

   48 expression: variable T_LPAREN expression_list T_RPAREN .

    $default  reduce using rule 48 (expression)


State 284

   55 variable: variable T_LBRACK general_expression T_RBRACK .

    $default  reduce using rule 55 (variable)


State 285

   89 variabledefs: variabledefs . T_COMMA variabledef
  133 declarations: declarations decltype typename variabledefs . T_SEMI

    T_SEMI   shift, and go to state 315
    T_COMMA  shift, and go to state 287


State 286

  134 declarations: decltype typename variabledefs T_SEMI .

    $default  reduce using rule 134 (declarations)


State 287

   89 variabledefs: variabledefs T_COMMA . variabledef

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec     go to state 138
    variabledef  go to state 316


State 288

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID $@1 dims T_SEMI .

    $default  reduce using rule 11 (typedef_declaration)


State 289

   80 access: T_PRIVATE T_COLON .

    $default  reduce using rule 80 (access)


State 290

   81 access: T_PROTECTED T_COLON .

    $default  reduce using rule 81 (access)


State 291

   82 access: T_PUBLIC T_COLON .

    $default  reduce using rule 82 (access)


State 292

   75 class_body: parent T_LBRACE members_methods T_RBRACE .

    $default  reduce using rule 75 (class_body)


State 293

   78 members_methods: members_methods access . member_or_method

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_UNION   shift, and go to state 294
    T_ID      shift, and go to state 14

    typename                go to state 295
    standard_type           go to state 18
    member_or_method        go to state 317
    member                  go to state 297
    var_declaration         go to state 298
    anonymous_union         go to state 299
    method                  go to state 300
    short_func_declaration  go to state 301
    short_par_func_header   go to state 22
    func_header_start       go to state 302
    nopar_func_header       go to state 303


State 294

   94 anonymous_union: T_UNION . $@6 union_body $@7 T_SEMI

    $default  reduce using rule 92 ($@6)

    $@6  go to state 318


State 295

   88 var_declaration: typename . variabledefs T_SEMI
  103 func_header_start: typename . listspec T_ID

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec      go to state 319
    variabledefs  go to state 255
    variabledef   go to state 248


State 296

   79 members_methods: access member_or_method .

    $default  reduce using rule 79 (members_methods)


State 297

   84 member_or_method: member .

    $default  reduce using rule 84 (member_or_method)


State 298

   86 member: var_declaration .

    $default  reduce using rule 86 (member)


State 299

   87 member: anonymous_union .

    $default  reduce using rule 87 (member)


State 300

   85 member_or_method: method .

    $default  reduce using rule 85 (member_or_method)


State 301

   99 method: short_func_declaration .

    $default  reduce using rule 99 (method)


State 302

  102 short_par_func_header: func_header_start . T_LPAREN parameter_types T_RPAREN
  108 nopar_func_header: func_header_start . T_LPAREN T_RPAREN

    T_LPAREN  shift, and go to state 320


State 303

  101 short_func_declaration: nopar_func_header . T_SEMI

    T_SEMI  shift, and go to state 46


State 304

   88 var_declaration: typename variabledefs T_SEMI .

    $default  reduce using rule 88 (var_declaration)


State 305

   31 id_list: T_ID $@4 initializer .

    $default  reduce using rule 31 (id_list)


State 306

   29 id_list: id_list T_COMMA T_ID . initializer

    T_ASSIGN  shift, and go to state 60

    $default  reduce using rule 33 (initializer)

    initializer  go to state 321


State 307

   23 dim: T_LBRACK T_ICONST T_RBRACK .

    $default  reduce using rule 23 (dim)


State 308

   71 init_values: init_values T_COMMA init_value .

    $default  reduce using rule 71 (init_values)


State 309

  153 if_statement: T_IF T_LPAREN $@9 general_expression T_RPAREN . statement $@10 if_tail

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_CONTINUE  shift, and go to state 73
    T_BREAK     shift, and go to state 74
    T_IF        shift, and go to state 75
    T_WHILE     shift, and go to state 76
    T_FOR       shift, and go to state 77
    T_SWITCH    shift, and go to state 78
    T_RETURN    shift, and go to state 79
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_CIN       shift, and go to state 82
    T_COUT      shift, and go to state 83
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_SEMI      shift, and go to state 90
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 92
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression            go to state 94
    variable              go to state 95
    general_expression    go to state 96
    assignment            go to state 97
    constant              go to state 98
    listexpression        go to state 99
    decltype              go to state 137
    statement             go to state 322
    expression_statement  go to state 105
    if_statement          go to state 106
    while_statement       go to state 107
    for_statement         go to state 108
    switch_statement      go to state 109
    return_statement      go to state 110
    io_statement          go to state 111
    comp_statement        go to state 112


State 310

  158 while_statement: T_WHILE T_LPAREN $@12 general_expression T_RPAREN . statement

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_CONTINUE  shift, and go to state 73
    T_BREAK     shift, and go to state 74
    T_IF        shift, and go to state 75
    T_WHILE     shift, and go to state 76
    T_FOR       shift, and go to state 77
    T_SWITCH    shift, and go to state 78
    T_RETURN    shift, and go to state 79
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_CIN       shift, and go to state 82
    T_COUT      shift, and go to state 83
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_SEMI      shift, and go to state 90
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 92
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression            go to state 94
    variable              go to state 95
    general_expression    go to state 96
    assignment            go to state 97
    constant              go to state 98
    listexpression        go to state 99
    decltype              go to state 137
    statement             go to state 323
    expression_statement  go to state 105
    if_statement          go to state 106
    while_statement       go to state 107
    for_statement         go to state 108
    switch_statement      go to state 109
    return_statement      go to state 110
    io_statement          go to state 111
    comp_statement        go to state 112


State 311

  160 for_statement: T_FOR T_LPAREN $@13 optexpr T_SEMI . optexpr T_SEMI optexpr T_RPAREN statement

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    T_SEMI    reduce using rule 162 (optexpr)
    $default  reduce using rule 136 (decltype)

    expression          go to state 94
    variable            go to state 95
    general_expression  go to state 155
    assignment          go to state 97
    constant            go to state 98
    listexpression      go to state 99
    decltype            go to state 137
    optexpr             go to state 324


State 312

  164 switch_statement: T_SWITCH T_LPAREN $@14 general_expression T_RPAREN . switch_tail

    T_CASE    shift, and go to state 325
    T_LBRACE  shift, and go to state 326

    switch_tail           go to state 327
    single_casestatement  go to state 328


State 313

  186 in_list: in_list T_INP in_item .

    $default  reduce using rule 186 (in_list)


State 314

  189 out_list: out_list T_OUT out_item .

    $default  reduce using rule 189 (out_list)


State 315

  133 declarations: declarations decltype typename variabledefs T_SEMI .

    $default  reduce using rule 133 (declarations)


State 316

   89 variabledefs: variabledefs T_COMMA variabledef .

    $default  reduce using rule 89 (variabledefs)


State 317

   78 members_methods: members_methods access member_or_method .

    $default  reduce using rule 78 (members_methods)


State 318

   94 anonymous_union: T_UNION $@6 . union_body $@7 T_SEMI

    T_LBRACE  shift, and go to state 123

    union_body  go to state 329


State 319

   91 variabledef: listspec . T_ID dims
  103 func_header_start: typename listspec . T_ID

    T_ID  shift, and go to state 330


State 320

  102 short_par_func_header: func_header_start T_LPAREN . parameter_types T_RPAREN
  108 nopar_func_header: func_header_start T_LPAREN . T_RPAREN

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_RPAREN  shift, and go to state 64
    T_ID      shift, and go to state 14

    typename         go to state 331
    standard_type    go to state 18
    parameter_types  go to state 66


State 321

   29 id_list: id_list T_COMMA T_ID initializer .

    $default  reduce using rule 29 (id_list)


State 322

  153 if_statement: T_IF T_LPAREN $@9 general_expression T_RPAREN statement . $@10 if_tail

    $default  reduce using rule 152 ($@10)

    $@10  go to state 332


State 323

  158 while_statement: T_WHILE T_LPAREN $@12 general_expression T_RPAREN statement .

    $default  reduce using rule 158 (while_statement)


State 324

  160 for_statement: T_FOR T_LPAREN $@13 optexpr T_SEMI optexpr . T_SEMI optexpr T_RPAREN statement

    T_SEMI  shift, and go to state 333


State 325

  178 single_casestatement: T_CASE . constant T_COLON single_casestatement
  180                     | T_CASE . constant T_COLON $@17 statement

    T_ICONST  shift, and go to state 68
    T_FCONST  shift, and go to state 69
    T_CCONST  shift, and go to state 70
    T_SCONST  shift, and go to state 71

    constant  go to state 334


State 326

  165 switch_tail: T_LBRACE . decl_cases T_RBRACE

    T_STATIC   shift, and go to state 72
    T_CASE     shift, and go to state 335
    T_DEFAULT  shift, and go to state 336

    T_RBRACE  reduce using rule 170 (decl_cases)
    $default  reduce using rule 136 (decltype)

    declarations    go to state 337
    decltype        go to state 338
    decl_cases      go to state 339
    casestatements  go to state 340
    casestatement   go to state 341


State 327

  164 switch_statement: T_SWITCH T_LPAREN $@14 general_expression T_RPAREN switch_tail .

    $default  reduce using rule 164 (switch_statement)


State 328

  166 switch_tail: single_casestatement .

    $default  reduce using rule 166 (switch_tail)


State 329

   94 anonymous_union: T_UNION $@6 union_body . $@7 T_SEMI

    $default  reduce using rule 93 ($@7)

    $@7  go to state 342


State 330

   91 variabledef: listspec T_ID . dims
  103 func_header_start: typename listspec T_ID .

    T_LPAREN  reduce using rule 103 (func_header_start)
    $default  reduce using rule 22 (dims)

    dims  go to state 131


State 331

  105 parameter_types: typename . pass_list_dims

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 266

    $default  reduce using rule 20 (listspec)

    listspec        go to state 267
    pass_list_dims  go to state 143


State 332

  153 if_statement: T_IF T_LPAREN $@9 general_expression T_RPAREN statement $@10 . if_tail

    T_ELSE  shift, and go to state 343

    $default  reduce using rule 156 (if_tail)

    if_tail  go to state 344


State 333

  160 for_statement: T_FOR T_LPAREN $@13 optexpr T_SEMI optexpr T_SEMI . optexpr T_RPAREN statement

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_LBRACK    shift, and go to state 91
    T_LISTFUNC  shift, and go to state 93

    T_RPAREN  reduce using rule 162 (optexpr)
    $default  reduce using rule 136 (decltype)

    expression          go to state 94
    variable            go to state 95
    general_expression  go to state 155
    assignment          go to state 97
    constant            go to state 98
    listexpression      go to state 99
    decltype            go to state 137
    optexpr             go to state 345


State 334

  178 single_casestatement: T_CASE constant . T_COLON single_casestatement
  180                     | T_CASE constant . T_COLON $@17 statement

    T_COLON  shift, and go to state 346


State 335

  173 casestatement: T_CASE . constant T_COLON casestatement
  175              | T_CASE . constant T_COLON $@15 statements

    T_ICONST  shift, and go to state 68
    T_FCONST  shift, and go to state 69
    T_CCONST  shift, and go to state 70
    T_SCONST  shift, and go to state 71

    constant  go to state 347


State 336

  177 casestatement: T_DEFAULT . T_COLON $@16 statements

    T_COLON  shift, and go to state 348


State 337

  133 declarations: declarations . decltype typename variabledefs T_SEMI
  167 decl_cases: declarations . casestatements
  168           | declarations .

    T_STATIC   shift, and go to state 72
    T_CASE     shift, and go to state 335
    T_DEFAULT  shift, and go to state 336

    T_RBRACE  reduce using rule 168 (decl_cases)
    $default  reduce using rule 136 (decltype)

    decltype        go to state 349
    casestatements  go to state 350
    casestatement   go to state 341


State 338

  134 declarations: decltype . typename variabledefs T_SEMI

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 14

    typename       go to state 188
    standard_type  go to state 18


State 339

  165 switch_tail: T_LBRACE decl_cases . T_RBRACE

    T_RBRACE  shift, and go to state 351


State 340

  169 decl_cases: casestatements .
  171 casestatements: casestatements . casestatement

    T_CASE     shift, and go to state 335
    T_DEFAULT  shift, and go to state 336

    $default  reduce using rule 169 (decl_cases)

    casestatement  go to state 352


State 341

  172 casestatements: casestatement .

    $default  reduce using rule 172 (casestatements)


State 342

   94 anonymous_union: T_UNION $@6 union_body $@7 . T_SEMI

    T_SEMI  shift, and go to state 353


State 343

  155 if_tail: T_ELSE . $@11 statement

    $default  reduce using rule 154 ($@11)

    $@11  go to state 354


State 344

  153 if_statement: T_IF T_LPAREN $@9 general_expression T_RPAREN statement $@10 if_tail .

    $default  reduce using rule 153 (if_statement)


State 345

  160 for_statement: T_FOR T_LPAREN $@13 optexpr T_SEMI optexpr T_SEMI optexpr . T_RPAREN statement

    T_RPAREN  shift, and go to state 355


State 346

  178 single_casestatement: T_CASE constant T_COLON . single_casestatement
  180                     | T_CASE constant T_COLON . $@17 statement

    T_CASE  shift, and go to state 325

    $default  reduce using rule 179 ($@17)

    single_casestatement  go to state 356
    $@17                  go to state 357


State 347

  173 casestatement: T_CASE constant . T_COLON casestatement
  175              | T_CASE constant . T_COLON $@15 statements

    T_COLON  shift, and go to state 358


State 348

  177 casestatement: T_DEFAULT T_COLON . $@16 statements

    $default  reduce using rule 176 ($@16)

    $@16  go to state 359


State 349

  133 declarations: declarations decltype . typename variabledefs T_SEMI

    T_CHAR    shift, and go to state 5
    T_INT     shift, and go to state 6
    T_FLOAT   shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_VOID    shift, and go to state 10
    T_ID      shift, and go to state 14

    typename       go to state 246
    standard_type  go to state 18


State 350

  167 decl_cases: declarations casestatements .
  171 casestatements: casestatements . casestatement

    T_CASE     shift, and go to state 335
    T_DEFAULT  shift, and go to state 336

    $default  reduce using rule 167 (decl_cases)

    casestatement  go to state 352


State 351

  165 switch_tail: T_LBRACE decl_cases T_RBRACE .

    $default  reduce using rule 165 (switch_tail)


State 352

  171 casestatements: casestatements casestatement .

    $default  reduce using rule 171 (casestatements)


State 353

   94 anonymous_union: T_UNION $@6 union_body $@7 T_SEMI .

    $default  reduce using rule 94 (anonymous_union)


State 354

  155 if_tail: T_ELSE $@11 . statement

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_CONTINUE  shift, and go to state 73
    T_BREAK     shift, and go to state 74
    T_IF        shift, and go to state 75
    T_WHILE     shift, and go to state 76
    T_FOR       shift, and go to state 77
    T_SWITCH    shift, and go to state 78
    T_RETURN    shift, and go to state 79
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_CIN       shift, and go to state 82
    T_COUT      shift, and go to state 83
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_SEMI      shift, and go to state 90
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 92
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression            go to state 94
    variable              go to state 95
    general_expression    go to state 96
    assignment            go to state 97
    constant              go to state 98
    listexpression        go to state 99
    decltype              go to state 137
    statement             go to state 360
    expression_statement  go to state 105
    if_statement          go to state 106
    while_statement       go to state 107
    for_statement         go to state 108
    switch_statement      go to state 109
    return_statement      go to state 110
    io_statement          go to state 111
    comp_statement        go to state 112


State 355

  160 for_statement: T_FOR T_LPAREN $@13 optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN . statement

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_CONTINUE  shift, and go to state 73
    T_BREAK     shift, and go to state 74
    T_IF        shift, and go to state 75
    T_WHILE     shift, and go to state 76
    T_FOR       shift, and go to state 77
    T_SWITCH    shift, and go to state 78
    T_RETURN    shift, and go to state 79
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_CIN       shift, and go to state 82
    T_COUT      shift, and go to state 83
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_SEMI      shift, and go to state 90
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 92
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression            go to state 94
    variable              go to state 95
    general_expression    go to state 96
    assignment            go to state 97
    constant              go to state 98
    listexpression        go to state 99
    decltype              go to state 137
    statement             go to state 361
    expression_statement  go to state 105
    if_statement          go to state 106
    while_statement       go to state 107
    for_statement         go to state 108
    switch_statement      go to state 109
    return_statement      go to state 110
    io_statement          go to state 111
    comp_statement        go to state 112


State 356

  178 single_casestatement: T_CASE constant T_COLON single_casestatement .

    $default  reduce using rule 178 (single_casestatement)


State 357

  180 single_casestatement: T_CASE constant T_COLON $@17 . statement

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_CONTINUE  shift, and go to state 73
    T_BREAK     shift, and go to state 74
    T_IF        shift, and go to state 75
    T_WHILE     shift, and go to state 76
    T_FOR       shift, and go to state 77
    T_SWITCH    shift, and go to state 78
    T_RETURN    shift, and go to state 79
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_CIN       shift, and go to state 82
    T_COUT      shift, and go to state 83
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_SEMI      shift, and go to state 90
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 92
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression            go to state 94
    variable              go to state 95
    general_expression    go to state 96
    assignment            go to state 97
    constant              go to state 98
    listexpression        go to state 99
    decltype              go to state 137
    statement             go to state 362
    expression_statement  go to state 105
    if_statement          go to state 106
    while_statement       go to state 107
    for_statement         go to state 108
    switch_statement      go to state 109
    return_statement      go to state 110
    io_statement          go to state 111
    comp_statement        go to state 112


State 358

  173 casestatement: T_CASE constant T_COLON . casestatement
  175              | T_CASE constant T_COLON . $@15 statements

    T_CASE     shift, and go to state 335
    T_DEFAULT  shift, and go to state 336

    $default  reduce using rule 174 ($@15)

    casestatement  go to state 363
    $@15           go to state 364


State 359

  177 casestatement: T_DEFAULT T_COLON $@16 . statements

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_CONTINUE  shift, and go to state 73
    T_BREAK     shift, and go to state 74
    T_IF        shift, and go to state 75
    T_WHILE     shift, and go to state 76
    T_FOR       shift, and go to state 77
    T_SWITCH    shift, and go to state 78
    T_RETURN    shift, and go to state 79
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_CIN       shift, and go to state 82
    T_COUT      shift, and go to state 83
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_SEMI      shift, and go to state 90
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 92
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression            go to state 94
    variable              go to state 95
    general_expression    go to state 96
    assignment            go to state 97
    constant              go to state 98
    listexpression        go to state 99
    decltype              go to state 137
    statements            go to state 365
    statement             go to state 104
    expression_statement  go to state 105
    if_statement          go to state 106
    while_statement       go to state 107
    for_statement         go to state 108
    switch_statement      go to state 109
    return_statement      go to state 110
    io_statement          go to state 111
    comp_statement        go to state 112


State 360

  155 if_tail: T_ELSE $@11 statement .

    $default  reduce using rule 155 (if_tail)


State 361

  160 for_statement: T_FOR T_LPAREN $@13 optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement .

    $default  reduce using rule 160 (for_statement)


State 362

  180 single_casestatement: T_CASE constant T_COLON $@17 statement .

    $default  reduce using rule 180 (single_casestatement)


State 363

  173 casestatement: T_CASE constant T_COLON casestatement .

    $default  reduce using rule 173 (casestatement)


State 364

  175 casestatement: T_CASE constant T_COLON $@15 . statements

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_CONTINUE  shift, and go to state 73
    T_BREAK     shift, and go to state 74
    T_IF        shift, and go to state 75
    T_WHILE     shift, and go to state 76
    T_FOR       shift, and go to state 77
    T_SWITCH    shift, and go to state 78
    T_RETURN    shift, and go to state 79
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_CIN       shift, and go to state 82
    T_COUT      shift, and go to state 83
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_SEMI      shift, and go to state 90
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 92
    T_LISTFUNC  shift, and go to state 93

    $default  reduce using rule 136 (decltype)

    expression            go to state 94
    variable              go to state 95
    general_expression    go to state 96
    assignment            go to state 97
    constant              go to state 98
    listexpression        go to state 99
    decltype              go to state 137
    statements            go to state 366
    statement             go to state 104
    expression_statement  go to state 105
    if_statement          go to state 106
    while_statement       go to state 107
    for_statement         go to state 108
    switch_statement      go to state 109
    return_statement      go to state 110
    io_statement          go to state 111
    comp_statement        go to state 112


State 365

  137 statements: statements . statement
  177 casestatement: T_DEFAULT T_COLON $@16 statements .

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_CONTINUE  shift, and go to state 73
    T_BREAK     shift, and go to state 74
    T_IF        shift, and go to state 75
    T_WHILE     shift, and go to state 76
    T_FOR       shift, and go to state 77
    T_SWITCH    shift, and go to state 78
    T_RETURN    shift, and go to state 79
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_CIN       shift, and go to state 82
    T_COUT      shift, and go to state 83
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_SEMI      shift, and go to state 90
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 92
    T_LISTFUNC  shift, and go to state 93

    T_ID      reduce using rule 136 (decltype)
    $default  reduce using rule 177 (casestatement)

    expression            go to state 94
    variable              go to state 95
    general_expression    go to state 96
    assignment            go to state 97
    constant              go to state 98
    listexpression        go to state 99
    decltype              go to state 137
    statement             go to state 189
    expression_statement  go to state 105
    if_statement          go to state 106
    while_statement       go to state 107
    for_statement         go to state 108
    switch_statement      go to state 109
    return_statement      go to state 110
    io_statement          go to state 111
    comp_statement        go to state 112


State 366

  137 statements: statements . statement
  175 casestatement: T_CASE constant T_COLON $@15 statements .

    T_ICONST    shift, and go to state 68
    T_FCONST    shift, and go to state 69
    T_CCONST    shift, and go to state 70
    T_SCONST    shift, and go to state 71
    T_STATIC    shift, and go to state 72
    T_CONTINUE  shift, and go to state 73
    T_BREAK     shift, and go to state 74
    T_IF        shift, and go to state 75
    T_WHILE     shift, and go to state 76
    T_FOR       shift, and go to state 77
    T_SWITCH    shift, and go to state 78
    T_RETURN    shift, and go to state 79
    T_LENGTH    shift, and go to state 80
    T_NEW       shift, and go to state 81
    T_CIN       shift, and go to state 82
    T_COUT      shift, and go to state 83
    T_THIS      shift, and go to state 84
    T_ADDOP     shift, and go to state 85
    T_NOTOP     shift, and go to state 86
    T_INCDEC    shift, and go to state 87
    T_SIZEOP    shift, and go to state 88
    T_LPAREN    shift, and go to state 89
    T_SEMI      shift, and go to state 90
    T_LBRACK    shift, and go to state 91
    T_LBRACE    shift, and go to state 92
    T_LISTFUNC  shift, and go to state 93

    T_ID      reduce using rule 136 (decltype)
    $default  reduce using rule 175 (casestatement)

    expression            go to state 94
    variable              go to state 95
    general_expression    go to state 96
    assignment            go to state 97
    constant              go to state 98
    listexpression        go to state 99
    decltype              go to state 137
    statement             go to state 189
    expression_statement  go to state 105
    if_statement          go to state 106
    while_statement       go to state 107
    for_statement         go to state 108
    switch_statement      go to state 109
    return_statement      go to state 110
    io_statement          go to state 111
    comp_statement        go to state 112
