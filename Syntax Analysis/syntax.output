Terminals unused in grammar

   T_EOF


Grammar

    0 $accept: program $end

    1 program: global_declarations main_function

    2 global_declarations: global_declarations global_declaration
    3                    | %empty

    4 global_declaration: typedef_declaration
    5                   | enum_declaration
    6                   | class_declaration
    7                   | union_declaration
    8                   | global_var_declaration
    9                   | func_declaration

   10 $@1: %empty

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID $@1 dims T_SEMI

   12 typename: standard_type
   13         | T_ID

   14 standard_type: T_CHAR
   15              | T_INT
   16              | T_FLOAT
   17              | T_STRING
   18              | T_VOID

   19 listspec: T_LIST
   20         | %empty

   21 dims: dims dim
   22     | %empty

   23 dim: T_LBRACK T_ICONST T_RBRACK
   24    | T_LBRACK T_RBRACK

   25 $@2: %empty

   26 $@3: %empty

   27 enum_declaration: T_ENUM T_ID $@2 enum_body $@3 T_SEMI

   28 enum_body: T_LBRACE id_list T_RBRACE

   29 id_list: id_list T_COMMA T_ID initializer

   30 $@4: %empty

   31 id_list: T_ID $@4 initializer

   32 initializer: T_ASSIGN init_value
   33            | %empty

   34 init_value: expression
   35           | T_LBRACE init_values T_RBRACE

   36 expression: expression T_OROP expression
   37           | expression T_ANDOP expression
   38           | expression T_EQUOP expression
   39           | expression T_RELOP expression
   40           | expression T_ADDOP expression
   41           | expression T_MULOP expression
   42           | T_NOTOP expression
   43           | T_ADDOP expression
   44           | T_SIZEOP expression
   45           | T_INCDEC variable
   46           | variable T_INCDEC
   47           | variable
   48           | variable T_LPAREN expression_list T_RPAREN
   49           | T_LENGTH T_LPAREN general_expression T_RPAREN
   50           | T_NEW T_LPAREN general_expression T_RPAREN
   51           | constant
   52           | T_LPAREN general_expression T_RPAREN
   53           | T_LPAREN standard_type T_RPAREN
   54           | listexpression

   55 variable: variable T_LBRACK general_expression T_RBRACK
   56         | variable T_DOT T_ID
   57         | T_LISTFUNC T_LPAREN general_expression T_RPAREN
   58         | decltype T_ID
   59         | T_THIS

   60 general_expression: general_expression T_COMMA general_expression
   61                   | assignment

   62 assignment: variable T_ASSIGN assignment
   63           | expression

   64 expression_list: general_expression
   65                | %empty

   66 constant: T_CCONST
   67         | T_ICONST
   68         | T_FCONST
   69         | T_SCONST

   70 listexpression: T_LBRACK expression_list T_RBRACK

   71 init_values: init_values T_COMMA init_value
   72            | init_value

   73 $@5: %empty

   74 class_declaration: T_CLASS T_ID $@5 class_body T_SEMI

   75 class_body: parent T_LBRACE members_methods T_RBRACE

   76 parent: T_COLON T_ID
   77       | %empty

   78 members_methods: members_methods access member_or_method
   79                | access member_or_method

   80 access: T_PRIVATE T_COLON
   81       | T_PROTECTED T_COLON
   82       | T_PUBLIC T_COLON
   83       | %empty

   84 member_or_method: member
   85                 | method

   86 member: var_declaration
   87       | anonymous_union

   88 var_declaration: typename variabledefs T_SEMI

   89 variabledefs: variabledefs T_COMMA variabledef
   90             | variabledef

   91 variabledef: listspec T_ID dims

   92 $@6: %empty

   93 $@7: %empty

   94 anonymous_union: T_UNION $@6 union_body $@7 T_SEMI

   95 union_body: T_LBRACE fields T_RBRACE

   96 fields: fields field
   97       | field

   98 field: var_declaration

   99 method: short_func_declaration

  100 short_func_declaration: short_par_func_header T_SEMI
  101                       | nopar_func_header T_SEMI

  102 short_par_func_header: func_header_start T_LPAREN parameter_types T_RPAREN

  103 func_header_start: typename listspec T_ID

  104 parameter_types: parameter_types T_COMMA typename pass_list_dims
  105                | typename pass_list_dims

  106 pass_list_dims: T_REFER
  107               | listspec dims

  108 nopar_func_header: func_header_start T_LPAREN T_RPAREN

  109 $@8: %empty

  110 union_declaration: T_UNION T_ID $@8 union_body T_SEMI

  111 global_var_declaration: typename init_variabledefs T_SEMI

  112 init_variabledefs: init_variabledefs T_COMMA init_variabledef
  113                  | init_variabledef

  114 init_variabledef: variabledef initializer

  115 func_declaration: short_func_declaration
  116                 | full_func_declaration

  117 full_func_declaration: full_par_func_header T_LBRACE decl_statements T_RBRACE
  118                      | nopar_class_func_header T_LBRACE decl_statements T_RBRACE
  119                      | nopar_func_header T_LBRACE decl_statements T_RBRACE

  120 full_par_func_header: class_func_header_start T_LPAREN parameter_list T_RPAREN
  121                     | func_header_start T_LPAREN parameter_list T_RPAREN

  122 class_func_header_start: typename listspec func_class T_ID

  123 func_class: T_ID T_METH

  124 parameter_list: parameter_list T_COMMA typename pass_variabledef
  125               | typename pass_variabledef

  126 pass_variabledef: variabledef
  127                 | T_REFER T_ID

  128 nopar_class_func_header: class_func_header_start T_LPAREN T_RPAREN

  129 decl_statements: declarations statements
  130                | declarations
  131                | statements
  132                | %empty

  133 declarations: declarations decltype typename variabledefs T_SEMI
  134             | decltype typename variabledefs T_SEMI

  135 decltype: T_STATIC
  136         | %empty

  137 statements: statements statement
  138           | statement

  139 statement: expression_statement
  140          | if_statement
  141          | while_statement
  142          | for_statement
  143          | switch_statement
  144          | return_statement
  145          | io_statement
  146          | comp_statement
  147          | T_CONTINUE T_SEMI
  148          | T_BREAK T_SEMI
  149          | T_SEMI

  150 expression_statement: general_expression T_SEMI

  151 $@9: %empty

  152 $@10: %empty

  153 if_statement: T_IF T_LPAREN $@9 general_expression T_RPAREN statement $@10 if_tail

  154 $@11: %empty

  155 if_tail: T_ELSE $@11 statement
  156        | %empty

  157 $@12: %empty

  158 while_statement: T_WHILE T_LPAREN $@12 general_expression T_RPAREN statement

  159 $@13: %empty

  160 for_statement: T_FOR T_LPAREN $@13 optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

  161 optexpr: general_expression
  162        | %empty

  163 $@14: %empty

  164 switch_statement: T_SWITCH T_LPAREN $@14 general_expression T_RPAREN switch_tail

  165 switch_tail: T_LBRACE decl_cases T_RBRACE
  166            | error decl_cases T_RBRACE
  167            | T_LBRACE decl_cases error
  168            | single_casestatement

  169 decl_cases: declarations casestatements
  170           | declarations
  171           | casestatements
  172           | %empty

  173 casestatements: casestatements casestatement
  174               | casestatement

  175 casestatement: T_CASE constant T_COLON casestatement

  176 $@15: %empty

  177 casestatement: T_CASE constant T_COLON $@15 statements

  178 $@16: %empty

  179 casestatement: T_DEFAULT T_COLON $@16 statements

  180 single_casestatement: T_CASE constant T_COLON single_casestatement

  181 $@17: %empty

  182 single_casestatement: T_CASE constant T_COLON $@17 statement

  183 return_statement: T_RETURN optexpr T_SEMI
  184                 | T_RETURN optexpr error

  185 io_statement: T_CIN T_INP in_list T_SEMI
  186             | T_CIN T_INP in_list error
  187             | T_COUT T_OUT out_list T_SEMI
  188             | T_COUT T_OUT out_list error

  189 in_list: in_list T_INP in_item
  190        | in_item

  191 in_item: variable

  192 out_list: out_list T_OUT out_item
  193         | out_item

  194 out_item: general_expression

  195 comp_statement: T_LBRACE decl_statements T_RBRACE

  196 main_function: main_header T_LBRACE decl_statements T_RBRACE
  197              | error decl_statements T_RBRACE
  198              | T_LBRACE decl_statements error

  199 main_header: T_INP T_MAIN T_LPAREN T_RPAREN
  200            | T_INP T_MAIN error T_RPAREN
  201            | T_INP T_MAIN T_LPAREN error


Terminals, with rules where they appear

$end (0) 0
error (256) 166 167 184 186 188 197 198 200 201
T_ICONST (258) 23 67
T_FCONST (259) 68
T_CCONST (260) 66
T_SCONST (261) 69
T_EOF (262)
T_TYPEDEF (263) 11
T_CHAR (264) 14
T_INT (265) 15
T_FLOAT (266) 16
T_STRING (267) 17
T_CLASS (268) 74
T_PRIVATE (269) 80
T_PROTECTED (270) 81
T_PUBLIC (271) 82
T_VOID (272) 18
T_STATIC (273) 135
T_UNION (274) 94 110
T_ENUM (275) 27
T_LIST (276) 19
T_CONTINUE (277) 147
T_BREAK (278) 148
T_IF (279) 153
T_ELSE (280) 155
T_WHILE (281) 158
T_FOR (282) 160
T_SWITCH (283) 164
T_CASE (284) 175 177 180 182
T_DEFAULT (285) 179
T_RETURN (286) 183 184
T_LENGTH (287) 49
T_NEW (288) 50
T_CIN (289) 185 186
T_COUT (290) 187 188
T_MAIN (291) 199 200 201
T_THIS (292) 59
T_OROP (293) 36
T_ANDOP (294) 37
T_EQUOP (295) 38
T_RELOP (296) 39
T_ADDOP (297) 40 43
T_MULOP (298) 41
T_NOTOP (299) 42
T_INCDEC (300) 45 46
T_SIZEOP (301) 44
T_LPAREN (302) 48 49 50 52 53 57 102 108 120 121 128 153 158 160 164
    199 201
T_RPAREN (303) 48 49 50 52 53 57 102 108 120 121 128 153 158 160 164
    199 200
T_SEMI (304) 11 27 74 88 94 100 101 110 111 133 134 147 148 149 150
    160 183 185 187
T_DOT (305) 56
T_COMMA (306) 29 60 71 89 104 112 124
T_ASSIGN (307) 32 62
T_COLON (308) 76 80 81 82 175 177 179 180 182
T_LBRACK (309) 23 24 55 70
T_RBRACK (310) 23 24 55 70
T_REFER (311) 106 127
T_LBRACE (312) 28 35 75 95 117 118 119 165 167 195 196 198
T_RBRACE (313) 28 35 75 95 117 118 119 165 166 195 196 197
T_METH (314) 123
T_INP (315) 185 186 189 199 200 201
T_OUT (316) 187 188 192
T_ID (317) 11 13 27 29 31 56 58 74 76 91 103 110 122 123 127
T_LISTFUNC (318) 57
LOWER_THAN_ELSE (319)


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
program (66)
    on left: 1, on right: 0
global_declarations (67)
    on left: 2 3, on right: 1 2
global_declaration (68)
    on left: 4 5 6 7 8 9, on right: 2
typedef_declaration (69)
    on left: 11, on right: 4
$@1 (70)
    on left: 10, on right: 11
typename (71)
    on left: 12 13, on right: 11 88 103 104 105 111 122 124 125 133
    134
standard_type (72)
    on left: 14 15 16 17 18, on right: 12 53
listspec (73)
    on left: 19 20, on right: 11 91 103 107 122
dims (74)
    on left: 21 22, on right: 11 21 91 107
dim (75)
    on left: 23 24, on right: 21
enum_declaration (76)
    on left: 27, on right: 5
$@2 (77)
    on left: 25, on right: 27
$@3 (78)
    on left: 26, on right: 27
enum_body (79)
    on left: 28, on right: 27
id_list (80)
    on left: 29 31, on right: 28 29
$@4 (81)
    on left: 30, on right: 31
initializer (82)
    on left: 32 33, on right: 29 31 114
init_value (83)
    on left: 34 35, on right: 32 71 72
expression (84)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    54, on right: 34 36 37 38 39 40 41 42 43 44 63
variable (85)
    on left: 55 56 57 58 59, on right: 45 46 47 48 55 56 62 191
general_expression (86)
    on left: 60 61, on right: 49 50 52 55 57 60 64 150 153 158 161
    164 194
assignment (87)
    on left: 62 63, on right: 61 62
expression_list (88)
    on left: 64 65, on right: 48 70
constant (89)
    on left: 66 67 68 69, on right: 51 175 177 180 182
listexpression (90)
    on left: 70, on right: 54
init_values (91)
    on left: 71 72, on right: 35 71
class_declaration (92)
    on left: 74, on right: 6
$@5 (93)
    on left: 73, on right: 74
class_body (94)
    on left: 75, on right: 74
parent (95)
    on left: 76 77, on right: 75
members_methods (96)
    on left: 78 79, on right: 75 78
access (97)
    on left: 80 81 82 83, on right: 78 79
member_or_method (98)
    on left: 84 85, on right: 78 79
member (99)
    on left: 86 87, on right: 84
var_declaration (100)
    on left: 88, on right: 86 98
variabledefs (101)
    on left: 89 90, on right: 88 89 133 134
variabledef (102)
    on left: 91, on right: 89 90 114 126
anonymous_union (103)
    on left: 94, on right: 87
$@6 (104)
    on left: 92, on right: 94
$@7 (105)
    on left: 93, on right: 94
union_body (106)
    on left: 95, on right: 94 110
fields (107)
    on left: 96 97, on right: 95 96
field (108)
    on left: 98, on right: 96 97
method (109)
    on left: 99, on right: 85
short_func_declaration (110)
    on left: 100 101, on right: 99 115
short_par_func_header (111)
    on left: 102, on right: 100
func_header_start (112)
    on left: 103, on right: 102 108 121
parameter_types (113)
    on left: 104 105, on right: 102 104
pass_list_dims (114)
    on left: 106 107, on right: 104 105
nopar_func_header (115)
    on left: 108, on right: 101 119
union_declaration (116)
    on left: 110, on right: 7
$@8 (117)
    on left: 109, on right: 110
global_var_declaration (118)
    on left: 111, on right: 8
init_variabledefs (119)
    on left: 112 113, on right: 111 112
init_variabledef (120)
    on left: 114, on right: 112 113
func_declaration (121)
    on left: 115 116, on right: 9
full_func_declaration (122)
    on left: 117 118 119, on right: 116
full_par_func_header (123)
    on left: 120 121, on right: 117
class_func_header_start (124)
    on left: 122, on right: 120 128
func_class (125)
    on left: 123, on right: 122
parameter_list (126)
    on left: 124 125, on right: 120 121 124
pass_variabledef (127)
    on left: 126 127, on right: 124 125
nopar_class_func_header (128)
    on left: 128, on right: 118
decl_statements (129)
    on left: 129 130 131 132, on right: 117 118 119 195 196 197 198
declarations (130)
    on left: 133 134, on right: 129 130 133 169 170
decltype (131)
    on left: 135 136, on right: 58 133 134
statements (132)
    on left: 137 138, on right: 129 131 137 177 179
statement (133)
    on left: 139 140 141 142 143 144 145 146 147 148 149, on right:
    137 138 153 155 158 160 182
expression_statement (134)
    on left: 150, on right: 139
if_statement (135)
    on left: 153, on right: 140
$@9 (136)
    on left: 151, on right: 153
$@10 (137)
    on left: 152, on right: 153
if_tail (138)
    on left: 155 156, on right: 153
$@11 (139)
    on left: 154, on right: 155
while_statement (140)
    on left: 158, on right: 141
$@12 (141)
    on left: 157, on right: 158
for_statement (142)
    on left: 160, on right: 142
$@13 (143)
    on left: 159, on right: 160
optexpr (144)
    on left: 161 162, on right: 160 183 184
switch_statement (145)
    on left: 164, on right: 143
$@14 (146)
    on left: 163, on right: 164
switch_tail (147)
    on left: 165 166 167 168, on right: 164
decl_cases (148)
    on left: 169 170 171 172, on right: 165 166 167
casestatements (149)
    on left: 173 174, on right: 169 171 173
casestatement (150)
    on left: 175 177 179, on right: 173 174 175
$@15 (151)
    on left: 176, on right: 177
$@16 (152)
    on left: 178, on right: 179
single_casestatement (153)
    on left: 180 182, on right: 168 180
$@17 (154)
    on left: 181, on right: 182
return_statement (155)
    on left: 183 184, on right: 144
io_statement (156)
    on left: 185 186 187 188, on right: 145
in_list (157)
    on left: 189 190, on right: 185 186 189
in_item (158)
    on left: 191, on right: 189 190
out_list (159)
    on left: 192 193, on right: 187 188 192
out_item (160)
    on left: 194, on right: 192 193
comp_statement (161)
    on left: 195, on right: 146
main_function (162)
    on left: 196 197 198, on right: 1
main_header (163)
    on left: 199 200 201, on right: 196


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (global_declarations)

    program              go to state 1
    global_declarations  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_declarations . main_function
    2 global_declarations: global_declarations . global_declaration

    error      shift, and go to state 4
    T_TYPEDEF  shift, and go to state 5
    T_CHAR     shift, and go to state 6
    T_INT      shift, and go to state 7
    T_FLOAT    shift, and go to state 8
    T_STRING   shift, and go to state 9
    T_CLASS    shift, and go to state 10
    T_VOID     shift, and go to state 11
    T_UNION    shift, and go to state 12
    T_ENUM     shift, and go to state 13
    T_LBRACE   shift, and go to state 14
    T_INP      shift, and go to state 15
    T_ID       shift, and go to state 16

    global_declaration       go to state 17
    typedef_declaration      go to state 18
    typename                 go to state 19
    standard_type            go to state 20
    enum_declaration         go to state 21
    class_declaration        go to state 22
    short_func_declaration   go to state 23
    short_par_func_header    go to state 24
    func_header_start        go to state 25
    nopar_func_header        go to state 26
    union_declaration        go to state 27
    global_var_declaration   go to state 28
    func_declaration         go to state 29
    full_func_declaration    go to state 30
    full_par_func_header     go to state 31
    class_func_header_start  go to state 32
    nopar_class_func_header  go to state 33
    main_function            go to state 34
    main_header              go to state 35


State 3

    0 $accept: program $end .

    $default  accept


State 4

  197 main_function: error . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    T_RBRACE  reduce using rule 132 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decl_statements       go to state 68
    declarations          go to state 69
    decltype              go to state 70
    statements            go to state 71
    statement             go to state 72
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80


State 5

   11 typedef_declaration: T_TYPEDEF . typename listspec T_ID $@1 dims T_SEMI

    T_CHAR    shift, and go to state 6
    T_INT     shift, and go to state 7
    T_FLOAT   shift, and go to state 8
    T_STRING  shift, and go to state 9
    T_VOID    shift, and go to state 11
    T_ID      shift, and go to state 16

    typename       go to state 81
    standard_type  go to state 20


State 6

   14 standard_type: T_CHAR .

    $default  reduce using rule 14 (standard_type)


State 7

   15 standard_type: T_INT .

    $default  reduce using rule 15 (standard_type)


State 8

   16 standard_type: T_FLOAT .

    $default  reduce using rule 16 (standard_type)


State 9

   17 standard_type: T_STRING .

    $default  reduce using rule 17 (standard_type)


State 10

   74 class_declaration: T_CLASS . T_ID $@5 class_body T_SEMI

    T_ID  shift, and go to state 82


State 11

   18 standard_type: T_VOID .

    $default  reduce using rule 18 (standard_type)


State 12

  110 union_declaration: T_UNION . T_ID $@8 union_body T_SEMI

    T_ID  shift, and go to state 83


State 13

   27 enum_declaration: T_ENUM . T_ID $@2 enum_body $@3 T_SEMI

    T_ID  shift, and go to state 84


State 14

  198 main_function: T_LBRACE . decl_statements error

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    error     reduce using rule 132 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decl_statements       go to state 85
    declarations          go to state 69
    decltype              go to state 70
    statements            go to state 71
    statement             go to state 72
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80


State 15

  199 main_header: T_INP . T_MAIN T_LPAREN T_RPAREN
  200            | T_INP . T_MAIN error T_RPAREN
  201            | T_INP . T_MAIN T_LPAREN error

    T_MAIN  shift, and go to state 86


State 16

   13 typename: T_ID .

    $default  reduce using rule 13 (typename)


State 17

    2 global_declarations: global_declarations global_declaration .

    $default  reduce using rule 2 (global_declarations)


State 18

    4 global_declaration: typedef_declaration .

    $default  reduce using rule 4 (global_declaration)


State 19

  103 func_header_start: typename . listspec T_ID
  111 global_var_declaration: typename . init_variabledefs T_SEMI
  122 class_func_header_start: typename . listspec func_class T_ID

    T_LIST  shift, and go to state 87

    $default  reduce using rule 20 (listspec)

    listspec           go to state 88
    variabledef        go to state 89
    init_variabledefs  go to state 90
    init_variabledef   go to state 91


State 20

   12 typename: standard_type .

    $default  reduce using rule 12 (typename)


State 21

    5 global_declaration: enum_declaration .

    $default  reduce using rule 5 (global_declaration)


State 22

    6 global_declaration: class_declaration .

    $default  reduce using rule 6 (global_declaration)


State 23

  115 func_declaration: short_func_declaration .

    $default  reduce using rule 115 (func_declaration)


State 24

  100 short_func_declaration: short_par_func_header . T_SEMI

    T_SEMI  shift, and go to state 92


State 25

  102 short_par_func_header: func_header_start . T_LPAREN parameter_types T_RPAREN
  108 nopar_func_header: func_header_start . T_LPAREN T_RPAREN
  121 full_par_func_header: func_header_start . T_LPAREN parameter_list T_RPAREN

    T_LPAREN  shift, and go to state 93


State 26

  101 short_func_declaration: nopar_func_header . T_SEMI
  119 full_func_declaration: nopar_func_header . T_LBRACE decl_statements T_RBRACE

    T_SEMI    shift, and go to state 94
    T_LBRACE  shift, and go to state 95


State 27

    7 global_declaration: union_declaration .

    $default  reduce using rule 7 (global_declaration)


State 28

    8 global_declaration: global_var_declaration .

    $default  reduce using rule 8 (global_declaration)


State 29

    9 global_declaration: func_declaration .

    $default  reduce using rule 9 (global_declaration)


State 30

  116 func_declaration: full_func_declaration .

    $default  reduce using rule 116 (func_declaration)


State 31

  117 full_func_declaration: full_par_func_header . T_LBRACE decl_statements T_RBRACE

    T_LBRACE  shift, and go to state 96


State 32

  120 full_par_func_header: class_func_header_start . T_LPAREN parameter_list T_RPAREN
  128 nopar_class_func_header: class_func_header_start . T_LPAREN T_RPAREN

    T_LPAREN  shift, and go to state 97


State 33

  118 full_func_declaration: nopar_class_func_header . T_LBRACE decl_statements T_RBRACE

    T_LBRACE  shift, and go to state 98


State 34

    1 program: global_declarations main_function .

    $default  reduce using rule 1 (program)


State 35

  196 main_function: main_header . T_LBRACE decl_statements T_RBRACE

    T_LBRACE  shift, and go to state 99


State 36

   67 constant: T_ICONST .

    $default  reduce using rule 67 (constant)


State 37

   68 constant: T_FCONST .

    $default  reduce using rule 68 (constant)


State 38

   66 constant: T_CCONST .

    $default  reduce using rule 66 (constant)


State 39

   69 constant: T_SCONST .

    $default  reduce using rule 69 (constant)


State 40

  135 decltype: T_STATIC .

    $default  reduce using rule 135 (decltype)


State 41

  147 statement: T_CONTINUE . T_SEMI

    T_SEMI  shift, and go to state 100


State 42

  148 statement: T_BREAK . T_SEMI

    T_SEMI  shift, and go to state 101


State 43

  153 if_statement: T_IF . T_LPAREN $@9 general_expression T_RPAREN statement $@10 if_tail

    T_LPAREN  shift, and go to state 102


State 44

  158 while_statement: T_WHILE . T_LPAREN $@12 general_expression T_RPAREN statement

    T_LPAREN  shift, and go to state 103


State 45

  160 for_statement: T_FOR . T_LPAREN $@13 optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

    T_LPAREN  shift, and go to state 104


State 46

  164 switch_statement: T_SWITCH . T_LPAREN $@14 general_expression T_RPAREN switch_tail

    T_LPAREN  shift, and go to state 105


State 47

  183 return_statement: T_RETURN . optexpr T_SEMI
  184                 | T_RETURN . optexpr error

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    T_ID      reduce using rule 136 (decltype)
    $default  reduce using rule 162 (optexpr)

    expression          go to state 62
    variable            go to state 63
    general_expression  go to state 106
    assignment          go to state 65
    constant            go to state 66
    listexpression      go to state 67
    decltype            go to state 107
    optexpr             go to state 108


State 48

   49 expression: T_LENGTH . T_LPAREN general_expression T_RPAREN

    T_LPAREN  shift, and go to state 109


State 49

   50 expression: T_NEW . T_LPAREN general_expression T_RPAREN

    T_LPAREN  shift, and go to state 110


State 50

  185 io_statement: T_CIN . T_INP in_list T_SEMI
  186             | T_CIN . T_INP in_list error

    T_INP  shift, and go to state 111


State 51

  187 io_statement: T_COUT . T_OUT out_list T_SEMI
  188             | T_COUT . T_OUT out_list error

    T_OUT  shift, and go to state 112


State 52

   59 variable: T_THIS .

    $default  reduce using rule 59 (variable)


State 53

   43 expression: T_ADDOP . expression

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression      go to state 113
    variable        go to state 114
    constant        go to state 66
    listexpression  go to state 67
    decltype        go to state 107


State 54

   42 expression: T_NOTOP . expression

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression      go to state 115
    variable        go to state 114
    constant        go to state 66
    listexpression  go to state 67
    decltype        go to state 107


State 55

   45 expression: T_INCDEC . variable

    T_STATIC    shift, and go to state 40
    T_THIS      shift, and go to state 52
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    variable  go to state 116
    decltype  go to state 107


State 56

   44 expression: T_SIZEOP . expression

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression      go to state 117
    variable        go to state 114
    constant        go to state 66
    listexpression  go to state 67
    decltype        go to state 107


State 57

   52 expression: T_LPAREN . general_expression T_RPAREN
   53           | T_LPAREN . standard_type T_RPAREN

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_CHAR      shift, and go to state 6
    T_INT       shift, and go to state 7
    T_FLOAT     shift, and go to state 8
    T_STRING    shift, and go to state 9
    T_VOID      shift, and go to state 11
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    standard_type       go to state 118
    expression          go to state 62
    variable            go to state 63
    general_expression  go to state 119
    assignment          go to state 65
    constant            go to state 66
    listexpression      go to state 67
    decltype            go to state 107


State 58

  149 statement: T_SEMI .

    $default  reduce using rule 149 (statement)


State 59

   70 listexpression: T_LBRACK . expression_list T_RBRACK

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    T_ID      reduce using rule 136 (decltype)
    $default  reduce using rule 65 (expression_list)

    expression          go to state 62
    variable            go to state 63
    general_expression  go to state 120
    assignment          go to state 65
    expression_list     go to state 121
    constant            go to state 66
    listexpression      go to state 67
    decltype            go to state 107


State 60

  195 comp_statement: T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    T_RBRACE  reduce using rule 132 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decl_statements       go to state 122
    declarations          go to state 69
    decltype              go to state 70
    statements            go to state 71
    statement             go to state 72
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80


State 61

   57 variable: T_LISTFUNC . T_LPAREN general_expression T_RPAREN

    T_LPAREN  shift, and go to state 123


State 62

   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression
   63 assignment: expression .

    T_OROP   shift, and go to state 124
    T_ANDOP  shift, and go to state 125
    T_EQUOP  shift, and go to state 126
    T_RELOP  shift, and go to state 127
    T_ADDOP  shift, and go to state 128
    T_MULOP  shift, and go to state 129

    $default  reduce using rule 63 (assignment)


State 63

   46 expression: variable . T_INCDEC
   47           | variable .
   48           | variable . T_LPAREN expression_list T_RPAREN
   55 variable: variable . T_LBRACK general_expression T_RBRACK
   56         | variable . T_DOT T_ID
   62 assignment: variable . T_ASSIGN assignment

    T_INCDEC  shift, and go to state 130
    T_LPAREN  shift, and go to state 131
    T_DOT     shift, and go to state 132
    T_ASSIGN  shift, and go to state 133
    T_LBRACK  shift, and go to state 134

    $default  reduce using rule 47 (expression)


State 64

   60 general_expression: general_expression . T_COMMA general_expression
  150 expression_statement: general_expression . T_SEMI

    T_SEMI   shift, and go to state 135
    T_COMMA  shift, and go to state 136


State 65

   61 general_expression: assignment .

    $default  reduce using rule 61 (general_expression)


State 66

   51 expression: constant .

    $default  reduce using rule 51 (expression)


State 67

   54 expression: listexpression .

    $default  reduce using rule 54 (expression)


State 68

  197 main_function: error decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 137


State 69

  129 decl_statements: declarations . statements
  130                | declarations .
  133 declarations: declarations . decltype typename variabledefs T_SEMI

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    error     reduce using rule 130 (decl_statements)
    T_RBRACE  reduce using rule 130 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decltype              go to state 138
    statements            go to state 139
    statement             go to state 72
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80


State 70

   58 variable: decltype . T_ID
  134 declarations: decltype . typename variabledefs T_SEMI

    T_CHAR    shift, and go to state 6
    T_INT     shift, and go to state 7
    T_FLOAT   shift, and go to state 8
    T_STRING  shift, and go to state 9
    T_VOID    shift, and go to state 11
    T_ID      shift, and go to state 140

    typename       go to state 141
    standard_type  go to state 20


State 71

  131 decl_statements: statements .
  137 statements: statements . statement

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    T_ID      reduce using rule 136 (decltype)
    $default  reduce using rule 131 (decl_statements)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decltype              go to state 107
    statement             go to state 142
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80


State 72

  138 statements: statement .

    $default  reduce using rule 138 (statements)


State 73

  139 statement: expression_statement .

    $default  reduce using rule 139 (statement)


State 74

  140 statement: if_statement .

    $default  reduce using rule 140 (statement)


State 75

  141 statement: while_statement .

    $default  reduce using rule 141 (statement)


State 76

  142 statement: for_statement .

    $default  reduce using rule 142 (statement)


State 77

  143 statement: switch_statement .

    $default  reduce using rule 143 (statement)


State 78

  144 statement: return_statement .

    $default  reduce using rule 144 (statement)


State 79

  145 statement: io_statement .

    $default  reduce using rule 145 (statement)


State 80

  146 statement: comp_statement .

    $default  reduce using rule 146 (statement)


State 81

   11 typedef_declaration: T_TYPEDEF typename . listspec T_ID $@1 dims T_SEMI

    T_LIST  shift, and go to state 87

    $default  reduce using rule 20 (listspec)

    listspec  go to state 143


State 82

   74 class_declaration: T_CLASS T_ID . $@5 class_body T_SEMI

    $default  reduce using rule 73 ($@5)

    $@5  go to state 144


State 83

  110 union_declaration: T_UNION T_ID . $@8 union_body T_SEMI

    $default  reduce using rule 109 ($@8)

    $@8  go to state 145


State 84

   27 enum_declaration: T_ENUM T_ID . $@2 enum_body $@3 T_SEMI

    $default  reduce using rule 25 ($@2)

    $@2  go to state 146


State 85

  198 main_function: T_LBRACE decl_statements . error

    error  shift, and go to state 147


State 86

  199 main_header: T_INP T_MAIN . T_LPAREN T_RPAREN
  200            | T_INP T_MAIN . error T_RPAREN
  201            | T_INP T_MAIN . T_LPAREN error

    error     shift, and go to state 148
    T_LPAREN  shift, and go to state 149


State 87

   19 listspec: T_LIST .

    $default  reduce using rule 19 (listspec)


State 88

   91 variabledef: listspec . T_ID dims
  103 func_header_start: typename listspec . T_ID
  122 class_func_header_start: typename listspec . func_class T_ID

    T_ID  shift, and go to state 150

    func_class  go to state 151


State 89

  114 init_variabledef: variabledef . initializer

    T_ASSIGN  shift, and go to state 152

    $default  reduce using rule 33 (initializer)

    initializer  go to state 153


State 90

  111 global_var_declaration: typename init_variabledefs . T_SEMI
  112 init_variabledefs: init_variabledefs . T_COMMA init_variabledef

    T_SEMI   shift, and go to state 154
    T_COMMA  shift, and go to state 155


State 91

  113 init_variabledefs: init_variabledef .

    $default  reduce using rule 113 (init_variabledefs)


State 92

  100 short_func_declaration: short_par_func_header T_SEMI .

    $default  reduce using rule 100 (short_func_declaration)


State 93

  102 short_par_func_header: func_header_start T_LPAREN . parameter_types T_RPAREN
  108 nopar_func_header: func_header_start T_LPAREN . T_RPAREN
  121 full_par_func_header: func_header_start T_LPAREN . parameter_list T_RPAREN

    T_CHAR    shift, and go to state 6
    T_INT     shift, and go to state 7
    T_FLOAT   shift, and go to state 8
    T_STRING  shift, and go to state 9
    T_VOID    shift, and go to state 11
    T_RPAREN  shift, and go to state 156
    T_ID      shift, and go to state 16

    typename         go to state 157
    standard_type    go to state 20
    parameter_types  go to state 158
    parameter_list   go to state 159


State 94

  101 short_func_declaration: nopar_func_header T_SEMI .

    $default  reduce using rule 101 (short_func_declaration)


State 95

  119 full_func_declaration: nopar_func_header T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    T_RBRACE  reduce using rule 132 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decl_statements       go to state 160
    declarations          go to state 69
    decltype              go to state 70
    statements            go to state 71
    statement             go to state 72
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80


State 96

  117 full_func_declaration: full_par_func_header T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    T_RBRACE  reduce using rule 132 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decl_statements       go to state 161
    declarations          go to state 69
    decltype              go to state 70
    statements            go to state 71
    statement             go to state 72
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80


State 97

  120 full_par_func_header: class_func_header_start T_LPAREN . parameter_list T_RPAREN
  128 nopar_class_func_header: class_func_header_start T_LPAREN . T_RPAREN

    T_CHAR    shift, and go to state 6
    T_INT     shift, and go to state 7
    T_FLOAT   shift, and go to state 8
    T_STRING  shift, and go to state 9
    T_VOID    shift, and go to state 11
    T_RPAREN  shift, and go to state 162
    T_ID      shift, and go to state 16

    typename        go to state 163
    standard_type   go to state 20
    parameter_list  go to state 164


State 98

  118 full_func_declaration: nopar_class_func_header T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    T_RBRACE  reduce using rule 132 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decl_statements       go to state 165
    declarations          go to state 69
    decltype              go to state 70
    statements            go to state 71
    statement             go to state 72
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80


State 99

  196 main_function: main_header T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    T_RBRACE  reduce using rule 132 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decl_statements       go to state 166
    declarations          go to state 69
    decltype              go to state 70
    statements            go to state 71
    statement             go to state 72
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80


State 100

  147 statement: T_CONTINUE T_SEMI .

    $default  reduce using rule 147 (statement)


State 101

  148 statement: T_BREAK T_SEMI .

    $default  reduce using rule 148 (statement)


State 102

  153 if_statement: T_IF T_LPAREN . $@9 general_expression T_RPAREN statement $@10 if_tail

    $default  reduce using rule 151 ($@9)

    $@9  go to state 167


State 103

  158 while_statement: T_WHILE T_LPAREN . $@12 general_expression T_RPAREN statement

    $default  reduce using rule 157 ($@12)

    $@12  go to state 168


State 104

  160 for_statement: T_FOR T_LPAREN . $@13 optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

    $default  reduce using rule 159 ($@13)

    $@13  go to state 169


State 105

  164 switch_statement: T_SWITCH T_LPAREN . $@14 general_expression T_RPAREN switch_tail

    $default  reduce using rule 163 ($@14)

    $@14  go to state 170


State 106

   60 general_expression: general_expression . T_COMMA general_expression
  161 optexpr: general_expression .

    T_COMMA  shift, and go to state 136

    $default  reduce using rule 161 (optexpr)


State 107

   58 variable: decltype . T_ID

    T_ID  shift, and go to state 171


State 108

  183 return_statement: T_RETURN optexpr . T_SEMI
  184                 | T_RETURN optexpr . error

    error   shift, and go to state 172
    T_SEMI  shift, and go to state 173


State 109

   49 expression: T_LENGTH T_LPAREN . general_expression T_RPAREN

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression          go to state 62
    variable            go to state 63
    general_expression  go to state 174
    assignment          go to state 65
    constant            go to state 66
    listexpression      go to state 67
    decltype            go to state 107


State 110

   50 expression: T_NEW T_LPAREN . general_expression T_RPAREN

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression          go to state 62
    variable            go to state 63
    general_expression  go to state 175
    assignment          go to state 65
    constant            go to state 66
    listexpression      go to state 67
    decltype            go to state 107


State 111

  185 io_statement: T_CIN T_INP . in_list T_SEMI
  186             | T_CIN T_INP . in_list error

    T_STATIC    shift, and go to state 40
    T_THIS      shift, and go to state 52
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    variable  go to state 176
    decltype  go to state 107
    in_list   go to state 177
    in_item   go to state 178


State 112

  187 io_statement: T_COUT T_OUT . out_list T_SEMI
  188             | T_COUT T_OUT . out_list error

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression          go to state 62
    variable            go to state 63
    general_expression  go to state 179
    assignment          go to state 65
    constant            go to state 66
    listexpression      go to state 67
    decltype            go to state 107
    out_list            go to state 180
    out_item            go to state 181


State 113

   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression
   43           | T_ADDOP expression .

    T_MULOP  shift, and go to state 129

    $default  reduce using rule 43 (expression)


State 114

   46 expression: variable . T_INCDEC
   47           | variable .
   48           | variable . T_LPAREN expression_list T_RPAREN
   55 variable: variable . T_LBRACK general_expression T_RBRACK
   56         | variable . T_DOT T_ID

    T_INCDEC  shift, and go to state 130
    T_LPAREN  shift, and go to state 131
    T_DOT     shift, and go to state 132
    T_LBRACK  shift, and go to state 134

    $default  reduce using rule 47 (expression)


State 115

   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression
   42           | T_NOTOP expression .

    $default  reduce using rule 42 (expression)


State 116

   45 expression: T_INCDEC variable .
   55 variable: variable . T_LBRACK general_expression T_RBRACK
   56         | variable . T_DOT T_ID

    T_DOT     shift, and go to state 132
    T_LBRACK  shift, and go to state 134

    $default  reduce using rule 45 (expression)


State 117

   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression
   44           | T_SIZEOP expression .

    $default  reduce using rule 44 (expression)


State 118

   53 expression: T_LPAREN standard_type . T_RPAREN

    T_RPAREN  shift, and go to state 182


State 119

   52 expression: T_LPAREN general_expression . T_RPAREN
   60 general_expression: general_expression . T_COMMA general_expression

    T_RPAREN  shift, and go to state 183
    T_COMMA   shift, and go to state 136


State 120

   60 general_expression: general_expression . T_COMMA general_expression
   64 expression_list: general_expression .

    T_COMMA  shift, and go to state 136

    $default  reduce using rule 64 (expression_list)


State 121

   70 listexpression: T_LBRACK expression_list . T_RBRACK

    T_RBRACK  shift, and go to state 184


State 122

  195 comp_statement: T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 185


State 123

   57 variable: T_LISTFUNC T_LPAREN . general_expression T_RPAREN

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression          go to state 62
    variable            go to state 63
    general_expression  go to state 186
    assignment          go to state 65
    constant            go to state 66
    listexpression      go to state 67
    decltype            go to state 107


State 124

   36 expression: expression T_OROP . expression

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression      go to state 187
    variable        go to state 114
    constant        go to state 66
    listexpression  go to state 67
    decltype        go to state 107


State 125

   37 expression: expression T_ANDOP . expression

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression      go to state 188
    variable        go to state 114
    constant        go to state 66
    listexpression  go to state 67
    decltype        go to state 107


State 126

   38 expression: expression T_EQUOP . expression

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression      go to state 189
    variable        go to state 114
    constant        go to state 66
    listexpression  go to state 67
    decltype        go to state 107


State 127

   39 expression: expression T_RELOP . expression

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression      go to state 190
    variable        go to state 114
    constant        go to state 66
    listexpression  go to state 67
    decltype        go to state 107


State 128

   40 expression: expression T_ADDOP . expression

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression      go to state 191
    variable        go to state 114
    constant        go to state 66
    listexpression  go to state 67
    decltype        go to state 107


State 129

   41 expression: expression T_MULOP . expression

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression      go to state 192
    variable        go to state 114
    constant        go to state 66
    listexpression  go to state 67
    decltype        go to state 107


State 130

   46 expression: variable T_INCDEC .

    $default  reduce using rule 46 (expression)


State 131

   48 expression: variable T_LPAREN . expression_list T_RPAREN

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    T_ID      reduce using rule 136 (decltype)
    $default  reduce using rule 65 (expression_list)

    expression          go to state 62
    variable            go to state 63
    general_expression  go to state 120
    assignment          go to state 65
    expression_list     go to state 193
    constant            go to state 66
    listexpression      go to state 67
    decltype            go to state 107


State 132

   56 variable: variable T_DOT . T_ID

    T_ID  shift, and go to state 194


State 133

   62 assignment: variable T_ASSIGN . assignment

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression      go to state 62
    variable        go to state 63
    assignment      go to state 195
    constant        go to state 66
    listexpression  go to state 67
    decltype        go to state 107


State 134

   55 variable: variable T_LBRACK . general_expression T_RBRACK

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression          go to state 62
    variable            go to state 63
    general_expression  go to state 196
    assignment          go to state 65
    constant            go to state 66
    listexpression      go to state 67
    decltype            go to state 107


State 135

  150 expression_statement: general_expression T_SEMI .

    $default  reduce using rule 150 (expression_statement)


State 136

   60 general_expression: general_expression T_COMMA . general_expression

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression          go to state 62
    variable            go to state 63
    general_expression  go to state 197
    assignment          go to state 65
    constant            go to state 66
    listexpression      go to state 67
    decltype            go to state 107


State 137

  197 main_function: error decl_statements T_RBRACE .

    $default  reduce using rule 197 (main_function)


State 138

   58 variable: decltype . T_ID
  133 declarations: declarations decltype . typename variabledefs T_SEMI

    T_CHAR    shift, and go to state 6
    T_INT     shift, and go to state 7
    T_FLOAT   shift, and go to state 8
    T_STRING  shift, and go to state 9
    T_VOID    shift, and go to state 11
    T_ID      shift, and go to state 140

    typename       go to state 198
    standard_type  go to state 20


State 139

  129 decl_statements: declarations statements .
  137 statements: statements . statement

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    T_ID      reduce using rule 136 (decltype)
    $default  reduce using rule 129 (decl_statements)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decltype              go to state 107
    statement             go to state 142
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80


State 140

   13 typename: T_ID .
   58 variable: decltype T_ID .

    T_LIST    reduce using rule 13 (typename)
    T_ID      reduce using rule 13 (typename)
    $default  reduce using rule 58 (variable)


State 141

  134 declarations: decltype typename . variabledefs T_SEMI

    T_LIST  shift, and go to state 87

    $default  reduce using rule 20 (listspec)

    listspec      go to state 199
    variabledefs  go to state 200
    variabledef   go to state 201


State 142

  137 statements: statements statement .

    $default  reduce using rule 137 (statements)


State 143

   11 typedef_declaration: T_TYPEDEF typename listspec . T_ID $@1 dims T_SEMI

    T_ID  shift, and go to state 202


State 144

   74 class_declaration: T_CLASS T_ID $@5 . class_body T_SEMI

    T_COLON  shift, and go to state 203

    $default  reduce using rule 77 (parent)

    class_body  go to state 204
    parent      go to state 205


State 145

  110 union_declaration: T_UNION T_ID $@8 . union_body T_SEMI

    T_LBRACE  shift, and go to state 206

    union_body  go to state 207


State 146

   27 enum_declaration: T_ENUM T_ID $@2 . enum_body $@3 T_SEMI

    T_LBRACE  shift, and go to state 208

    enum_body  go to state 209


State 147

  198 main_function: T_LBRACE decl_statements error .

    $default  reduce using rule 198 (main_function)


State 148

  200 main_header: T_INP T_MAIN error . T_RPAREN

    T_RPAREN  shift, and go to state 210


State 149

  199 main_header: T_INP T_MAIN T_LPAREN . T_RPAREN
  201            | T_INP T_MAIN T_LPAREN . error

    error     shift, and go to state 211
    T_RPAREN  shift, and go to state 212


State 150

   91 variabledef: listspec T_ID . dims
  103 func_header_start: typename listspec T_ID .
  123 func_class: T_ID . T_METH

    T_METH  shift, and go to state 213

    T_LPAREN  reduce using rule 103 (func_header_start)
    $default  reduce using rule 22 (dims)

    dims  go to state 214


State 151

  122 class_func_header_start: typename listspec func_class . T_ID

    T_ID  shift, and go to state 215


State 152

   32 initializer: T_ASSIGN . init_value

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 216
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    init_value      go to state 217
    expression      go to state 218
    variable        go to state 114
    constant        go to state 66
    listexpression  go to state 67
    decltype        go to state 107


State 153

  114 init_variabledef: variabledef initializer .

    $default  reduce using rule 114 (init_variabledef)


State 154

  111 global_var_declaration: typename init_variabledefs T_SEMI .

    $default  reduce using rule 111 (global_var_declaration)


State 155

  112 init_variabledefs: init_variabledefs T_COMMA . init_variabledef

    T_LIST  shift, and go to state 87

    $default  reduce using rule 20 (listspec)

    listspec          go to state 199
    variabledef       go to state 89
    init_variabledef  go to state 219


State 156

  108 nopar_func_header: func_header_start T_LPAREN T_RPAREN .

    $default  reduce using rule 108 (nopar_func_header)


State 157

  105 parameter_types: typename . pass_list_dims
  125 parameter_list: typename . pass_variabledef

    T_LIST   shift, and go to state 87
    T_REFER  shift, and go to state 220

    $default  reduce using rule 20 (listspec)

    listspec          go to state 221
    variabledef       go to state 222
    pass_list_dims    go to state 223
    pass_variabledef  go to state 224


State 158

  102 short_par_func_header: func_header_start T_LPAREN parameter_types . T_RPAREN
  104 parameter_types: parameter_types . T_COMMA typename pass_list_dims

    T_RPAREN  shift, and go to state 225
    T_COMMA   shift, and go to state 226


State 159

  121 full_par_func_header: func_header_start T_LPAREN parameter_list . T_RPAREN
  124 parameter_list: parameter_list . T_COMMA typename pass_variabledef

    T_RPAREN  shift, and go to state 227
    T_COMMA   shift, and go to state 228


State 160

  119 full_func_declaration: nopar_func_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 229


State 161

  117 full_func_declaration: full_par_func_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 230


State 162

  128 nopar_class_func_header: class_func_header_start T_LPAREN T_RPAREN .

    $default  reduce using rule 128 (nopar_class_func_header)


State 163

  125 parameter_list: typename . pass_variabledef

    T_LIST   shift, and go to state 87
    T_REFER  shift, and go to state 231

    $default  reduce using rule 20 (listspec)

    listspec          go to state 199
    variabledef       go to state 222
    pass_variabledef  go to state 224


State 164

  120 full_par_func_header: class_func_header_start T_LPAREN parameter_list . T_RPAREN
  124 parameter_list: parameter_list . T_COMMA typename pass_variabledef

    T_RPAREN  shift, and go to state 232
    T_COMMA   shift, and go to state 228


State 165

  118 full_func_declaration: nopar_class_func_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 233


State 166

  196 main_function: main_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 234


State 167

  153 if_statement: T_IF T_LPAREN $@9 . general_expression T_RPAREN statement $@10 if_tail

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression          go to state 62
    variable            go to state 63
    general_expression  go to state 235
    assignment          go to state 65
    constant            go to state 66
    listexpression      go to state 67
    decltype            go to state 107


State 168

  158 while_statement: T_WHILE T_LPAREN $@12 . general_expression T_RPAREN statement

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression          go to state 62
    variable            go to state 63
    general_expression  go to state 236
    assignment          go to state 65
    constant            go to state 66
    listexpression      go to state 67
    decltype            go to state 107


State 169

  160 for_statement: T_FOR T_LPAREN $@13 . optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    T_SEMI    reduce using rule 162 (optexpr)
    $default  reduce using rule 136 (decltype)

    expression          go to state 62
    variable            go to state 63
    general_expression  go to state 106
    assignment          go to state 65
    constant            go to state 66
    listexpression      go to state 67
    decltype            go to state 107
    optexpr             go to state 237


State 170

  164 switch_statement: T_SWITCH T_LPAREN $@14 . general_expression T_RPAREN switch_tail

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression          go to state 62
    variable            go to state 63
    general_expression  go to state 238
    assignment          go to state 65
    constant            go to state 66
    listexpression      go to state 67
    decltype            go to state 107


State 171

   58 variable: decltype T_ID .

    $default  reduce using rule 58 (variable)


State 172

  184 return_statement: T_RETURN optexpr error .

    $default  reduce using rule 184 (return_statement)


State 173

  183 return_statement: T_RETURN optexpr T_SEMI .

    $default  reduce using rule 183 (return_statement)


State 174

   49 expression: T_LENGTH T_LPAREN general_expression . T_RPAREN
   60 general_expression: general_expression . T_COMMA general_expression

    T_RPAREN  shift, and go to state 239
    T_COMMA   shift, and go to state 136


State 175

   50 expression: T_NEW T_LPAREN general_expression . T_RPAREN
   60 general_expression: general_expression . T_COMMA general_expression

    T_RPAREN  shift, and go to state 240
    T_COMMA   shift, and go to state 136


State 176

   55 variable: variable . T_LBRACK general_expression T_RBRACK
   56         | variable . T_DOT T_ID
  191 in_item: variable .

    T_DOT     shift, and go to state 132
    T_LBRACK  shift, and go to state 134

    $default  reduce using rule 191 (in_item)


State 177

  185 io_statement: T_CIN T_INP in_list . T_SEMI
  186             | T_CIN T_INP in_list . error
  189 in_list: in_list . T_INP in_item

    error   shift, and go to state 241
    T_SEMI  shift, and go to state 242
    T_INP   shift, and go to state 243


State 178

  190 in_list: in_item .

    $default  reduce using rule 190 (in_list)


State 179

   60 general_expression: general_expression . T_COMMA general_expression
  194 out_item: general_expression .

    T_COMMA  shift, and go to state 136

    $default  reduce using rule 194 (out_item)


State 180

  187 io_statement: T_COUT T_OUT out_list . T_SEMI
  188             | T_COUT T_OUT out_list . error
  192 out_list: out_list . T_OUT out_item

    error   shift, and go to state 244
    T_SEMI  shift, and go to state 245
    T_OUT   shift, and go to state 246


State 181

  193 out_list: out_item .

    $default  reduce using rule 193 (out_list)


State 182

   53 expression: T_LPAREN standard_type T_RPAREN .

    $default  reduce using rule 53 (expression)


State 183

   52 expression: T_LPAREN general_expression T_RPAREN .

    $default  reduce using rule 52 (expression)


State 184

   70 listexpression: T_LBRACK expression_list T_RBRACK .

    $default  reduce using rule 70 (listexpression)


State 185

  195 comp_statement: T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 195 (comp_statement)


State 186

   57 variable: T_LISTFUNC T_LPAREN general_expression . T_RPAREN
   60 general_expression: general_expression . T_COMMA general_expression

    T_RPAREN  shift, and go to state 247
    T_COMMA   shift, and go to state 136


State 187

   36 expression: expression . T_OROP expression
   36           | expression T_OROP expression .
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression

    T_ANDOP  shift, and go to state 125
    T_EQUOP  shift, and go to state 126
    T_RELOP  shift, and go to state 127
    T_ADDOP  shift, and go to state 128
    T_MULOP  shift, and go to state 129

    $default  reduce using rule 36 (expression)


State 188

   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   37           | expression T_ANDOP expression .
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression

    T_EQUOP  shift, and go to state 126
    T_RELOP  shift, and go to state 127
    T_ADDOP  shift, and go to state 128
    T_MULOP  shift, and go to state 129

    $default  reduce using rule 37 (expression)


State 189

   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   38           | expression T_EQUOP expression .
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression

    T_RELOP  shift, and go to state 127
    T_ADDOP  shift, and go to state 128
    T_MULOP  shift, and go to state 129

    $default  reduce using rule 38 (expression)


State 190

   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   39           | expression T_RELOP expression .
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression

    T_ADDOP  shift, and go to state 128
    T_MULOP  shift, and go to state 129

    $default  reduce using rule 39 (expression)


State 191

   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   40           | expression T_ADDOP expression .
   41           | expression . T_MULOP expression

    T_MULOP  shift, and go to state 129

    $default  reduce using rule 40 (expression)


State 192

   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression
   41           | expression T_MULOP expression .

    $default  reduce using rule 41 (expression)


State 193

   48 expression: variable T_LPAREN expression_list . T_RPAREN

    T_RPAREN  shift, and go to state 248


State 194

   56 variable: variable T_DOT T_ID .

    $default  reduce using rule 56 (variable)


State 195

   62 assignment: variable T_ASSIGN assignment .

    $default  reduce using rule 62 (assignment)


State 196

   55 variable: variable T_LBRACK general_expression . T_RBRACK
   60 general_expression: general_expression . T_COMMA general_expression

    T_COMMA   shift, and go to state 136
    T_RBRACK  shift, and go to state 249


State 197

   60 general_expression: general_expression . T_COMMA general_expression
   60                   | general_expression T_COMMA general_expression .

    $default  reduce using rule 60 (general_expression)


State 198

  133 declarations: declarations decltype typename . variabledefs T_SEMI

    T_LIST  shift, and go to state 87

    $default  reduce using rule 20 (listspec)

    listspec      go to state 199
    variabledefs  go to state 250
    variabledef   go to state 201


State 199

   91 variabledef: listspec . T_ID dims

    T_ID  shift, and go to state 251


State 200

   89 variabledefs: variabledefs . T_COMMA variabledef
  134 declarations: decltype typename variabledefs . T_SEMI

    T_SEMI   shift, and go to state 252
    T_COMMA  shift, and go to state 253


State 201

   90 variabledefs: variabledef .

    $default  reduce using rule 90 (variabledefs)


State 202

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID . $@1 dims T_SEMI

    $default  reduce using rule 10 ($@1)

    $@1  go to state 254


State 203

   76 parent: T_COLON . T_ID

    T_ID  shift, and go to state 255


State 204

   74 class_declaration: T_CLASS T_ID $@5 class_body . T_SEMI

    T_SEMI  shift, and go to state 256


State 205

   75 class_body: parent . T_LBRACE members_methods T_RBRACE

    T_LBRACE  shift, and go to state 257


State 206

   95 union_body: T_LBRACE . fields T_RBRACE

    T_CHAR    shift, and go to state 6
    T_INT     shift, and go to state 7
    T_FLOAT   shift, and go to state 8
    T_STRING  shift, and go to state 9
    T_VOID    shift, and go to state 11
    T_ID      shift, and go to state 16

    typename         go to state 258
    standard_type    go to state 20
    var_declaration  go to state 259
    fields           go to state 260
    field            go to state 261


State 207

  110 union_declaration: T_UNION T_ID $@8 union_body . T_SEMI

    T_SEMI  shift, and go to state 262


State 208

   28 enum_body: T_LBRACE . id_list T_RBRACE

    T_ID  shift, and go to state 263

    id_list  go to state 264


State 209

   27 enum_declaration: T_ENUM T_ID $@2 enum_body . $@3 T_SEMI

    $default  reduce using rule 26 ($@3)

    $@3  go to state 265


State 210

  200 main_header: T_INP T_MAIN error T_RPAREN .

    $default  reduce using rule 200 (main_header)


State 211

  201 main_header: T_INP T_MAIN T_LPAREN error .

    $default  reduce using rule 201 (main_header)


State 212

  199 main_header: T_INP T_MAIN T_LPAREN T_RPAREN .

    $default  reduce using rule 199 (main_header)


State 213

  123 func_class: T_ID T_METH .

    $default  reduce using rule 123 (func_class)


State 214

   21 dims: dims . dim
   91 variabledef: listspec T_ID dims .

    T_LBRACK  shift, and go to state 266

    $default  reduce using rule 91 (variabledef)

    dim  go to state 267


State 215

  122 class_func_header_start: typename listspec func_class T_ID .

    $default  reduce using rule 122 (class_func_header_start)


State 216

   35 init_value: T_LBRACE . init_values T_RBRACE

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 216
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    init_value      go to state 268
    expression      go to state 218
    variable        go to state 114
    constant        go to state 66
    listexpression  go to state 67
    init_values     go to state 269
    decltype        go to state 107


State 217

   32 initializer: T_ASSIGN init_value .

    $default  reduce using rule 32 (initializer)


State 218

   34 init_value: expression .
   36 expression: expression . T_OROP expression
   37           | expression . T_ANDOP expression
   38           | expression . T_EQUOP expression
   39           | expression . T_RELOP expression
   40           | expression . T_ADDOP expression
   41           | expression . T_MULOP expression

    T_OROP   shift, and go to state 124
    T_ANDOP  shift, and go to state 125
    T_EQUOP  shift, and go to state 126
    T_RELOP  shift, and go to state 127
    T_ADDOP  shift, and go to state 128
    T_MULOP  shift, and go to state 129

    $default  reduce using rule 34 (init_value)


State 219

  112 init_variabledefs: init_variabledefs T_COMMA init_variabledef .

    $default  reduce using rule 112 (init_variabledefs)


State 220

  106 pass_list_dims: T_REFER .
  127 pass_variabledef: T_REFER . T_ID

    T_ID  shift, and go to state 270

    $default  reduce using rule 106 (pass_list_dims)


State 221

   91 variabledef: listspec . T_ID dims
  107 pass_list_dims: listspec . dims

    T_ID  shift, and go to state 251

    $default  reduce using rule 22 (dims)

    dims  go to state 271


State 222

  126 pass_variabledef: variabledef .

    $default  reduce using rule 126 (pass_variabledef)


State 223

  105 parameter_types: typename pass_list_dims .

    $default  reduce using rule 105 (parameter_types)


State 224

  125 parameter_list: typename pass_variabledef .

    $default  reduce using rule 125 (parameter_list)


State 225

  102 short_par_func_header: func_header_start T_LPAREN parameter_types T_RPAREN .

    $default  reduce using rule 102 (short_par_func_header)


State 226

  104 parameter_types: parameter_types T_COMMA . typename pass_list_dims

    T_CHAR    shift, and go to state 6
    T_INT     shift, and go to state 7
    T_FLOAT   shift, and go to state 8
    T_STRING  shift, and go to state 9
    T_VOID    shift, and go to state 11
    T_ID      shift, and go to state 16

    typename       go to state 272
    standard_type  go to state 20


State 227

  121 full_par_func_header: func_header_start T_LPAREN parameter_list T_RPAREN .

    $default  reduce using rule 121 (full_par_func_header)


State 228

  124 parameter_list: parameter_list T_COMMA . typename pass_variabledef

    T_CHAR    shift, and go to state 6
    T_INT     shift, and go to state 7
    T_FLOAT   shift, and go to state 8
    T_STRING  shift, and go to state 9
    T_VOID    shift, and go to state 11
    T_ID      shift, and go to state 16

    typename       go to state 273
    standard_type  go to state 20


State 229

  119 full_func_declaration: nopar_func_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 119 (full_func_declaration)


State 230

  117 full_func_declaration: full_par_func_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 117 (full_func_declaration)


State 231

  127 pass_variabledef: T_REFER . T_ID

    T_ID  shift, and go to state 270


State 232

  120 full_par_func_header: class_func_header_start T_LPAREN parameter_list T_RPAREN .

    $default  reduce using rule 120 (full_par_func_header)


State 233

  118 full_func_declaration: nopar_class_func_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 118 (full_func_declaration)


State 234

  196 main_function: main_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 196 (main_function)


State 235

   60 general_expression: general_expression . T_COMMA general_expression
  153 if_statement: T_IF T_LPAREN $@9 general_expression . T_RPAREN statement $@10 if_tail

    T_RPAREN  shift, and go to state 274
    T_COMMA   shift, and go to state 136


State 236

   60 general_expression: general_expression . T_COMMA general_expression
  158 while_statement: T_WHILE T_LPAREN $@12 general_expression . T_RPAREN statement

    T_RPAREN  shift, and go to state 275
    T_COMMA   shift, and go to state 136


State 237

  160 for_statement: T_FOR T_LPAREN $@13 optexpr . T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

    T_SEMI  shift, and go to state 276


State 238

   60 general_expression: general_expression . T_COMMA general_expression
  164 switch_statement: T_SWITCH T_LPAREN $@14 general_expression . T_RPAREN switch_tail

    T_RPAREN  shift, and go to state 277
    T_COMMA   shift, and go to state 136


State 239

   49 expression: T_LENGTH T_LPAREN general_expression T_RPAREN .

    $default  reduce using rule 49 (expression)


State 240

   50 expression: T_NEW T_LPAREN general_expression T_RPAREN .

    $default  reduce using rule 50 (expression)


State 241

  186 io_statement: T_CIN T_INP in_list error .

    $default  reduce using rule 186 (io_statement)


State 242

  185 io_statement: T_CIN T_INP in_list T_SEMI .

    $default  reduce using rule 185 (io_statement)


State 243

  189 in_list: in_list T_INP . in_item

    T_STATIC    shift, and go to state 40
    T_THIS      shift, and go to state 52
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    variable  go to state 176
    decltype  go to state 107
    in_item   go to state 278


State 244

  188 io_statement: T_COUT T_OUT out_list error .

    $default  reduce using rule 188 (io_statement)


State 245

  187 io_statement: T_COUT T_OUT out_list T_SEMI .

    $default  reduce using rule 187 (io_statement)


State 246

  192 out_list: out_list T_OUT . out_item

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression          go to state 62
    variable            go to state 63
    general_expression  go to state 179
    assignment          go to state 65
    constant            go to state 66
    listexpression      go to state 67
    decltype            go to state 107
    out_item            go to state 279


State 247

   57 variable: T_LISTFUNC T_LPAREN general_expression T_RPAREN .

    $default  reduce using rule 57 (variable)


State 248

   48 expression: variable T_LPAREN expression_list T_RPAREN .

    $default  reduce using rule 48 (expression)


State 249

   55 variable: variable T_LBRACK general_expression T_RBRACK .

    $default  reduce using rule 55 (variable)


State 250

   89 variabledefs: variabledefs . T_COMMA variabledef
  133 declarations: declarations decltype typename variabledefs . T_SEMI

    T_SEMI   shift, and go to state 280
    T_COMMA  shift, and go to state 253


State 251

   91 variabledef: listspec T_ID . dims

    $default  reduce using rule 22 (dims)

    dims  go to state 214


State 252

  134 declarations: decltype typename variabledefs T_SEMI .

    $default  reduce using rule 134 (declarations)


State 253

   89 variabledefs: variabledefs T_COMMA . variabledef

    T_LIST  shift, and go to state 87

    $default  reduce using rule 20 (listspec)

    listspec     go to state 199
    variabledef  go to state 281


State 254

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID $@1 . dims T_SEMI

    $default  reduce using rule 22 (dims)

    dims  go to state 282


State 255

   76 parent: T_COLON T_ID .

    $default  reduce using rule 76 (parent)


State 256

   74 class_declaration: T_CLASS T_ID $@5 class_body T_SEMI .

    $default  reduce using rule 74 (class_declaration)


State 257

   75 class_body: parent T_LBRACE . members_methods T_RBRACE

    T_PRIVATE    shift, and go to state 283
    T_PROTECTED  shift, and go to state 284
    T_PUBLIC     shift, and go to state 285

    $default  reduce using rule 83 (access)

    members_methods  go to state 286
    access           go to state 287


State 258

   88 var_declaration: typename . variabledefs T_SEMI

    T_LIST  shift, and go to state 87

    $default  reduce using rule 20 (listspec)

    listspec      go to state 199
    variabledefs  go to state 288
    variabledef   go to state 201


State 259

   98 field: var_declaration .

    $default  reduce using rule 98 (field)


State 260

   95 union_body: T_LBRACE fields . T_RBRACE
   96 fields: fields . field

    T_CHAR    shift, and go to state 6
    T_INT     shift, and go to state 7
    T_FLOAT   shift, and go to state 8
    T_STRING  shift, and go to state 9
    T_VOID    shift, and go to state 11
    T_RBRACE  shift, and go to state 289
    T_ID      shift, and go to state 16

    typename         go to state 258
    standard_type    go to state 20
    var_declaration  go to state 259
    field            go to state 290


State 261

   97 fields: field .

    $default  reduce using rule 97 (fields)


State 262

  110 union_declaration: T_UNION T_ID $@8 union_body T_SEMI .

    $default  reduce using rule 110 (union_declaration)


State 263

   31 id_list: T_ID . $@4 initializer

    $default  reduce using rule 30 ($@4)

    $@4  go to state 291


State 264

   28 enum_body: T_LBRACE id_list . T_RBRACE
   29 id_list: id_list . T_COMMA T_ID initializer

    T_COMMA   shift, and go to state 292
    T_RBRACE  shift, and go to state 293


State 265

   27 enum_declaration: T_ENUM T_ID $@2 enum_body $@3 . T_SEMI

    T_SEMI  shift, and go to state 294


State 266

   23 dim: T_LBRACK . T_ICONST T_RBRACK
   24    | T_LBRACK . T_RBRACK

    T_ICONST  shift, and go to state 295
    T_RBRACK  shift, and go to state 296


State 267

   21 dims: dims dim .

    $default  reduce using rule 21 (dims)


State 268

   72 init_values: init_value .

    $default  reduce using rule 72 (init_values)


State 269

   35 init_value: T_LBRACE init_values . T_RBRACE
   71 init_values: init_values . T_COMMA init_value

    T_COMMA   shift, and go to state 297
    T_RBRACE  shift, and go to state 298


State 270

  127 pass_variabledef: T_REFER T_ID .

    $default  reduce using rule 127 (pass_variabledef)


State 271

   21 dims: dims . dim
  107 pass_list_dims: listspec dims .

    T_LBRACK  shift, and go to state 266

    $default  reduce using rule 107 (pass_list_dims)

    dim  go to state 267


State 272

  104 parameter_types: parameter_types T_COMMA typename . pass_list_dims

    T_LIST   shift, and go to state 87
    T_REFER  shift, and go to state 299

    $default  reduce using rule 20 (listspec)

    listspec        go to state 300
    pass_list_dims  go to state 301


State 273

  124 parameter_list: parameter_list T_COMMA typename . pass_variabledef

    T_LIST   shift, and go to state 87
    T_REFER  shift, and go to state 231

    $default  reduce using rule 20 (listspec)

    listspec          go to state 199
    variabledef       go to state 222
    pass_variabledef  go to state 302


State 274

  153 if_statement: T_IF T_LPAREN $@9 general_expression T_RPAREN . statement $@10 if_tail

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decltype              go to state 107
    statement             go to state 303
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80


State 275

  158 while_statement: T_WHILE T_LPAREN $@12 general_expression T_RPAREN . statement

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decltype              go to state 107
    statement             go to state 304
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80


State 276

  160 for_statement: T_FOR T_LPAREN $@13 optexpr T_SEMI . optexpr T_SEMI optexpr T_RPAREN statement

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    T_SEMI    reduce using rule 162 (optexpr)
    $default  reduce using rule 136 (decltype)

    expression          go to state 62
    variable            go to state 63
    general_expression  go to state 106
    assignment          go to state 65
    constant            go to state 66
    listexpression      go to state 67
    decltype            go to state 107
    optexpr             go to state 305


State 277

  164 switch_statement: T_SWITCH T_LPAREN $@14 general_expression T_RPAREN . switch_tail

    error     shift, and go to state 306
    T_CASE    shift, and go to state 307
    T_LBRACE  shift, and go to state 308

    switch_tail           go to state 309
    single_casestatement  go to state 310


State 278

  189 in_list: in_list T_INP in_item .

    $default  reduce using rule 189 (in_list)


State 279

  192 out_list: out_list T_OUT out_item .

    $default  reduce using rule 192 (out_list)


State 280

  133 declarations: declarations decltype typename variabledefs T_SEMI .

    $default  reduce using rule 133 (declarations)


State 281

   89 variabledefs: variabledefs T_COMMA variabledef .

    $default  reduce using rule 89 (variabledefs)


State 282

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID $@1 dims . T_SEMI
   21 dims: dims . dim

    T_SEMI    shift, and go to state 311
    T_LBRACK  shift, and go to state 266

    dim  go to state 267


State 283

   80 access: T_PRIVATE . T_COLON

    T_COLON  shift, and go to state 312


State 284

   81 access: T_PROTECTED . T_COLON

    T_COLON  shift, and go to state 313


State 285

   82 access: T_PUBLIC . T_COLON

    T_COLON  shift, and go to state 314


State 286

   75 class_body: parent T_LBRACE members_methods . T_RBRACE
   78 members_methods: members_methods . access member_or_method

    T_PRIVATE    shift, and go to state 283
    T_PROTECTED  shift, and go to state 284
    T_PUBLIC     shift, and go to state 285
    T_RBRACE     shift, and go to state 315

    $default  reduce using rule 83 (access)

    access  go to state 316


State 287

   79 members_methods: access . member_or_method

    T_CHAR    shift, and go to state 6
    T_INT     shift, and go to state 7
    T_FLOAT   shift, and go to state 8
    T_STRING  shift, and go to state 9
    T_VOID    shift, and go to state 11
    T_UNION   shift, and go to state 317
    T_ID      shift, and go to state 16

    typename                go to state 318
    standard_type           go to state 20
    member_or_method        go to state 319
    member                  go to state 320
    var_declaration         go to state 321
    anonymous_union         go to state 322
    method                  go to state 323
    short_func_declaration  go to state 324
    short_par_func_header   go to state 24
    func_header_start       go to state 325
    nopar_func_header       go to state 326


State 288

   88 var_declaration: typename variabledefs . T_SEMI
   89 variabledefs: variabledefs . T_COMMA variabledef

    T_SEMI   shift, and go to state 327
    T_COMMA  shift, and go to state 253


State 289

   95 union_body: T_LBRACE fields T_RBRACE .

    $default  reduce using rule 95 (union_body)


State 290

   96 fields: fields field .

    $default  reduce using rule 96 (fields)


State 291

   31 id_list: T_ID $@4 . initializer

    T_ASSIGN  shift, and go to state 152

    $default  reduce using rule 33 (initializer)

    initializer  go to state 328


State 292

   29 id_list: id_list T_COMMA . T_ID initializer

    T_ID  shift, and go to state 329


State 293

   28 enum_body: T_LBRACE id_list T_RBRACE .

    $default  reduce using rule 28 (enum_body)


State 294

   27 enum_declaration: T_ENUM T_ID $@2 enum_body $@3 T_SEMI .

    $default  reduce using rule 27 (enum_declaration)


State 295

   23 dim: T_LBRACK T_ICONST . T_RBRACK

    T_RBRACK  shift, and go to state 330


State 296

   24 dim: T_LBRACK T_RBRACK .

    $default  reduce using rule 24 (dim)


State 297

   71 init_values: init_values T_COMMA . init_value

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 216
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    init_value      go to state 331
    expression      go to state 218
    variable        go to state 114
    constant        go to state 66
    listexpression  go to state 67
    decltype        go to state 107


State 298

   35 init_value: T_LBRACE init_values T_RBRACE .

    $default  reduce using rule 35 (init_value)


State 299

  106 pass_list_dims: T_REFER .

    $default  reduce using rule 106 (pass_list_dims)


State 300

  107 pass_list_dims: listspec . dims

    $default  reduce using rule 22 (dims)

    dims  go to state 271


State 301

  104 parameter_types: parameter_types T_COMMA typename pass_list_dims .

    $default  reduce using rule 104 (parameter_types)


State 302

  124 parameter_list: parameter_list T_COMMA typename pass_variabledef .

    $default  reduce using rule 124 (parameter_list)


State 303

  153 if_statement: T_IF T_LPAREN $@9 general_expression T_RPAREN statement . $@10 if_tail

    $default  reduce using rule 152 ($@10)

    $@10  go to state 332


State 304

  158 while_statement: T_WHILE T_LPAREN $@12 general_expression T_RPAREN statement .

    $default  reduce using rule 158 (while_statement)


State 305

  160 for_statement: T_FOR T_LPAREN $@13 optexpr T_SEMI optexpr . T_SEMI optexpr T_RPAREN statement

    T_SEMI  shift, and go to state 333


State 306

  166 switch_tail: error . decl_cases T_RBRACE

    T_STATIC   shift, and go to state 40
    T_CASE     shift, and go to state 334
    T_DEFAULT  shift, and go to state 335

    T_RBRACE  reduce using rule 172 (decl_cases)
    $default  reduce using rule 136 (decltype)

    declarations    go to state 336
    decltype        go to state 337
    decl_cases      go to state 338
    casestatements  go to state 339
    casestatement   go to state 340


State 307

  180 single_casestatement: T_CASE . constant T_COLON single_casestatement
  182                     | T_CASE . constant T_COLON $@17 statement

    T_ICONST  shift, and go to state 36
    T_FCONST  shift, and go to state 37
    T_CCONST  shift, and go to state 38
    T_SCONST  shift, and go to state 39

    constant  go to state 341


State 308

  165 switch_tail: T_LBRACE . decl_cases T_RBRACE
  167            | T_LBRACE . decl_cases error

    T_STATIC   shift, and go to state 40
    T_CASE     shift, and go to state 334
    T_DEFAULT  shift, and go to state 335

    error     reduce using rule 172 (decl_cases)
    T_RBRACE  reduce using rule 172 (decl_cases)
    $default  reduce using rule 136 (decltype)

    declarations    go to state 336
    decltype        go to state 337
    decl_cases      go to state 342
    casestatements  go to state 339
    casestatement   go to state 340


State 309

  164 switch_statement: T_SWITCH T_LPAREN $@14 general_expression T_RPAREN switch_tail .

    $default  reduce using rule 164 (switch_statement)


State 310

  168 switch_tail: single_casestatement .

    $default  reduce using rule 168 (switch_tail)


State 311

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID $@1 dims T_SEMI .

    $default  reduce using rule 11 (typedef_declaration)


State 312

   80 access: T_PRIVATE T_COLON .

    $default  reduce using rule 80 (access)


State 313

   81 access: T_PROTECTED T_COLON .

    $default  reduce using rule 81 (access)


State 314

   82 access: T_PUBLIC T_COLON .

    $default  reduce using rule 82 (access)


State 315

   75 class_body: parent T_LBRACE members_methods T_RBRACE .

    $default  reduce using rule 75 (class_body)


State 316

   78 members_methods: members_methods access . member_or_method

    T_CHAR    shift, and go to state 6
    T_INT     shift, and go to state 7
    T_FLOAT   shift, and go to state 8
    T_STRING  shift, and go to state 9
    T_VOID    shift, and go to state 11
    T_UNION   shift, and go to state 317
    T_ID      shift, and go to state 16

    typename                go to state 318
    standard_type           go to state 20
    member_or_method        go to state 343
    member                  go to state 320
    var_declaration         go to state 321
    anonymous_union         go to state 322
    method                  go to state 323
    short_func_declaration  go to state 324
    short_par_func_header   go to state 24
    func_header_start       go to state 325
    nopar_func_header       go to state 326


State 317

   94 anonymous_union: T_UNION . $@6 union_body $@7 T_SEMI

    $default  reduce using rule 92 ($@6)

    $@6  go to state 344


State 318

   88 var_declaration: typename . variabledefs T_SEMI
  103 func_header_start: typename . listspec T_ID

    T_LIST  shift, and go to state 87

    $default  reduce using rule 20 (listspec)

    listspec      go to state 345
    variabledefs  go to state 288
    variabledef   go to state 201


State 319

   79 members_methods: access member_or_method .

    $default  reduce using rule 79 (members_methods)


State 320

   84 member_or_method: member .

    $default  reduce using rule 84 (member_or_method)


State 321

   86 member: var_declaration .

    $default  reduce using rule 86 (member)


State 322

   87 member: anonymous_union .

    $default  reduce using rule 87 (member)


State 323

   85 member_or_method: method .

    $default  reduce using rule 85 (member_or_method)


State 324

   99 method: short_func_declaration .

    $default  reduce using rule 99 (method)


State 325

  102 short_par_func_header: func_header_start . T_LPAREN parameter_types T_RPAREN
  108 nopar_func_header: func_header_start . T_LPAREN T_RPAREN

    T_LPAREN  shift, and go to state 346


State 326

  101 short_func_declaration: nopar_func_header . T_SEMI

    T_SEMI  shift, and go to state 94


State 327

   88 var_declaration: typename variabledefs T_SEMI .

    $default  reduce using rule 88 (var_declaration)


State 328

   31 id_list: T_ID $@4 initializer .

    $default  reduce using rule 31 (id_list)


State 329

   29 id_list: id_list T_COMMA T_ID . initializer

    T_ASSIGN  shift, and go to state 152

    $default  reduce using rule 33 (initializer)

    initializer  go to state 347


State 330

   23 dim: T_LBRACK T_ICONST T_RBRACK .

    $default  reduce using rule 23 (dim)


State 331

   71 init_values: init_values T_COMMA init_value .

    $default  reduce using rule 71 (init_values)


State 332

  153 if_statement: T_IF T_LPAREN $@9 general_expression T_RPAREN statement $@10 . if_tail

    T_ELSE  shift, and go to state 348

    $default  reduce using rule 156 (if_tail)

    if_tail  go to state 349


State 333

  160 for_statement: T_FOR T_LPAREN $@13 optexpr T_SEMI optexpr T_SEMI . optexpr T_RPAREN statement

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_LBRACK    shift, and go to state 59
    T_LISTFUNC  shift, and go to state 61

    T_RPAREN  reduce using rule 162 (optexpr)
    $default  reduce using rule 136 (decltype)

    expression          go to state 62
    variable            go to state 63
    general_expression  go to state 106
    assignment          go to state 65
    constant            go to state 66
    listexpression      go to state 67
    decltype            go to state 107
    optexpr             go to state 350


State 334

  175 casestatement: T_CASE . constant T_COLON casestatement
  177              | T_CASE . constant T_COLON $@15 statements

    T_ICONST  shift, and go to state 36
    T_FCONST  shift, and go to state 37
    T_CCONST  shift, and go to state 38
    T_SCONST  shift, and go to state 39

    constant  go to state 351


State 335

  179 casestatement: T_DEFAULT . T_COLON $@16 statements

    T_COLON  shift, and go to state 352


State 336

  133 declarations: declarations . decltype typename variabledefs T_SEMI
  169 decl_cases: declarations . casestatements
  170           | declarations .

    T_STATIC   shift, and go to state 40
    T_CASE     shift, and go to state 334
    T_DEFAULT  shift, and go to state 335

    error     reduce using rule 170 (decl_cases)
    T_RBRACE  reduce using rule 170 (decl_cases)
    $default  reduce using rule 136 (decltype)

    decltype        go to state 353
    casestatements  go to state 354
    casestatement   go to state 340


State 337

  134 declarations: decltype . typename variabledefs T_SEMI

    T_CHAR    shift, and go to state 6
    T_INT     shift, and go to state 7
    T_FLOAT   shift, and go to state 8
    T_STRING  shift, and go to state 9
    T_VOID    shift, and go to state 11
    T_ID      shift, and go to state 16

    typename       go to state 141
    standard_type  go to state 20


State 338

  166 switch_tail: error decl_cases . T_RBRACE

    T_RBRACE  shift, and go to state 355


State 339

  171 decl_cases: casestatements .
  173 casestatements: casestatements . casestatement

    T_CASE     shift, and go to state 334
    T_DEFAULT  shift, and go to state 335

    $default  reduce using rule 171 (decl_cases)

    casestatement  go to state 356


State 340

  174 casestatements: casestatement .

    $default  reduce using rule 174 (casestatements)


State 341

  180 single_casestatement: T_CASE constant . T_COLON single_casestatement
  182                     | T_CASE constant . T_COLON $@17 statement

    T_COLON  shift, and go to state 357


State 342

  165 switch_tail: T_LBRACE decl_cases . T_RBRACE
  167            | T_LBRACE decl_cases . error

    error     shift, and go to state 358
    T_RBRACE  shift, and go to state 359


State 343

   78 members_methods: members_methods access member_or_method .

    $default  reduce using rule 78 (members_methods)


State 344

   94 anonymous_union: T_UNION $@6 . union_body $@7 T_SEMI

    T_LBRACE  shift, and go to state 206

    union_body  go to state 360


State 345

   91 variabledef: listspec . T_ID dims
  103 func_header_start: typename listspec . T_ID

    T_ID  shift, and go to state 361


State 346

  102 short_par_func_header: func_header_start T_LPAREN . parameter_types T_RPAREN
  108 nopar_func_header: func_header_start T_LPAREN . T_RPAREN

    T_CHAR    shift, and go to state 6
    T_INT     shift, and go to state 7
    T_FLOAT   shift, and go to state 8
    T_STRING  shift, and go to state 9
    T_VOID    shift, and go to state 11
    T_RPAREN  shift, and go to state 156
    T_ID      shift, and go to state 16

    typename         go to state 362
    standard_type    go to state 20
    parameter_types  go to state 158


State 347

   29 id_list: id_list T_COMMA T_ID initializer .

    $default  reduce using rule 29 (id_list)


State 348

  155 if_tail: T_ELSE . $@11 statement

    $default  reduce using rule 154 ($@11)

    $@11  go to state 363


State 349

  153 if_statement: T_IF T_LPAREN $@9 general_expression T_RPAREN statement $@10 if_tail .

    $default  reduce using rule 153 (if_statement)


State 350

  160 for_statement: T_FOR T_LPAREN $@13 optexpr T_SEMI optexpr T_SEMI optexpr . T_RPAREN statement

    T_RPAREN  shift, and go to state 364


State 351

  175 casestatement: T_CASE constant . T_COLON casestatement
  177              | T_CASE constant . T_COLON $@15 statements

    T_COLON  shift, and go to state 365


State 352

  179 casestatement: T_DEFAULT T_COLON . $@16 statements

    $default  reduce using rule 178 ($@16)

    $@16  go to state 366


State 353

  133 declarations: declarations decltype . typename variabledefs T_SEMI

    T_CHAR    shift, and go to state 6
    T_INT     shift, and go to state 7
    T_FLOAT   shift, and go to state 8
    T_STRING  shift, and go to state 9
    T_VOID    shift, and go to state 11
    T_ID      shift, and go to state 16

    typename       go to state 198
    standard_type  go to state 20


State 354

  169 decl_cases: declarations casestatements .
  173 casestatements: casestatements . casestatement

    T_CASE     shift, and go to state 334
    T_DEFAULT  shift, and go to state 335

    $default  reduce using rule 169 (decl_cases)

    casestatement  go to state 356


State 355

  166 switch_tail: error decl_cases T_RBRACE .

    $default  reduce using rule 166 (switch_tail)


State 356

  173 casestatements: casestatements casestatement .

    $default  reduce using rule 173 (casestatements)


State 357

  180 single_casestatement: T_CASE constant T_COLON . single_casestatement
  182                     | T_CASE constant T_COLON . $@17 statement

    T_CASE  shift, and go to state 307

    $default  reduce using rule 181 ($@17)

    single_casestatement  go to state 367
    $@17                  go to state 368


State 358

  167 switch_tail: T_LBRACE decl_cases error .

    $default  reduce using rule 167 (switch_tail)


State 359

  165 switch_tail: T_LBRACE decl_cases T_RBRACE .

    $default  reduce using rule 165 (switch_tail)


State 360

   94 anonymous_union: T_UNION $@6 union_body . $@7 T_SEMI

    $default  reduce using rule 93 ($@7)

    $@7  go to state 369


State 361

   91 variabledef: listspec T_ID . dims
  103 func_header_start: typename listspec T_ID .

    T_LPAREN  reduce using rule 103 (func_header_start)
    $default  reduce using rule 22 (dims)

    dims  go to state 214


State 362

  105 parameter_types: typename . pass_list_dims

    T_LIST   shift, and go to state 87
    T_REFER  shift, and go to state 299

    $default  reduce using rule 20 (listspec)

    listspec        go to state 300
    pass_list_dims  go to state 223


State 363

  155 if_tail: T_ELSE $@11 . statement

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decltype              go to state 107
    statement             go to state 370
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80


State 364

  160 for_statement: T_FOR T_LPAREN $@13 optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN . statement

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decltype              go to state 107
    statement             go to state 371
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80


State 365

  175 casestatement: T_CASE constant T_COLON . casestatement
  177              | T_CASE constant T_COLON . $@15 statements

    T_CASE     shift, and go to state 334
    T_DEFAULT  shift, and go to state 335

    $default  reduce using rule 176 ($@15)

    casestatement  go to state 372
    $@15           go to state 373


State 366

  179 casestatement: T_DEFAULT T_COLON $@16 . statements

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decltype              go to state 107
    statements            go to state 374
    statement             go to state 72
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80


State 367

  180 single_casestatement: T_CASE constant T_COLON single_casestatement .

    $default  reduce using rule 180 (single_casestatement)


State 368

  182 single_casestatement: T_CASE constant T_COLON $@17 . statement

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decltype              go to state 107
    statement             go to state 375
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80


State 369

   94 anonymous_union: T_UNION $@6 union_body $@7 . T_SEMI

    T_SEMI  shift, and go to state 376


State 370

  155 if_tail: T_ELSE $@11 statement .

    $default  reduce using rule 155 (if_tail)


State 371

  160 for_statement: T_FOR T_LPAREN $@13 optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement .

    $default  reduce using rule 160 (for_statement)


State 372

  175 casestatement: T_CASE constant T_COLON casestatement .

    $default  reduce using rule 175 (casestatement)


State 373

  177 casestatement: T_CASE constant T_COLON $@15 . statements

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    $default  reduce using rule 136 (decltype)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decltype              go to state 107
    statements            go to state 377
    statement             go to state 72
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80


State 374

  137 statements: statements . statement
  179 casestatement: T_DEFAULT T_COLON $@16 statements .

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    T_ID      reduce using rule 136 (decltype)
    $default  reduce using rule 179 (casestatement)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decltype              go to state 107
    statement             go to state 142
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80


State 375

  182 single_casestatement: T_CASE constant T_COLON $@17 statement .

    $default  reduce using rule 182 (single_casestatement)


State 376

   94 anonymous_union: T_UNION $@6 union_body $@7 T_SEMI .

    $default  reduce using rule 94 (anonymous_union)


State 377

  137 statements: statements . statement
  177 casestatement: T_CASE constant T_COLON $@15 statements .

    T_ICONST    shift, and go to state 36
    T_FCONST    shift, and go to state 37
    T_CCONST    shift, and go to state 38
    T_SCONST    shift, and go to state 39
    T_STATIC    shift, and go to state 40
    T_CONTINUE  shift, and go to state 41
    T_BREAK     shift, and go to state 42
    T_IF        shift, and go to state 43
    T_WHILE     shift, and go to state 44
    T_FOR       shift, and go to state 45
    T_SWITCH    shift, and go to state 46
    T_RETURN    shift, and go to state 47
    T_LENGTH    shift, and go to state 48
    T_NEW       shift, and go to state 49
    T_CIN       shift, and go to state 50
    T_COUT      shift, and go to state 51
    T_THIS      shift, and go to state 52
    T_ADDOP     shift, and go to state 53
    T_NOTOP     shift, and go to state 54
    T_INCDEC    shift, and go to state 55
    T_SIZEOP    shift, and go to state 56
    T_LPAREN    shift, and go to state 57
    T_SEMI      shift, and go to state 58
    T_LBRACK    shift, and go to state 59
    T_LBRACE    shift, and go to state 60
    T_LISTFUNC  shift, and go to state 61

    T_ID      reduce using rule 136 (decltype)
    $default  reduce using rule 177 (casestatement)

    expression            go to state 62
    variable              go to state 63
    general_expression    go to state 64
    assignment            go to state 65
    constant              go to state 66
    listexpression        go to state 67
    decltype              go to state 107
    statement             go to state 142
    expression_statement  go to state 73
    if_statement          go to state 74
    while_statement       go to state 75
    for_statement         go to state 76
    switch_statement      go to state 77
    return_statement      go to state 78
    io_statement          go to state 79
    comp_statement        go to state 80
